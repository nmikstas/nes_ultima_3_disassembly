.org $8000

.include "Ultima_3_Defines.asm"

;----------------------------------------------------------------------------------------------------

;Forward declarations.

.alias  Reset1                  $C000
.alias  DisplayText1            $C003
.alias  ShowWindow1             $C015
.alias  FlashAndSound1          $C04E
.alias  RESET                   $FFA0
.alias  ConfigMMC               $FFBC
.alias  NMI                     $FFF0
.alias  IRQ                     $FFF0

;----------------------------------------------------------------------------------------------------

_DrawWindow:
L8000:  LDA #DISABLE
L8002:  STA DisSpriteAnim

L8004:  LDY #$00

L8006:* LDA ScreenBlocks,Y
L8009:  AND #$7F
L800B:  STA BlocksBuffer,Y
L800E:  INY
L800F:  BNE -

L8011:  LDA $29
L8013:  ASL
L8014:  ASL
L8015:  ASL
L8016:  STA $30
L8018:  LDA $2A
L801A:  LSR
L801B:  CLC
L801C:  ADC $30
L801E:  STA $30
L8020:  LDA $11
L8022:  LSR
L8023:  LSR
L8024:  LSR
L8025:  CLC
L8026:  ADC $29
L8028:  CMP #$1D
L802A:  BCC L802F
L802C:  SEC
L802D:  SBC #$1E
L802F:  STA $18
L8031:  LDA $10
L8033:  LSR
L8034:  LDA $0F
L8036:  ROR
L8037:  LSR
L8038:  LSR
L8039:  CLC
L803A:  ADC $2A
L803C:  AND #$3F
L803E:  STA $19
L8040:  LDX #$20
L8042:  CMP #$20
L8044:  BCC L8048
L8046:  LDX #$24
L8048:  TXA
L8049:  PHA
L804A:  LDA $18
L804C:  STA $2A
L804E:  LDA #$00
L8050:  STA $29
L8052:  LSR $2A
L8054:  ROR $29
L8056:  LSR $2A
L8058:  ROR $29
L805A:  LSR $2A
L805C:  ROR $29
L805E:  CLC
L805F:  LDA $19
L8061:  AND #$1F
L8063:  ADC $29
L8065:  STA $29
L8067:  PLA
L8068:  ADC $2A
L806A:  STA $2A
L806C:  LDA $19
L806E:  STA $21
L8070:  LDA $18
L8072:  STA $20
L8074:  LDA $2E
L8076:  STA $2C
L8078:  LDA $2D
L807A:  STA $2B
L807C:  JSR L81D2

L807F:  LDA $2A
L8081:  STA PPUBuffer,X
L8084:  LDA $29
L8086:  INX
L8087:  STA PPUBuffer,X

L808A:  LDA #$7E
L808C:  INX
L808D:  STA PPUBuffer,X
L8090:  DEC $2E
L8092:  JSR L81F0
L8095:  DEC $2E
L8097:  BEQ L80A6
L8099:  LDA #$7F
L809B:  INX
L809C:  STA PPUBuffer,X
L809F:  JSR L81F0
L80A2:  DEC $2E
L80A4:  BNE L8099
L80A6:  LDA #$80
L80A8:  INX
L80A9:  STA PPUBuffer,X

L80AC:  LDA $2C
L80AE:  STA $2E
L80B0:  LDA $21
L80B2:  STA $19
L80B4:  DEC $2D
L80B6:  CLC
L80B7:  LDA $29
L80B9:  ADC #$20
L80BB:  STA $29
L80BD:  LDA $2A
L80BF:  ADC #$00
L80C1:  STA $2A
L80C3:  JSR L81D2
L80C6:  JSR L8239
L80C9:  DEC $2D
L80CB:  BEQ L8105
L80CD:  LDA $2A
L80CF:  STA PPUBuffer,X
L80D2:  INX
L80D3:  LDA $29
L80D5:  STA PPUBuffer,X
L80D8:  INX
L80D9:  LDA #$81
L80DB:  STA PPUBuffer,X
L80DE:  DEC $2E
L80E0:  JSR L81F0
L80E3:  DEC $2E
L80E5:  BEQ L80F4
L80E7:  LDA #$00
L80E9:  INX
L80EA:  STA PPUBuffer,X
L80ED:  JSR L81F0
L80F0:  DEC $2E
L80F2:  BNE L80E7
L80F4:  INX
L80F5:  LDA #$82
L80F7:  STA PPUBuffer,X
L80FA:  LDA $2C
L80FC:  STA $2E
L80FE:  LDA $21
L8100:  STA $19
L8102:  JMP L80B6
L8105:  LDA $2A
L8107:  STA PPUBuffer,X
L810A:  INX
L810B:  LDA $29
L810D:  STA PPUBuffer,X
L8110:  LDA $2B
L8112:  STA $2D
L8114:  LDA #$83
L8116:  INX
L8117:  STA PPUBuffer,X
L811A:  DEC $2E
L811C:  JSR L81F0
L811F:  DEC $2E
L8121:  BEQ L8130
L8123:  LDA #$84
L8125:  INX
L8126:  STA PPUBuffer,X
L8129:  JSR L81F0
L812C:  DEC $2E
L812E:  BNE L8123
L8130:  INX
L8131:  LDA #$85
L8133:  STA PPUBuffer,X
L8136:  LDA $2C
L8138:  STA $2E
L813A:  JSR L90AD
L813D:  LDA $30
L813F:  TAX
L8140:  STA $2F
L8142:  LSR $2E
L8144:  LSR $2D
L8146:  LSR $2C
L8148:  LDA ScreenBlocks,X
L814B:  ORA #$80
L814D:  STA ScreenBlocks,X
L8150:  STA BlocksBuffer,X
L8153:  INX
L8154:  DEC $2E
L8156:  BNE L8148
L8158:  LDA $2C
L815A:  STA $2E
L815C:  CLC
L815D:  LDA $2F
L815F:  ADC #$10
L8161:  STA $2F
L8163:  TAX
L8164:  DEC $2D
L8166:  BNE L8148
L8168:  LDA #$00
L816A:  STA $19
L816C:  STA $18
L816E:  JSR $C02A
L8171:  JSR L8179
L8174:  LDA #ENABLE
L8176:  STA DisSpriteAnim
L8178:  RTS
L8179:  LDA $30
L817B:  PHA
L817C:  LDX #$00
L817E:  LDY #$00
L8180:  LDA SpriteBuffer,X
L8183:  CMP #SPRT_HIDE
L8185:  BEQ L81A6
L8187:  AND #$F0
L8189:  STA $30
L818B:  LDA SpriteBuffer+3,X
L818E:  LSR
L818F:  LSR
L8190:  LSR
L8191:  LSR
L8192:  CLC
L8193:  ADC $30
L8195:  STX $30
L8197:  TAX
L8198:  LDA BlocksBuffer,X
L819B:  BPL L81A4
L819D:  LDX $30
L819F:  LDA #SPRT_HIDE
L81A1:  STA SpriteBuffer,X
L81A4:  LDX $30
L81A6:  CPX #$00
L81A8:  BNE L81AC
L81AA:  LDX #$C0
L81AC:  TXA
L81AD:  CLC
L81AE:  ADC #$04
L81B0:  TAX
L81B1:  BNE L8180
L81B3:  PLA
L81B4:  STA $30
L81B6:  RTS

L81B7:  LDA #SPRT_HIDE
L81B9:  STA SpriteBuffer
L81BC:  LDA #$C4
L81BE:  STA HideUprSprites
L81C0:  JSR L90B7
L81C3:  RTS
L81C4:  RTS
L81C5:  LDA #$F0
L81C7:  LDY #$00
L81C9:  STA $03E0,Y
L81CC:  INY
L81CD:  CPY #$0C
L81CF:  BNE L81C9
L81D1:  RTS
L81D2:  LDA $19
L81D4:  AND #$1F
L81D6:  SEC
L81D7:  SBC #$20
L81D9:  CLC
L81DA:  ADC $2E
L81DC:  BCC L81EA
L81DE:  BEQ L81EA
L81E0:  SBC $2E
L81E2:  EOR #$FF
L81E4:  CLC
L81E5:  ADC #$01
L81E7:  JMP L81EC
L81EA:  LDA $2E
L81EC:  JSR L9072
L81EF:  RTS

L81F0:  INC $19
L81F2:  LDA $19
L81F4:  AND #$1F
L81F6:  BEQ L81F9
L81F8:  RTS
L81F9:  LDA $19
L81FB:  AND #$3F
L81FD:  STA $19
L81FF:  LDA $2E
L8201:  JSR L9072
L8204:  LDA $2A
L8206:  PHA
L8207:  LDA $29
L8209:  PHA
L820A:  LDA $29
L820C:  AND #$E0
L820E:  STA $29
L8210:  LDA $19
L8212:  AND #$20
L8214:  BNE L8220
L8216:  SEC
L8217:  LDA $2A
L8219:  SBC #$04
L821B:  STA $2A
L821D:  JMP L8227
L8220:  CLC
L8221:  LDA $2A
L8223:  ADC #$04
L8225:  STA $2A
L8227:  STA PPUBuffer,X
L822A:  INX
L822B:  LDA $29
L822D:  AND #$E0
L822F:  STA PPUBuffer,X
L8232:  PLA
L8233:  STA $29
L8235:  PLA
L8236:  STA $2A
L8238:  RTS
L8239:  INC $18
L823B:  LDA $18
L823D:  CMP #$1E
L823F:  BEQ L8242
L8241:  RTS
L8242:  LDA $29
L8244:  AND #$1F
L8246:  STA $29
L8248:  LDA $2A
L824A:  AND #$FC
L824C:  STA $2A
L824E:  RTS

L824F:  .byte $8C, $BC, $88, $88, $88, $C0, $00, $00, $BB, $88, $88, $80, $00, $00, $C3, $33
L825F:  .byte $30, $00, $33, $33, $C0, $00, $00, $00, $00, $06, $60, $00, $00, $89, $99, $99
L826F:  .byte $98, $B8, $99, $99, $99, $80, $00, $06, $66, $00, $00, $00, $00, $00, $C3, $33
L827F:  .byte $30, $00, $33, $33, $C0, $00, $00, $00, $00, $06, $60, $00, $00, $00, $00, $11
L828F:  .byte $16, $66, $11, $10, $00, $00, $00, $66, $66, $00, $00, $00, $00, $00, $C3, $33
L829F:  .byte $30, $00, $33, $33, $C0, $00, $00, $00, $00, $06, $60, $00, $00, $00, $01, $11
L82AF:  .byte $16, $66, $11, $11, $00, $00, $06, $66, $60, $00, $00, $00, $00, $00, $C3, $33
L82BF:  .byte $30, $00, $33, $33, $C2, $00, $00, $00, $00, $06, $66, $66, $66, $66, $66, $66
L82CF:  .byte $66, $66, $66, $66, $66, $66, $66, $66, $00, $00, $00, $00, $00, $00, $C3, $33
L82DF:  .byte $30, $00, $33, $33, $C2, $20, $00, $00, $00, $06, $66, $66, $66, $66, $66, $66
L82EF:  .byte $66, $66, $66, $66, $66, $66, $66, $60, $00, $00, $00, $00, $00, $00, $C3, $33
L82FF:  .byte $30, $00, $33, $33, $C2, $22, $00, $00, $00, $00, $00, $00, $00, $00, $00, $11
L830F:  .byte $16, $66, $11, $10, $00, $00, $00, $00, $0C, $88, $88, $88, $C0, $00, $C3, $33
L831F:  .byte $30, $00, $33, $33, $C2, $22, $20, $00, $00, $00, $00, $00, $00, $00, $00, $01
L832F:  .byte $16, $66, $11, $00, $00, $00, $00, $00, $C8, $BB, $BB, $BB, $8C, $00, $C3, $33
L833F:  .byte $30, $00, $33, $33, $C2, $22, $22, $00, $00, $00, $00, $00, $33, $33, $33, $00
L834F:  .byte $16, $66, $10, $03, $33, $33, $30, $00, $CB, $BB, $BB, $BB, $BC, $00, $C3, $33
L835F:  .byte $30, $00, $33, $33, $C2, $22, $22, $2C, $88, $8C, $00, $00, $33, $33, $33, $00
L836F:  .byte $06, $66, $00, $03, $33, $33, $30, $00, $C9, $99, $99, $99, $9C, $00, $C3, $33
L837F:  .byte $30, $00, $33, $33, $C2, $22, $22, $2C, $66, $6C, $10, $00, $33, $33, $33, $00
L838F:  .byte $16, $66, $10, $03, $33, $33, $30, $00, $CB, $BB, $BB, $BB, $BC, $00, $C3, $33
L839F:  .byte $30, $00, $33, $33, $C8, $88, $88, $8C, $66, $6C, $11, $00, $00, $00, $00, $01
L83AF:  .byte $16, $66, $11, $00, $00, $00, $00, $00, $CB, $BB, $BB, $BB, $BC, $00, $C3, $33
L83BF:  .byte $30, $00, $33, $33, $88, $88, $88, $88, $66, $68, $11, $10, $00, $00, $00, $11
L83CF:  .byte $16, $66, $11, $10, $00, $00, $00, $00, $8B, $BB, $BB, $BB, $BC, $00, $C3, $33
L83DF:  .byte $30, $06, $66, $66, $66, $66, $66, $66, $66, $66, $66, $66, $66, $66, $66, $66
L83EF:  .byte $66, $66, $66, $66, $66, $66, $66, $66, $66, $66, $66, $66, $6C, $00, $C3, $33
L83FF:  .byte $30

L8400:  JSR $81B7
L8403:  LDA $00
L8405:  CLC
L8406:  ADC #$02
L8408:  CMP $00
L840A:  BNE L8408
L840C:  LDA #DISABLE
L840E:  STA DisSpriteAnim
L8410:  LDX #$00
L8412:  LDA ScreenBlocks,X
L8415:  STA BlocksBuffer,X
L8418:  AND #$5F
L841A:  STA ScreenBlocks,X
L841D:  INX
L841E:  BNE L8412
L8420:  LDA #$00
L8422:  STA $19
L8424:  STA $18
L8426:  JSR $C02A
L8429:  LDA #$00
L842B:  PHA
L842C:  JSR L843F
L842F:  PLA
L8430:  CLC
L8431:  ADC #$01
L8433:  CMP #$0F
L8435:  BNE L842B
L8437:  JSR L90AD
L843A:  LDA #ENABLE
L843C:  STA DisSpriteAnim
L843E:  RTS
L843F:  ASL
L8440:  STA $29
L8442:  ASL
L8443:  ASL
L8444:  ASL
L8445:  TAX
L8446:  LDA #$FF
L8448:  STA $2A
L844A:  LDY #$00
L844C:  LDA BlocksBuffer,X
L844F:  AND #$A0
L8451:  BEQ L8464
L8453:  STA $30
L8455:  LDA $2A
L8457:  CMP #$FF
L8459:  BNE L8462
L845B:  STY $2A
L845D:  STY $2E
L845F:  JMP L8464
L8462:  STY $2E
L8464:  INX
L8465:  INY
L8466:  CPY #$10
L8468:  BNE L844C
L846A:  LDA $2A
L846C:  CMP #$FF
L846E:  BNE L8471
L8470:  RTS
L8471:  LDA MapProperties
L8473:  AND #$02
L8475:  BEQ L8488
L8477:  LDA $2A
L8479:  CMP #$0A
L847B:  BCC L847E
L847D:  RTS
L847E:  LDA $2E
L8480:  CMP #$0A
L8482:  BCC L8488
L8484:  LDA #$09
L8486:  STA $2E
L8488:  SEC
L8489:  LDA $2E
L848B:  SBC $2A
L848D:  ASL
L848E:  CLC
L848F:  ADC #$02
L8491:  STA $2E
L8493:  LDA #$02
L8495:  STA $2D
L8497:  LDA $2A
L8499:  ASL
L849A:  STA $2A
L849C:  LDA $29
L849E:  ASL
L849F:  ASL
L84A0:  ASL
L84A1:  STA $30
L84A3:  LDA $2A
L84A5:  LSR
L84A6:  CLC
L84A7:  ADC $30
L84A9:  TAY
L84AA:  LDA MapProperties
L84AC:  AND #$01
L84AE:  BEQ L84B3
L84B0:  JMP L8629
L84B3:  LDA $11
L84B5:  LSR
L84B6:  LSR
L84B7:  LSR
L84B8:  CLC
L84B9:  ADC $29
L84BB:  CMP #$1D
L84BD:  BCC L84C2
L84BF:  SEC
L84C0:  SBC #$1E
L84C2:  STA $18
L84C4:  LDA $10
L84C6:  LSR
L84C7:  LDA $0F
L84C9:  ROR
L84CA:  LSR
L84CB:  LSR
L84CC:  CLC
L84CD:  ADC $2A
L84CF:  AND #$3F
L84D1:  STA $19
L84D3:  LDX #$20
L84D5:  CMP #$20
L84D7:  BCC L84DB
L84D9:  LDX #$24
L84DB:  TXA
L84DC:  PHA
L84DD:  LDA $18
L84DF:  STA $2A
L84E1:  LDA #$00
L84E3:  STA $29
L84E5:  LSR $2A
L84E7:  ROR $29
L84E9:  LSR $2A
L84EB:  ROR $29
L84ED:  LSR $2A
L84EF:  ROR $29
L84F1:  CLC
L84F2:  LDA $19
L84F4:  AND #$1F
L84F6:  ADC $29
L84F8:  STA $29
L84FA:  PLA
L84FB:  ADC $2A
L84FD:  STA $2A
L84FF:  LDA $19
L8501:  STA $21
L8503:  LDA $18
L8505:  STA $20
L8507:  LDA $2E
L8509:  STA $2C
L850B:  LDA $2D
L850D:  STA $2B
L850F:  TYA
L8510:  PHA
L8511:  JSR L81D2
L8514:  LDA $2A
L8516:  STA PPUBuffer,X
L8519:  INX
L851A:  LDA $29
L851C:  STA PPUBuffer,X
L851F:  LDA ScreenBlocks,Y
L8522:  AND #$10
L8524:  BEQ L8530
L8526:  LDA #$00
L8528:  STA $A7
L852A:  JSR L8612
L852D:  JMP L853E
L8530:  LDA ScreenBlocks,Y
L8533:  AND #$0F
L8535:  ASL
L8536:  ASL
L8537:  CLC
L8538:  ADC #$A4
L853A:  INX
L853B:  STA PPUBuffer,X
L853E:  DEC $2E
L8540:  JSR L81F0
L8543:  LDA ScreenBlocks,Y
L8546:  AND #$10
L8548:  BEQ L8554
L854A:  LDA #$02
L854C:  STA $A7
L854E:  JSR L8612
L8551:  JMP L8562
L8554:  LDA ScreenBlocks,Y
L8557:  AND #$0F
L8559:  ASL
L855A:  ASL
L855B:  CLC
L855C:  ADC #$A6
L855E:  INX
L855F:  STA PPUBuffer,X
L8562:  DEC $2E
L8564:  BEQ L856E
L8566:  JSR L81F0
L8569:  INY
L856A:  LDA $2E
L856C:  BNE L851F
L856E:  LDA $2C
L8570:  STA $2E
L8572:  LDA $21
L8574:  STA $19
L8576:  CLC
L8577:  LDA $29
L8579:  ADC #$20
L857B:  STA $29
L857D:  LDA $2A
L857F:  ADC #$00
L8581:  STA $2A
L8583:  JSR L8239
L8586:  PLA
L8587:  DEC $2D
L8589:  BNE L858E
L858B:  JMP L8611
L858E:  PHA
L858F:  TAY
L8590:  JSR L81D2
L8593:  LDA $2A
L8595:  STA PPUBuffer,X
L8598:  INX
L8599:  LDA $29
L859B:  STA PPUBuffer,X
L859E:  LDA ScreenBlocks,Y
L85A1:  AND #$10
L85A3:  BEQ L85AF
L85A5:  LDA #$01
L85A7:  STA $A7
L85A9:  JSR L8612
L85AC:  JMP L85BD
L85AF:  LDA ScreenBlocks,Y
L85B2:  AND #$0F
L85B4:  ASL
L85B5:  ASL
L85B6:  SEC
L85B7:  ADC #$A4
L85B9:  INX
L85BA:  STA PPUBuffer,X
L85BD:  DEC $2E
L85BF:  JSR L81F0
L85C2:  LDA ScreenBlocks,Y
L85C5:  AND #$10
L85C7:  BEQ L85D3
L85C9:  LDA #$03
L85CB:  STA $A7
L85CD:  JSR L8612
L85D0:  JMP L85E1
L85D3:  LDA ScreenBlocks,Y
L85D6:  AND #$0F
L85D8:  ASL
L85D9:  ASL
L85DA:  SEC
L85DB:  ADC #$A6
L85DD:  INX
L85DE:  STA PPUBuffer,X
L85E1:  DEC $2E
L85E3:  BEQ L85ED
L85E5:  JSR L81F0
L85E8:  INY
L85E9:  LDA $2E
L85EB:  BNE L859E
L85ED:  LDA $2C
L85EF:  STA $2E
L85F1:  LDA $21
L85F3:  STA $19
L85F5:  CLC
L85F6:  LDA $29
L85F8:  ADC #$20
L85FA:  STA $29
L85FC:  LDA $2A
L85FE:  ADC #$00
L8600:  STA $2A
L8602:  PLA
L8603:  CLC
L8604:  ADC #$10
L8606:  TAY
L8607:  JSR L8239
L860A:  DEC $2D
L860C:  BEQ L8611
L860E:  JMP L850F
L8611:  RTS
L8612:  TYA
L8613:  PHA
L8614:  LDA ScreenBlocks,Y
L8617:  AND #$0F
L8619:  ASL
L861A:  ASL
L861B:  CLC
L861C:  ADC $A7
L861E:  TAY
L861F:  LDA L9032,Y
L8622:  INX
L8623:  STA PPUBuffer,X
L8626:  PLA
L8627:  TAY
L8628:  RTS
L8629:  LDA #$D4
L862B:  STA HideUprSprites
L862D:  JSR L90B7
L8630:  LDA $03
L8632:  AND #$FE
L8634:  STA $03
L8636:  LDA #DISABLE
L8638:  STA DisSpriteAnim
L863A:  LDA $2A
L863C:  STA $19
L863E:  LDA #$00
L8640:  STA $2A
L8642:  ASL $29
L8644:  ROL $2A
L8646:  ASL $29
L8648:  ROL $2A
L864A:  ASL $29
L864C:  ROL $2A
L864E:  ASL $29
L8650:  ROL $2A
L8652:  ASL $29
L8654:  ROL $2A
L8656:  CLC
L8657:  LDA $29
L8659:  ADC $19
L865B:  STA $29
L865D:  CLC
L865E:  LDA $2A
L8660:  ADC #$24
L8662:  STA $2A
L8664:  LDA $2E
L8666:  JSR L9072
L8669:  LDA $2A
L866B:  STA PPUBuffer,X
L866E:  INX
L866F:  LDA $29
L8671:  STA PPUBuffer,X
L8674:  INX
L8675:  LDY $2E
L8677:  LDA #$00
L8679:  STA PPUBuffer,X
L867C:  INX
L867D:  DEY
L867E:  BNE L8677
L8680:  CLC
L8681:  LDA $29
L8683:  ADC #$20
L8685:  STA $29
L8687:  LDA $2A
L8689:  ADC #$00
L868B:  STA $2A
L868D:  DEC $2D
L868F:  BNE L8664
L8691:  JMP L8611

L8694:  .byte $80, $00, $00, $88, $88, $88, $81, $11, $1C, $33, $33, $30, $00, $33, $33, $38
L86A4:  .byte $C0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $CB, $BB, $BB, $BB, $C0, $00
L86B4:  .byte $00, $00, $00, $00, $11, $11, $11, $11, $C8, $33, $33, $30, $00, $33, $33, $33
L86C4:  .byte $C0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $88, $88, $88, $88, $80, $00
L86D4:  .byte $00, $00, $00, $00, $01, $11, $11, $11, $C3, $33, $33, $30, $00, $03, $33, $33
L86E4:  .byte $8C, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
L86F4:  .byte $00, $00, $00, $00, $01, $11, $11, $1C, $83, $33, $33, $00, $00, $03, $33, $33
L8704:  .byte $38, $8C, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
L8714:  .byte $00, $00, $00, $00, $11, $11, $1C, $88, $33, $33, $33, $00, $00, $03, $33, $33
L8724:  .byte $33, $38, $88, $C0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
L8734:  .byte $00, $00, $00, $01, $11, $C8, $88, $33, $33, $33, $33, $00, $00, $00, $33, $33
L8744:  .byte $33, $33, $33, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88
L8754:  .byte $88, $88, $88, $88, $88, $83, $33, $33, $33, $33, $30, $00, $00, $00, $33, $33
L8764:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33
L8774:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $30, $00, $00, $00, $03, $33
L8784:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33
L8794:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $00, $00, $00, $00, $00, $03
L87A4:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33
L87B4:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $00, $00, $00, $00, $00, $00, $00
L87C4:  .byte $00, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33
L87D4:  .byte $33, $33, $33, $33, $33, $33, $33, $30, $00, $00, $00, $00, $00, $00, $00, $00
L87E4:  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
L87F4:  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00

L8800:  LDA #$78
L8802:  STA $42
L8804:  LDA #$00
L8806:  STA $41
L8808:  SEC
L8809:  LDA $49
L880B:  SBC #$07
L880D:  STA $47
L880F:  SEC
L8810:  LDA $4A
L8812:  SBC #$0F
L8814:  STA $48
L8816:  LDA #$00
L8818:  STA $30
L881A:  LDA #$20
L881C:  STA $2A
L881E:  LDA #$00
L8820:  STA $29
L8822:  JSR L88C0
L8825:  LDA #$00
L8827:  STA $72
L8829:  STA $71
L882B:  JSR $C02D
L882E:  LDY #$00
L8830:  LDA $0600,Y
L8833:  STA ScreenBlocks,Y
L8836:  INY
L8837:  BNE L8830
L8839:  LDA #$10
L883B:  STA $72
L883D:  LDA #$00
L883F:  STA $71
L8841:  JSR $C02D
L8844:  SEC
L8845:  LDA $49
L8847:  SBC #$07
L8849:  STA $47
L884B:  SEC
L884C:  LDA $4A
L884E:  SBC #$07
L8850:  STA $48
L8852:  JSR L8924
L8855:  JSR $C030
L8858:  LDA #$08
L885A:  STA $72
L885C:  LDA #$00
L885E:  STA $71
L8860:  JSR $C02D
L8863:  SEC
L8864:  LDA $4A
L8866:  SBC #$0F
L8868:  STA $48
L886A:  SEC
L886B:  LDA $49
L886D:  SBC #$0F
L886F:  STA $47
L8871:  LDX #$00
L8873:  LDA $88B4,X
L8876:  STA $06D0,X
L8879:  INX
L887A:  CPX #$0C
L887C:  BNE L8873
L887E:  LDX #$00
L8880:  LDA #$00
L8882:  STA $7345,X
L8885:  INX
L8886:  INX
L8887:  INX
L8888:  INX
L8889:  CPX #$80
L888B:  BNE L8880
L888D:  JSR $C033
L8890:  LDA #$80
L8892:  STA $0F
L8894:  STA $13
L8896:  LDA #$00
L8898:  STA $11
L889A:  STA $15
L889C:  LDA $03
L889E:  AND #$FC
L88A0:  STA $03
L88A2:  LDA #$00
L88A4:  STA $19
L88A6:  STA $18
L88A8:  JSR $C02A
L88AB:  LDA #ENABLE
L88AD:  STA DisSpriteAnim
L88AF:  LDA #$1E
L88B1:  STA $04
L88B3:  RTS

L88B4:  .byte $70, $70, $70, $70, $F0, $F0, $F0, $F0, $F0, $F0, $F0, $F0

L88C0:  LDA #$00
L88C2:  STA $2E
L88C4:  STA $2D
L88C6:  LDA $4A
L88C8:  CLC
L88C9:  ADC #$01
L88CB:  STA $48
L88CD:  JSR L8D00
L88D0:  LDX #$00
L88D2:  LDA $4F,X
L88D4:  STA $5F,X
L88D6:  INX
L88D7:  CPX #$10
L88D9:  BNE L88D2
L88DB:  SEC
L88DC:  LDA $48
L88DE:  SBC #$10
L88E0:  STA $48
L88E2:  JSR L8D00
L88E5:  JSR L8E5E
L88E8:  CLC
L88E9:  LDA $29
L88EB:  ADC #$20
L88ED:  STA $29
L88EF:  LDA $2A
L88F1:  ADC #$00
L88F3:  STA $2A
L88F5:  LDA $2E
L88F7:  ASL
L88F8:  ASL
L88F9:  ASL
L88FA:  ASL
L88FB:  TAX
L88FC:  LDY #$00
L88FE:  JSR $C036
L8901:  STA ScreenBlocks,X
L8904:  INY
L8905:  INX
L8906:  CPY #$10
L8908:  BNE L88FE
L890A:  JSR $C036
L890D:  STA $0600,X
L8910:  INY
L8911:  INX
L8912:  CPY #$12
L8914:  BNE L890A
L8916:  INC $47
L8918:  INC $2E
L891A:  LDA $2E
L891C:  CMP #$0F
L891E:  BEQ L8923
L8920:  JMP L88C6
L8923:  RTS
L8924:  LDA #$00
L8926:  STA $2E
L8928:  STA $2D
L892A:  JSR L8D00
L892D:  LDA $2E
L892F:  ASL
L8930:  ASL
L8931:  ASL
L8932:  ASL
L8933:  TAX
L8934:  LDY #$00
L8936:  JSR $C036
L8939:  STA ScreenBlocks,X
L893C:  INY
L893D:  INX
L893E:  CPY #$10
L8940:  BNE L8936
L8942:  INC $47
L8944:  INC $2E
L8946:  LDA $2E
L8948:  CMP #$0F
L894A:  BEQ L894F
L894C:  JMP L892A
L894F:  RTS

L8950:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $00, $00, $00, $00, $00, $00
L8960:  .byte $00, $00, $00, $00, $00, $03, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33
L8970:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $30, $00, $00, $00, $00, $00
L8980:  .byte $00, $00, $00, $00, $00, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33
L8990:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $00, $00, $00, $00, $00
L89A0:  .byte $00, $00, $00, $00, $00, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33
L89B0:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $00, $00, $00, $00, $00
L89C0:  .byte $00, $00, $00, $00, $03, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33
L89D0:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $30, $00, $00, $00, $00
L89E0:  .byte $00, $00, $00, $00, $03, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33
L89F0:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $30, $00, $00, $00, $00

L8A00:  LDA $48
L8A02:  PHA
L8A03:  LDA $47
L8A05:  PHA
L8A06:  LDX #$00
L8A08:  LDA $48
L8A0A:  AND #$3F
L8A0C:  STA $48
L8A0E:  LDA $47
L8A10:  AND #$3F
L8A12:  STA $47
L8A14:  LDA $48
L8A16:  AND #$01
L8A18:  BNE L8A5D
L8A1A:  JSR L9000
L8A1D:  LDA ($43),Y
L8A1F:  AND #$F0
L8A21:  LSR
L8A22:  LSR
L8A23:  LSR
L8A24:  LSR
L8A25:  JSR L8B42
L8A28:  STA $4F,X
L8A2A:  INC $47
L8A2C:  LDA $47
L8A2E:  CMP #$40
L8A30:  BNE L8A3C
L8A32:  LDA #$00
L8A34:  STA $47
L8A36:  JSR L9000
L8A39:  JMP L8A49
L8A3C:  CLC
L8A3D:  LDA $43
L8A3F:  ADC #$20
L8A41:  STA $43
L8A43:  LDA $44
L8A45:  ADC #$00
L8A47:  STA $44
L8A49:  INX
L8A4A:  CPX #$0F
L8A4C:  BNE L8A1D
L8A4E:  JMP L8A8A
L8A51:  LDA #$00
L8A53:  STA $4F,X
L8A55:  INX
L8A56:  CPX #$0F
L8A58:  BNE L8A51
L8A5A:  JMP L8A8A
L8A5D:  JSR L9000
L8A60:  LDA ($43),Y
L8A62:  AND #$0F
L8A64:  JSR L8ABE
L8A67:  STA $4F,X
L8A69:  CLC
L8A6A:  LDA $43
L8A6C:  ADC #$20
L8A6E:  STA $43
L8A70:  LDA $44
L8A72:  ADC #$00
L8A74:  STA $44
L8A76:  INC $47
L8A78:  LDA $47
L8A7A:  CMP #$40
L8A7C:  BNE L8A85
L8A7E:  LDA #$00
L8A80:  STA $47
L8A82:  JSR L9000
L8A85:  INX
L8A86:  CPX #$0F
L8A88:  BNE L8A60
L8A8A:  PLA
L8A8B:  STA $47
L8A8D:  PLA
L8A8E:  STA $48
L8A90:  RTS
L8A91:  LDA $47
L8A93:  EOR #$FF
L8A95:  LSR
L8A96:  TAY
L8A97:  BEQ L8AA9
L8A99:  LDA #$00
L8A9B:  STA $4F,X
L8A9D:  INC $47
L8A9F:  INC $47
L8AA1:  INX
L8AA2:  CPX #$08
L8AA4:  BEQ L8A8A
L8AA6:  DEY
L8AA7:  BNE L8A99
L8AA9:  LDA $47
L8AAB:  BNE L8AB0
L8AAD:  JMP L8A14
L8AB0:  LDA #$00
L8AB2:  STA $4F,X
L8AB4:  STA $47
L8AB6:  JSR L9000
L8AB9:  LDY #$00
L8ABB:  JMP L8A60
L8ABE:  CMP #$03
L8AC0:  BEQ L8AC3
L8AC2:  RTS
L8AC3:  LDA $48
L8AC5:  PHA
L8AC6:  LDA $47
L8AC8:  PHA
L8AC9:  LDA $43
L8ACB:  PHA
L8ACC:  LDA $44
L8ACE:  PHA
L8ACF:  TYA
L8AD0:  PHA
L8AD1:  LDA #$00
L8AD3:  STA $A7
L8AD5:  INC $47
L8AD7:  JSR L9000
L8ADA:  PLA
L8ADB:  PHA
L8ADC:  TAY
L8ADD:  LDA ($43),Y
L8ADF:  AND #$0F
L8AE1:  CMP #$03
L8AE3:  BEQ L8AEB
L8AE5:  LDA #$10
L8AE7:  ORA $A7
L8AE9:  STA $A7
L8AEB:  DEC $47
L8AED:  DEC $47
L8AEF:  JSR L9000
L8AF2:  PLA
L8AF3:  PHA
L8AF4:  TAY
L8AF5:  LDA ($43),Y
L8AF7:  AND #$0F
L8AF9:  CMP #$03
L8AFB:  BEQ L8B03
L8AFD:  LDA #$20
L8AFF:  ORA $A7
L8B01:  STA $A7
L8B03:  INC $47
L8B05:  JSR L9000
L8B08:  PLA
L8B09:  PHA
L8B0A:  CLC
L8B0B:  ADC #$01
L8B0D:  AND #$1F
L8B0F:  TAY
L8B10:  LDA ($43),Y
L8B12:  AND #$F0
L8B14:  CMP #$30
L8B16:  BEQ L8B1E
L8B18:  LDA #$40
L8B1A:  ORA $A7
L8B1C:  STA $A7
L8B1E:  PLA
L8B1F:  PHA
L8B20:  TAY
L8B21:  LDA ($43),Y
L8B23:  AND #$F0
L8B25:  CMP #$30
L8B27:  BEQ L8B2F
L8B29:  LDA #$80
L8B2B:  ORA $A7
L8B2D:  STA $A7
L8B2F:  PLA
L8B30:  TAY
L8B31:  PLA
L8B32:  STA $44
L8B34:  PLA
L8B35:  STA $43
L8B37:  PLA
L8B38:  STA $47
L8B3A:  PLA
L8B3B:  STA $48
L8B3D:  LDA $A7
L8B3F:  ORA #$03
L8B41:  RTS
L8B42:  CMP #$03
L8B44:  BEQ L8B47
L8B46:  RTS
L8B47:  LDA $48
L8B49:  PHA
L8B4A:  LDA $47
L8B4C:  PHA
L8B4D:  LDA $43
L8B4F:  PHA
L8B50:  LDA $44
L8B52:  PHA
L8B53:  TYA
L8B54:  PHA
L8B55:  LDA #$00
L8B57:  STA $A7
L8B59:  INC $47
L8B5B:  JSR L9000
L8B5E:  PLA
L8B5F:  PHA
L8B60:  TAY
L8B61:  LDA ($43),Y
L8B63:  AND #$F0
L8B65:  CMP #$30
L8B67:  BEQ L8B6F
L8B69:  LDA #$10
L8B6B:  ORA $A7
L8B6D:  STA $A7
L8B6F:  DEC $47
L8B71:  DEC $47
L8B73:  JSR L9000
L8B76:  PLA
L8B77:  PHA
L8B78:  TAY
L8B79:  LDA ($43),Y
L8B7B:  AND #$F0
L8B7D:  CMP #$30
L8B7F:  BEQ L8B87
L8B81:  LDA #$20
L8B83:  ORA $A7
L8B85:  STA $A7
L8B87:  INC $47
L8B89:  JSR L9000
L8B8C:  PLA
L8B8D:  PHA
L8B8E:  TAY
L8B8F:  LDA ($43),Y
L8B91:  AND #$0F
L8B93:  CMP #$03
L8B95:  BEQ L8B9D
L8B97:  LDA #$40
L8B99:  ORA $A7
L8B9B:  STA $A7
L8B9D:  PLA
L8B9E:  PHA
L8B9F:  SEC
L8BA0:  SBC #$01
L8BA2:  AND #$1F
L8BA4:  TAY
L8BA5:  LDA ($43),Y
L8BA7:  AND #$0F
L8BA9:  CMP #$03
L8BAB:  BEQ L8BB3
L8BAD:  LDA #$80
L8BAF:  ORA $A7
L8BB1:  STA $A7
L8BB3:  PLA
L8BB4:  TAY
L8BB5:  PLA
L8BB6:  STA $44
L8BB8:  PLA
L8BB9:  STA $43
L8BBB:  PLA
L8BBC:  STA $47
L8BBE:  PLA
L8BBF:  STA $48
L8BC1:  LDA $A7
L8BC3:  ORA #$03
L8BC5:  RTS

L8BC6:  .byte $99, $99, $99, $11, $00, $00, $01, $11, $66, $61, $11, $11, $11, $16, $66, $61
L8BD6:  .byte $11, $00, $33, $33, $33, $33, $00, $00, $00, $00, $00, $00, $00, $66, $66, $66
L8BE6:  .byte $66, $66, $66, $66, $66, $66, $66, $66, $66, $66, $66, $66, $66, $66, $66, $61
L8BF6:  .byte $10, $00, $33, $33, $33, $33, $00, $00, $00, $00

L8C00:  LDA $15
L8C02:  LSR
L8C03:  LSR
L8C04:  LSR
L8C05:  LSR
L8C06:  TAY
L8C07:  BEQ L8C2F
L8C09:  LDX #$00
L8C0B:  LDA $4F,X
L8C0D:  STA $0600,Y
L8C10:  INX
L8C11:  INY
L8C12:  CPY #$0F
L8C14:  BNE L8C0B
L8C16:  LDY #$00
L8C18:  LDA $4F,X
L8C1A:  STA $0600,Y
L8C1D:  INX
L8C1E:  INY
L8C1F:  CPX #$0F
L8C21:  BNE L8C18
L8C23:  LDX #$00
L8C25:  LDA $0600,X
L8C28:  STA $4F,X
L8C2A:  INX
L8C2B:  CPX #$0F
L8C2D:  BNE L8C25
L8C2F:  LDA $72
L8C31:  LDX #$24
L8C33:  AND #$10
L8C35:  BNE L8C39
L8C37:  LDX #$20
L8C39:  STX $2A
L8C3B:  LDA $72
L8C3D:  AND #$0F
L8C3F:  ASL
L8C40:  STA $29
L8C42:  LDA #$00
L8C44:  STA $2C
L8C46:  LDA #$1E
L8C48:  JSR L9072
L8C4B:  LDA $2A
L8C4D:  ORA #$80
L8C4F:  STA PPUBuffer,X
L8C52:  LDA $29
L8C54:  INX
L8C55:  STA PPUBuffer,X
L8C58:  INX
L8C59:  LDY #$00
L8C5B:  LDA $004F,Y
L8C5E:  AND #$F0
L8C60:  BEQ L8C68
L8C62:  JSR L8C93
L8C65:  JMP L8C7D
L8C68:  LDA $004F,Y
L8C6B:  ASL
L8C6C:  ASL
L8C6D:  CLC
L8C6E:  ADC #$A4
L8C70:  ADC $2C
L8C72:  STA PPUBuffer,X
L8C75:  INX
L8C76:  CLC
L8C77:  ADC #$01
L8C79:  STA PPUBuffer,X
L8C7C:  INX
L8C7D:  INY
L8C7E:  CPY #$0F
L8C80:  BNE L8C5B
L8C82:  LDA $2C
L8C84:  BNE L8C8F
L8C86:  INC $2C
L8C88:  INC $2C
L8C8A:  INC $29
L8C8C:  JMP L8C46
L8C8F:  JSR L90AD
L8C92:  RTS
L8C93:  PHA
L8C94:  TYA
L8C95:  STA $0302,X
L8C98:  PLA
L8C99:  AND #$F0
L8C9B:  LSR
L8C9C:  LSR
L8C9D:  CLC
L8C9E:  ADC $2C
L8CA0:  TAY
L8CA1:  LDA L9032,Y
L8CA4:  STA PPUBuffer,X
L8CA7:  INX
L8CA8:  INY
L8CA9:  LDA L9032,Y
L8CAC:  STA PPUBuffer,X
L8CAF:  INX
L8CB0:  LDA PPUBuffer,X
L8CB3:  TAY
L8CB4:  RTS

L8CB5:  .byte $11, $11, $10, $33, $33, $33, $33, $00, $00, $00, $00, $00, $00, $00, $03, $33
L8CC5:  .byte $33, $33, $33, $00, $00, $00, $11, $11, $11, $C8, $8B, $BB, $88, $C1, $11, $11
L8CD5:  .byte $11, $11, $11, $33, $33, $33, $33, $00, $00, $00, $00, $00, $00, $00, $03, $33
L8CE5:  .byte $33, $33, $33, $30, $00, $01, $11, $1C, $88, $8B, $BB, $BB, $BB, $88, $8C, $11
L8CF5:  .byte $11, $11, $13, $33, $33, $33, $33, $00, $00, $00, $00

L8D00:  LDA $48
L8D02:  PHA
L8D03:  LDA $47
L8D05:  PHA
L8D06:  LDX #$00
L8D08:  LDA $48
L8D0A:  AND #$3F
L8D0C:  STA $48
L8D0E:  LDA $47
L8D10:  AND #$3F
L8D12:  STA $47
L8D14:  JSR L9000
L8D17:  LDA $48
L8D19:  AND #$01
L8D1B:  BNE L8D2F
L8D1D:  LDA ($43),Y
L8D1F:  AND #$F0
L8D21:  LSR
L8D22:  LSR
L8D23:  LSR
L8D24:  LSR
L8D25:  JSR L8B42
L8D28:  STA $4F,X
L8D2A:  INX
L8D2B:  CPX #$10
L8D2D:  BEQ L8D45
L8D2F:  LDA ($43),Y
L8D31:  AND #$0F
L8D33:  JSR L8ABE
L8D36:  STA $4F,X
L8D38:  INY
L8D39:  TYA
L8D3A:  AND #$1F
L8D3C:  TAY
L8D3D:  INX
L8D3E:  CPX #$10
L8D40:  BNE L8D1D
L8D42:  JMP L8D45
L8D45:  PLA
L8D46:  STA $47
L8D48:  PLA
L8D49:  STA $48
L8D4B:  RTS

L8D4C:  .byte $1C, $BB, $BB, $BB, $BB, $BB, $BB, $BC, $B8, $B8, $BC, $03, $33, $33, $33, $33
L8D5C:  .byte $00, $00, $00, $00, $00, $00, $00, $00, $33, $33, $33, $33, $33, $00, $00, $11
L8D6C:  .byte $1C, $BB, $BB, $BB, $BB, $BB, $BB, $BC, $AA, $AA, $AC, $33, $33, $33, $33, $33
L8D7C:  .byte $00, $00, $00, $00, $00, $00, $00, $00, $33, $33, $33, $33, $33, $30, $00, $11
L8D8C:  .byte $1C, $99, $99, $BB, $BB, $B9, $99, $9C, $CA, $AA, $C8, $33, $33, $33, $33, $33
L8D9C:  .byte $00, $00, $00, $00, $00, $00, $00, $00, $33, $33, $33, $33, $33, $33, $00, $01
L8DAC:  .byte $1C, $BB, $B9, $BB, $BB, $B9, $BB, $BC, $CC, $AC, $83, $33, $33, $33, $33, $33
L8DBC:  .byte $00, $00, $00, $00, $00, $00, $00, $00, $33, $33, $33, $33, $33, $33, $33, $00
L8DCC:  .byte $18, $CB, $B9, $BB, $BB, $B9, $BB, $C8, $88, $88, $33, $33, $33, $33, $33, $33
L8DDC:  .byte $00, $00, $00, $00, $00, $00, $00, $00, $03, $33, $33, $33, $33, $33, $33, $30
L8DEC:  .byte $11, $88, $88, $88, $88, $88, $88, $83, $33, $33, $33, $33, $33, $33, $33, $30
L8DFC:  .byte $00, $00, $00, $00

L8E00:  LDA NTXPosLB16
L8E02:  LSR
L8E03:  LSR
L8E04:  LSR
L8E05:  LSR
L8E06:  STA $2A
L8E08:  LDA CurPPUConfig0
L8E0A:  AND #$01
L8E0C:  BEQ L8E10
L8E0E:  LDA #$10
L8E10:  CLC
L8E11:  ADC $2A
L8E13:  SEC
L8E14:  SBC #$08
L8E16:  AND #$1F
L8E18:  TAY
L8E19:  BEQ L8E41
L8E1B:  LDX #$00
L8E1D:  LDA $4F,X
L8E1F:  STA $0600,Y
L8E22:  INX
L8E23:  INY
L8E24:  CPY #$20
L8E26:  BNE L8E1D
L8E28:  LDY #$00
L8E2A:  LDA $4F,X
L8E2C:  STA $0600,Y
L8E2F:  INX
L8E30:  INY
L8E31:  CPX #$20
L8E33:  BNE L8E2A
L8E35:  LDX #$00
L8E37:  LDA $0600,X
L8E3A:  STA $4F,X
L8E3C:  INX
L8E3D:  CPX #$20
L8E3F:  BNE L8E37
L8E41:  LDA #$20
L8E43:  STA $2C
L8E45:  LDA #$00
L8E47:  STA $2A
L8E49:  LDA $71
L8E4B:  ASL
L8E4C:  ASL
L8E4D:  ASL
L8E4E:  ASL
L8E4F:  ASL
L8E50:  ROL $2A
L8E52:  ASL
L8E53:  ROL $2A
L8E55:  STA $29
L8E57:  CLC
L8E58:  LDA $2A
L8E5A:  ADC $2C
L8E5C:  STA $2A
L8E5E:  LDA #$00
L8E60:  STA $2C
L8E62:  LDA #$20
L8E64:  JSR L9072
L8E67:  LDA $2A
L8E69:  STA PPUBuffer,X
L8E6C:  LDA $29
L8E6E:  INX
L8E6F:  STA PPUBuffer,X
L8E72:  INX
L8E73:  LDY #$00
L8E75:  LDA $004F,Y
L8E78:  AND #$F0
L8E7A:  BEQ L8E82
L8E7C:  JSR L8EED
L8E7F:  JMP L8E97
L8E82:  LDA $004F,Y
L8E85:  ASL
L8E86:  ASL
L8E87:  CLC
L8E88:  ADC #$A4
L8E8A:  ADC $2C
L8E8C:  STA PPUBuffer,X
L8E8F:  INX
L8E90:  CLC
L8E91:  ADC #$02
L8E93:  STA PPUBuffer,X
L8E96:  INX
L8E97:  INY
L8E98:  CPY #$10
L8E9A:  BNE L8E75
L8E9C:  LDA #$20
L8E9E:  JSR L9072
L8EA1:  LDA $2A
L8EA3:  CLC
L8EA4:  ADC #$04
L8EA6:  STA PPUBuffer,X
L8EA9:  LDA $29
L8EAB:  INX
L8EAC:  STA PPUBuffer,X
L8EAF:  INX
L8EB0:  LDY #$10
L8EB2:  LDA $004F,Y
L8EB5:  AND #$F0
L8EB7:  BEQ L8EBF
L8EB9:  JSR L8EED
L8EBC:  JMP L8ED4
L8EBF:  LDA $004F,Y
L8EC2:  ASL
L8EC3:  ASL
L8EC4:  CLC
L8EC5:  ADC #$A4
L8EC7:  ADC $2C
L8EC9:  STA PPUBuffer,X
L8ECC:  INX
L8ECD:  CLC
L8ECE:  ADC #$02
L8ED0:  STA PPUBuffer,X
L8ED3:  INX
L8ED4:  INY
L8ED5:  CPY #$20
L8ED7:  BNE L8EB2
L8ED9:  LDA $2C
L8EDB:  BNE L8EE9
L8EDD:  INC $2C
L8EDF:  CLC
L8EE0:  LDA $29
L8EE2:  ADC #$20
L8EE4:  STA $29
L8EE6:  JMP L8E62
L8EE9:  JSR L90AD
L8EEC:  RTS
L8EED:  PHA
L8EEE:  TYA
L8EEF:  STA $0302,X
L8EF2:  PLA
L8EF3:  AND #$F0
L8EF5:  LSR
L8EF6:  LSR
L8EF7:  CLC
L8EF8:  ADC $2C
L8EFA:  TAY
L8EFB:  LDA L9032,Y
L8EFE:  STA PPUBuffer,X
L8F01:  INX
L8F02:  INY
L8F03:  INY
L8F04:  LDA L9032,Y
L8F07:  STA PPUBuffer,X
L8F0A:  INX
L8F0B:  LDA PPUBuffer,X
L8F0E:  TAY
L8F0F:  RTS

L8F10:  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
L8F20:  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
L8F30:  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
L8F40:  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
L8F50:  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
L8F60:  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
L8F70:  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
L8F80:  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
L8F90:  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
L8FA0:  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
L8FB0:  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
L8FC0:  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
L8FD0:  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
L8FE0:  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
L8FF0:  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00

L9000:  LDA $48
L9002:  AND #$3F
L9004:  STA $48
L9006:  LDA $47
L9008:  AND #$3F
L900A:  STA $47
L900C:  LDA #$00
L900E:  STA $43
L9010:  LDA $47
L9012:  STA $44
L9014:  LSR $44
L9016:  ROR $43
L9018:  ROR $44
L901A:  ROR $43
L901C:  ROR $44
L901E:  ROR $43
L9020:  CLC
L9021:  LDA $43
L9023:  ADC $41
L9025:  STA $43
L9027:  LDA $44
L9029:  ADC $42
L902B:  STA $44
L902D:  LDA $48
L902F:  LSR
L9030:  TAY
L9031:  RTS

L9032:  .byte $B0, $B1, $B2, $B3, $B0, $FA, $B2, $FB, $F6, $B1, $F7, $B3, $F6, $FA, $F7, $FB
L9042:  .byte $B0, $B1, $F8, $F9, $B0, $FA, $F8, $FE, $F6, $B1, $FD, $F9, $F6, $FA, $FD, $FE
L9052:  .byte $F4, $F5, $B2, $B3, $F4, $FF, $B2, $FB, $FC, $F5, $F7, $B3, $FC, $FF, $F7, $FB
L9062:  .byte $F4, $F5, $F8, $F9, $F4, $FF, $F8, $FE, $FC, $F5, $FD, $F9, $FC, $FF, $FD, $FE

L9072:  PHA
L9073:  CLC
L9074:  ADC $0300
L9077:  BCS L908D
L9079:  TAX
L907A:  LDA DisSpriteAnim
L907C:  ORA $9F
L907E:  BEQ L9088
L9080:  TXA
L9081:  CMP #$60
L9083:  BCC L9095
L9085:  JMP L908D
L9088:  TXA
L9089:  CMP #$20
L908B:  BCC L9095
L908D:  LDA #$01
L908F:  STA $0E
L9091:  LDA $0E
L9093:  BNE L9091
L9095:  LDA #$00
L9097:  STA $0E
L9099:  LDX $0300
L909C:  INX
L909D:  CLC
L909E:  PLA
L909F:  ADC #$02
L90A1:  STA PPUBuffer,X
L90A4:  INX
L90A5:  SEC
L90A6:  ADC $0300
L90A9:  STA $0300
L90AC:  RTS
L90AD:  LDA $0300
L90B0:  BEQ L90B6
L90B2:  LDA #$01
L90B4:  STA $0E
L90B6:  RTS
L90B7:  LDX HideUprSprites
L90B9:  LDA #SPRT_HIDE
L90BB:  STA SpriteBuffer,X
L90BE:  INX
L90BF:  INX
L90C0:  INX
L90C1:  INX
L90C2:  BNE L90BB
L90C4:  RTS

L90C5:  .byte $44, $44, $44, $44, $44, $44, $24, $24, $42, $24, $22, $22, $44, $44, $44, $44
L90D5:  .byte $00, $00, $44, $44, $40, $00, $04, $40, $00, $44, $44, $44, $44, $42, $22, $22
L90E5:  .byte $44, $C8, $88, $88, $88, $C4, $22, $24, $22, $44, $24, $42, $44, $44, $44, $40
L90F5:  .byte $00, $04, $44, $44, $44, $00, $04, $00, $00, $04, $44

L9100:  LDA #$00
L9102:  STA $04
L9104:  JSR L8400
L9107:  LDA #$1E
L9109:  JSR L91B8
L910C:  LDA #$92
L910E:  STA $2A
L9110:  LDA #$44
L9112:  STA $29
L9114:  JSR L9264
L9117:  LDX #$00
L9119:  LDA #$FF
L911B:  STA $0400,X
L911E:  LDA #$00
L9120:  STA $0401,X
L9123:  INX
L9124:  INX
L9125:  INX
L9126:  INX
L9127:  CPX #$80
L9129:  BNE L9119
L912B:  LDA $4A
L912D:  SEC
L912E:  SBC #$1E
L9130:  TAX
L9131:  LDA $91C0,X
L9134:  STA $30
L9136:  LDX #$00
L9138:  LDA L91C4,X
L913B:  STA $7344,X
L913E:  INX
L913F:  LDA L91C4,X
L9142:  STA $7344,X
L9145:  INX
L9146:  LDA L91C4,X
L9149:  STA $7344,X
L914C:  INX
L914D:  LDA L91C4,X
L9150:  CLC
L9151:  ADC $30
L9153:  STA $7344,X
L9156:  INX
L9157:  CPX #$80
L9159:  BNE L9138
L915B:  LDA #$92
L915D:  STA $2A
L915F:  LDA #$A7
L9161:  STA $29
L9163:  LDA #$0B
L9165:  STA $2C
L9167:  LDA #$00
L9169:  STA $2B
L916B:  LDA #$00
L916D:  STA $2E
L916F:  LDA #$80
L9171:  STA $2D
L9173:  JSR $C006
L9176:  INC $2C
L9178:  JSR $C006
L917B:  LDA #$92
L917D:  STA $2A
L917F:  LDA #$E7
L9181:  STA $29
L9183:  LDA #$0B
L9185:  STA $2C
L9187:  LDA #$80
L9189:  STA $2B
L918B:  JSR $C006
L918E:  INC $2C
L9190:  JSR $C006
L9193:  LDX #$00
L9195:  LDA #$50
L9197:  STA $7384,X
L919A:  STA $738C,X
L919D:  LDA #$58
L919F:  STA $7388,X
L91A2:  STA $7390,X
L91A5:  TXA
L91A6:  CLC
L91A7:  ADC #$10
L91A9:  TAX
L91AA:  CPX #$40
L91AC:  BNE L9195
L91AE:  LDA #$1E
L91B0:  STA $04
L91B2:  LDA #$3C
L91B4:  JSR L91B8
L91B7:  RTS
L91B8:  CLC
L91B9:  ADC $00
L91BB:  CMP $00
L91BD:  BNE L91BB
L91BF:  RTS


L91C0:  .byte $30, $20, $10, $00

L91C4:  .byte $F0, $00, $00, $00, $F0, $00, $00, $00, $F0, $00, $00, $00
L91D0:  .byte $F0, $00, $00, $00, $F0, $00, $00, $00, $F0, $00, $00, $00, $F0, $00, $00, $00
L91E0:  .byte $F0, $00, $00, $00, $F0, $00, $00, $00, $F0, $00, $00, $00, $F0, $00, $00, $00
L91F0:  .byte $F0, $00, $00, $00, $F0, $00, $00, $00, $F0, $00, $00, $00, $F0, $00, $00, $00
L9200:  .byte $F0, $00, $00, $00, $F0, $90, $03, $40, $F0, $91, $03, $40, $F0, $92, $03, $48
L9210:  .byte $F0, $93, $03, $48, $F0, $98, $03, $50, $F0, $99, $03, $50, $F0, $9A, $03, $58
L9220:  .byte $F0, $9B, $03, $58, $F0, $A0, $03, $60, $F0, $A1, $03, $60, $F0, $A2, $03, $68
L9230:  .byte $F0, $A3, $03, $68, $F0, $A8, $03, $70, $F0, $A9, $03, $70, $F0, $AA, $03, $78
L9240:  .byte $F0, $AB, $03, $78, $2F, $2F, $2F, $2F, $2F, $30, $01, $0C, $2F, $06, $07, $09
L9250:  .byte $2F, $0A, $09, $09, $2F, $30, $01, $26, $2F, $06, $15, $26, $2F, $30, $3F, $2D
L9260:  .byte $2F, $30, $15, $26                                    

L9264:  LDY #$00
L9266:  LDA ($29),Y
L9268:  STA $7500,Y
L926B:  INY
L926C:  CPY #$20
L926E:  BNE L9266
L9270:  LDA #$20
L9272:  JSR L9072
L9275:  LDA #$3F
L9277:  STA PPUBuffer,X
L927A:  INX
L927B:  LDA #$00
L927D:  STA PPUBuffer,X
L9280:  LDY #$00
L9282:  LDA ($29),Y
L9284:  INX
L9285:  STA PPUBuffer,X
L9288:  INY
L9289:  CPY #$20
L928B:  BNE L9282
L928D:  LDA #$01
L928F:  JSR L9072
L9292:  LDA #$00
L9294:  STA PPUBuffer,X
L9297:  INX
L9298:  LDA #$00
L929A:  STA PPUBuffer,X
L929D:  INX
L929E:  LDA #$00
L92A0:  STA PPUBuffer,X
L92A3:  JSR L90AD
L92A6:  RTS

L92A7:  .byte $00, $00, $00, $00, $00, $04, $0E, $0E, $FF, $84, $84, $86, $8F, $FF, $89, $89
L92B7:  .byte $0C, $01, $07, $03, $00, $00, $00, $00, $8B, $8E, $BC, $C7, $84, $82, $82, $FF
L92C7:  .byte $00, $00, $00, $00, $C0, $00, $60, $60, $FF, $19, $11, $31, $E1, $F1, $91, $9D
L92D7:  .byte $70, $30, $E0, $C0, $00, $00, $00, $00, $97, $D1, $21, $E1, $21, $31, $19, $FF
L92E7:  .byte $00, $00, $00, $00, $00, $00, $02, $06, $FF, $84, $84, $86, $8F, $FB, $83, $85
L92F7:  .byte $04, $01, $01, $00, $00, $00, $00, $00, $87, $8E, $B9, $C4, $84, $82, $82, $FF
L9307:  .byte $00, $00, $00, $00, $00, $00, $40, $60, $FF, $19, $11, $31, $21, $F1, $D1, $BD
L9317:  .byte $60, $00, $80, $00, $00, $00, $00, $00, $A7, $C1, $C1, $21, $21, $31, $19, $FF
L9327:  .byte $00, $00, $00, $00, $00, $04, $0E, $0E, $FF, $84, $84, $86, $8F, $FF, $89, $89
L9337:  .byte $0C, $01, $07, $03, $00, $00, $00, $00, $8B, $8E, $BC, $C7, $84, $82, $82, $FF
L9347:  .byte $00, $00, $00, $00, $C0, $00, $60, $60, $FF, $19, $11, $31, $E1, $F1, $91, $9D
L9357:  .byte $70, $30, $E0, $C0, $00, $00, $00, $00, $97, $D1, $21, $E1, $21, $31, $19, $FF
L9367:  .byte $42, $22, $44, $44, $44, $44, $44, $44, $44, $44, $44, $40, $00, $44, $44, $00
L9377:  .byte $04, $44, $44, $44, $44, $44, $47, $74, $44

L9380:  LDA $91
L9382:  STA $99
L9384:  LDA $92
L9386:  STA $9A
L9388:  LDY #CHR_COND
L938A:  LDA #$00
L938C:  STA (CrntChrPtr),Y
L938E:  LDY #CHR_MAX_HP
L9390:  LDA (CrntChrPtr),Y
L9392:  LDY #CHR_HIT_PNTS
L9394:  STA (CrntChrPtr),Y
L9396:  LDA #$08
L9398:  STA MapProperties
L939A:  LDA #MAP_LB_CSTL
L939C:  STA ThisMap
L939E:  LDA #$DA
L93A0:  STA $30
L93A2:  JSR L9474
L93A5:  LDA #$78
L93A7:  JSR L91B8
L93AA:  LDA #$00
L93AC:  STA $BF
L93AE:  JSR L944E
L93B1:  JSR L93ED
L93B4:  LDA #$00
L93B6:  PHA
L93B7:  TAX
L93B8:  LDA $93E9,X
L93BB:  STA $30
L93BD:  JSR L9474
L93C0:  LDA #$B4
L93C2:  JSR L91B8
L93C5:  PLA
L93C6:  CLC
L93C7:  ADC #$01
L93C9:  CMP #$04
L93CB:  BNE L93B6
L93CD:  JSR $C045
L93D0:  LDA #$FF
L93D2:  STA $D8
L93D4:  LDA #$2D
L93D6:  STA $4C
L93D8:  LDA #$12
L93DA:  STA $4B
L93DC:  LDA #$20
L93DE:  STA $4A
L93E0:  LDA #$0F
L93E2:  STA $49
L93E4:  LDA #$00
L93E6:  STA $E2
L93E8:  RTS

L93E9:  .byte $E5, $E6, $E7, $E8

L93ED:  LDA #$00
L93EF:  STA $04
L93F1:  LDX #$00
L93F3:  LDY #$40
L93F5:  JSR L9467
L93F8:  LDX #$00
L93FA:  LDA #$00
L93FC:  STA ScreenBlocks,X
L93FF:  INX
L9400:  BNE L93FA
L9402:  LDA #$07
L9404:  STA $2A
L9406:  LDA #$00
L9408:  STA $29
L940A:  LDA #$20
L940C:  STA $2C
L940E:  LDA #$00
L9410:  STA $2B
L9412:  LDA #$01
L9414:  STA $2E
L9416:  LDA #$00
L9418:  STA $2D
L941A:  JSR $C006
L941D:  INC $2C
L941F:  JSR $C006
L9422:  INC $2C
L9424:  JSR $C006
L9427:  INC $2C
L9429:  JSR $C006
L942C:  LDX #$00
L942E:  LDA #$55
L9430:  STA ScreenBlocks,X
L9433:  INX
L9434:  BNE L942E
L9436:  LDA #$23
L9438:  STA $2C
L943A:  LDA #$C0
L943C:  STA $2B
L943E:  LDA #$00
L9440:  STA $2E
L9442:  LDA #$40
L9444:  STA $2D
L9446:  JSR $C006
L9449:  LDA #$1E
L944B:  STA $04
L944D:  RTS
L944E:  LDA #$00
L9450:  STA $0F
L9452:  STA $10
L9454:  STA $11
L9456:  STA $12
L9458:  STA $13
L945A:  STA $14
L945C:  STA $15
L945E:  STA $16
L9460:  LDA $03
L9462:  AND #$FC
L9464:  STA $03
L9466:  RTS
L9467:  LDA #SPRT_HIDE
L9469:  STA $7300,X
L946C:  INX
L946D:  INX
L946E:  INX
L946F:  INX
L9470:  DEY
L9471:  BNE L9469
L9473:  RTS
L9474:  LDA HideUprSprites
L9476:  STA $C8
L9478:  LDA #$80
L947A:  STA $C7
L947C:  JSR $C00F
L947F:  RTS
L9480:  LDA $B3
L9482:  ASL
L9483:  ASL
L9484:  ASL
L9485:  ASL
L9486:  TAX
L9487:  LDA $7304,X
L948A:  STA $18
L948C:  LDA $7307,X
L948F:  STA $19
L9491:  LDX #$00
L9493:  LDY #$00
L9495:  LDA #$00
L9497:  STA $060C,X
L949A:  STA $0610,X
L949D:  LDA $7304,Y
L94A0:  CMP #$F0
L94A2:  BEQ L94E4
L94A4:  SEC
L94A5:  SBC $18
L94A7:  BCS L94B5
L94A9:  PHA
L94AA:  LDA #$01
L94AC:  STA $0610,X
L94AF:  PLA
L94B0:  EOR #$FF
L94B2:  CLC
L94B3:  ADC #$01
L94B5:  STA $0600,X
L94B8:  STA $0608,X
L94BB:  LDA $7307,Y
L94BE:  SEC
L94BF:  SBC $19
L94C1:  BCS L94CF
L94C3:  PHA
L94C4:  LDA #$01
L94C6:  STA $060C,X
L94C9:  PLA
L94CA:  EOR #$FF
L94CC:  CLC
L94CD:  ADC #$01
L94CF:  STA $0604,X
L94D2:  CLC
L94D3:  ADC $0600,X
L94D6:  STA $0600,X
L94D9:  TYA
L94DA:  CLC
L94DB:  ADC #$10
L94DD:  TAY
L94DE:  INX
L94DF:  CPX #$04
L94E1:  BNE L9495
L94E3:  RTS
L94E4:  LDA #$FF
L94E6:  STA $0600,X
L94E9:  JMP L94D9

L94EC:  .byte $44, $44, $44, $44, $44, $44, $40, $00, $44, $44, $00, $04, $44, $44, $44, $44
L94FC:  .byte $44, $47, $74, $44, $04, $42, $44, $44, $24, $24, $44, $42, $22, $44, $44, $44
L950C:  .byte $44, $44, $44, $44, $44, $44, $40, $00, $44, $44, $00, $04, $44, $44, $44, $44
L951C:  .byte $44, $77, $74, $44, $04, $42, $24, $44, $22, $22, $22, $22, $22, $44, $44, $44
L952C:  .byte $44, $44, $44, $44, $44, $44, $40, $00, $44, $44, $00, $00, $44, $44, $44, $44
L953C:  .byte $47, $77, $74, $44, $04, $44, $22, $44, $42, $44, $24, $42, $22, $44, $44, $44
L954C:  .byte $44, $44, $44, $44, $44, $44, $40, $00, $44, $44, $40, $00, $44, $44, $44, $44
L955C:  .byte $77, $77, $74, $44, $04, $44, $42, $22, $22, $24, $24, $42, $22, $44, $44, $44
L956C:  .byte $44, $44, $44, $44, $44, $44, $40, $00, $44, $44, $40, $00, $04, $44, $44, $44
L957C:  .byte $77, $77, $74, $44, $44, $44, $44, $44, $44, $24, $24, $42, $22, $44, $44, $44
L958C:  .byte $44, $44, $44, $44, $44, $44, $40, $00, $44, $44, $44, $00, $04, $44, $44, $44
L959C:  .byte $77, $77, $74, $44, $44, $44, $44, $44, $22, $22, $24, $42, $22, $44, $44, $44
L95AC:  .byte $22, $24, $44, $22, $44, $44, $40, $00, $44, $44, $44, $00, $00, $44, $44, $44
L95BC:  .byte $77, $77, $74, $44, $44, $44, $44, $44, $42, $24, $44, $42, $22, $44, $44, $42
L95CC:  .byte $22, $22, $44, $42, $44, $44, $40, $00, $44, $44, $44, $40, $00, $44, $44, $44
L95DC:  .byte $77, $77, $74, $44, $44, $44, $44, $44, $42, $44, $22, $42, $22, $22, $22, $22
L95EC:  .byte $22, $22, $22, $22, $24, $44, $40, $00, $44, $44, $44, $40, $00, $04, $44, $44
L95FC:  .byte $77, $77, $74, $44, $44, $44, $44, $42, $22, $22, $24, $42, $22, $44, $24, $44
L960C:  .byte $44, $42, $44, $24, $44, $44, $40, $00, $44, $44, $44, $44, $00, $04, $44, $44
L961C:  .byte $77, $77, $74, $44, $44, $44, $44, $42, $44, $24, $44, $42, $22, $44, $22, $24
L962C:  .byte $22, $22, $44, $24, $44, $44, $40, $00, $04, $44, $44, $44, $00, $00, $44, $44
L963C:  .byte $77, $77, $74, $44, $44, $44, $44, $42, $24, $24, $44, $40, $00, $44, $44, $24
L964C:  .byte $24, $42, $44, $44, $44, $44, $44, $00, $00, $44, $44, $44, $40, $00, $44, $44
L965C:  .byte $77, $77, $74, $44, $44, $44, $44, $44, $22, $24, $44, $00, $00, $04, $44, $24
L966C:  .byte $44, $42, $22, $22, $44, $44, $44, $40, $00, $04, $44, $44, $40, $00, $04, $44
L967C:  .byte $77, $77, $74, $44, $44, $44, $44, $44, $44, $44, $40, $00, $00, $00, $44, $22
L968C:  .byte $22, $22, $44, $44, $42, $22, $22, $44, $00, $00, $44, $44, $44, $00, $04, $44
L969C:  .byte $77, $77, $74, $44, $44, $44, $44, $44, $44, $44, $C9, $99, $99, $99, $C4, $44
L96AC:  .byte $44, $44, $44, $44, $42, $44, $42, $44, $40, $00, $04, $44, $44, $00, $00, $44
L96BC:  .byte $47, $77, $44, $44, $44, $44, $44, $44, $44, $44, $CB, $BB, $BB, $BB, $CA, $AA
L96CC:  .byte $AA, $44, $44, $44, $42, $22, $42, $44, $44, $00, $00, $44, $44, $40, $00, $44
L96DC:  .byte $40, $00, $44, $44, $44, $44, $44, $44, $44, $44, $CA, $AA, $AA, $AA, $8A, $AA
L96EC:  .byte $AA, $44, $44, $44, $44, $42, $22, $22, $44, $40, $00, $04, $44, $40, $00, $04
L96FC:  .byte $00, $00, $04, $44, $44, $44, $44, $44, $44, $44, $CA, $AA, $AA, $AA, $7A, $AA
L970C:  .byte $AA, $22, $22, $22, $22, $22, $44, $42, $44, $44, $00, $04, $44, $44, $00, $00
L971C:  .byte $00, $00, $00, $44, $44, $44, $44, $44, $44, $44, $CA, $AA, $AA, $AA, $CA, $AA
L972C:  .byte $AA, $44, $44, $44, $44, $42, $42, $22, $22, $22, $00, $00, $44, $44, $00, $00
L973C:  .byte $00, $00, $00, $44, $44, $44, $44, $44, $44, $44, $88, $88, $88, $88, $8A, $AA
L974C:  .byte $AA, $44, $44, $42, $22, $22, $42, $42, $42, $44, $40, $00, $04, $40, $00, $04
L975C:  .byte $00, $00, $04, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44
L976C:  .byte $44, $44, $44, $42, $44, $42, $22, $42, $42, $44, $44, $00, $00, $00, $00, $44
L977C:  .byte $40, $00, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44
L978C:  .byte $44, $44, $44, $42, $42, $22, $44, $42, $42, $22, $44, $40, $00, $00, $04, $44
L979C:  .byte $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44
L97AC:  .byte $44, $44, $44, $42, $22, $44, $44, $42, $44, $42, $44, $44, $44, $44, $44, $44
L97BC:  .byte $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44
L97CC:  .byte $44, $44, $44, $44, $42, $22, $22, $22, $44, $42, $44, $44, $44, $44, $44, $44
L97DC:  .byte $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44
L97EC:  .byte $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44
L97FC:  .byte $44, $44, $44, $44

L9800:  LDY #$10
L9802:  LDA $A100,X
L9805:  STA $2007
L9808:  INX
L9809:  DEY
L980A:  BNE L9802
L980C:  RTS

L980D:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33
L981D:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33
L982D:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33
L983D:  .byte $33, $33, $33

L9840:  LDY #$40
L9842:  LDA $A140,X
L9845:  STA $2007
L9848:  INX
L9849:  DEY
L984A:  BNE L9842
L984C:  RTS

L984D:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33
L985D:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33
L986D:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33
L987D:  .byte $33, $33, $33

L9880:  LDA $A07B,Y
L9883:  ASL
L9884:  ASL
L9885:  ASL
L9886:  CLC
L9887:  ADC $7305,X
L988A:  ADC $4E
L988C:  STA $7305,X
L988F:  CLC
L9890:  ADC #$01
L9892:  STA $7309,X
L9895:  ADC #$01
L9897:  STA $730D,X
L989A:  ADC #$01
L989C:  STA $7311,X
L989F:  RTS

L98A0:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33
L98B0:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33

L98C0:  LDA $7305,X
L98C3:  BEQ L98D1
L98C5:  LDA $00
L98C7:  AND #$10
L98C9:  LSR
L98CA:  LSR
L98CB:  STA $7305,X
L98CE:  JMP L988A
L98D1:  RTS

L98D2:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33
L98E2:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33
L98F2:  .byte $33, $33, $33, $33, $33, $11, $00, $00, $00, $33, $33, $33, $33, $33

UpdateSpriteRAM:
L9900:  LDA MapProperties
L9902:  AND #$01
L9904:  BEQ +
L9906:  JMP DungeonSprUpdate    ;($9B45)Update dungeon sprites.

L9909:* LDA $7300
L990C:  STA $0200
L990F:  LDA $7301
L9912:  STA $0201
L9915:  LDA $7302
L9918:  STA $0202
L991B:  LDA $7303
L991E:  STA $0203
L9921:  LDY #$00
L9923:  STY $4D
L9925:  LDA $7307,Y
L9928:  LSR
L9929:  LSR
L992A:  LSR
L992B:  LSR
L992C:  STA $4E
L992E:  LDA $7304,Y
L9931:  CMP #$F0
L9933:  BCC L9938
L9935:  JMP L99DF
L9938:  AND #$F0
L993A:  ORA $4E
L993C:  TAX
L993D:  LDA $0B
L993F:  BNE L9947
L9941:  LDA ScreenBlocks,X
L9944:  JMP L9972
L9947:  STX $BC
L9949:  AND #$0F
L994B:  CMP #$04
L994D:  BCS L995C
L994F:  TAX
L9950:  LDA $9AFC,X
L9953:  ORA $4E
L9955:  TAX
L9956:  LDA $9B05,X
L9959:  JMP L996B
L995C:  TAX
L995D:  LDA $7304,Y
L9960:  LSR
L9961:  LSR
L9962:  LSR
L9963:  LSR
L9964:  ORA $9AFC,X
L9967:  TAX
L9968:  LDA $9B05,X
L996B:  CLC
L996C:  ADC $BC
L996E:  TAX
L996F:  LDA BlocksBuffer,X
L9972:  AND #$E0
L9974:  BNE L99DF
L9976:  LDX $4D
L9978:  INC $4D
L997A:  LDA $7304,Y
L997D:  STA $06D0,X
L9980:  CLC
L9981:  ADC #$08
L9983:  LSR
L9984:  LSR
L9985:  LSR
L9986:  LSR
L9987:  TAX
L9988:  INC $06E0,X
L998B:  LDA $7305,Y
L998E:  STA $0205,Y
L9991:  LDA $7306,Y
L9994:  STA $0206,Y
L9997:  LDA $7307,Y
L999A:  STA $0207,Y
L999D:  LDA $7309,Y
L99A0:  STA $0209,Y
L99A3:  LDA $730A,Y
L99A6:  STA $020A,Y
L99A9:  LDA $730B,Y
L99AC:  STA $020B,Y
L99AF:  LDA $730D,Y
L99B2:  STA $020D,Y
L99B5:  LDA $730E,Y
L99B8:  STA $020E,Y
L99BB:  LDA $730F,Y
L99BE:  STA $020F,Y
L99C1:  LDA $7311,Y
L99C4:  STA $0211,Y
L99C7:  LDA $7312,Y
L99CA:  STA $0212,Y
L99CD:  LDA $7313,Y
L99D0:  STA $0213,Y
L99D3:  TYA
L99D4:  CLC
L99D5:  ADC #$10
L99D7:  TAY
L99D8:  CPY #$C0
L99DA:  BEQ L99F4
L99DC:  JMP L9925
L99DF:  LDX $4D
L99E1:  INC $4D
L99E3:  LDA #$F0
L99E5:  STA $06D0,X
L99E8:  TYA
L99E9:  CLC
L99EA:  ADC #$10
L99EC:  TAY
L99ED:  CPY #$C0
L99EF:  BEQ L99F4
L99F1:  JMP L9925
L99F4:  LDY #$1D
L99F6:  LDA $73C4,Y
L99F9:  STA $02C4,Y
L99FC:  LDA $73E2,Y
L99FF:  STA $02E2,Y
L9A02:  DEY
L9A03:  BNE L99F6
L9A05:  LDA $73C4
L9A08:  STA $02C4
L9A0B:  LDA $73E2
L9A0E:  STA $02E2
L9A11:  LDA $06F0
L9A14:  LSR
L9A15:  LSR
L9A16:  LSR
L9A17:  LSR
L9A18:  TAX
L9A19:  LDA #$04
L9A1B:  CMP $06E0,X
L9A1E:  BCC L9A25
L9A20:  LDA #$F0
L9A22:  STA $06F0
L9A25:  LDA $06F1
L9A28:  LSR
L9A29:  LSR
L9A2A:  LSR
L9A2B:  LSR
L9A2C:  TAX
L9A2D:  LDA #$04
L9A2F:  CMP $06E0,X
L9A32:  BCC L9A39
L9A34:  LDA #$F0
L9A36:  STA $06F1
L9A39:  LDA $06F0
L9A3C:  CMP $06F1
L9A3F:  BNE L9A46
L9A41:  LDA #$F0
L9A43:  STA $06F1
L9A46:  LDX #$00
L9A48:  LDY #$00
L9A4A:  LDA $06E0,X
L9A4D:  SEC
L9A4E:  SBC #$05
L9A50:  BCC L9A9C
L9A52:  STA $06F8
L9A55:  TXA
L9A56:  ASL
L9A57:  ASL
L9A58:  ASL
L9A59:  ASL
L9A5A:  LDY #$00
L9A5C:  CMP $06F0
L9A5F:  BEQ L9A83
L9A61:  INY
L9A62:  CMP $06F1
L9A65:  BEQ L9A83
L9A67:  LDY #$00
L9A69:  LDA #$F0
L9A6B:  CMP $06F0
L9A6E:  BEQ L9A71
L9A70:  INY
L9A71:  TXA
L9A72:  ASL
L9A73:  ASL
L9A74:  ASL
L9A75:  ASL
L9A76:  STA $06F0,Y
L9A79:  LDA #$00
L9A7B:  STA $06F6,Y
L9A7E:  STA $06F4,Y
L9A81:  BEQ L9A9C
L9A83:  LDA $06F6,Y
L9A86:  CMP $06E0,X
L9A89:  BCC L9A8D
L9A8B:  LDA #$FE
L9A8D:  ADC #$01
L9A8F:  STA $06F6,Y
L9A92:  SBC $06F8
L9A95:  BCS L9A99
L9A97:  LDA #$00
L9A99:  STA $06F4,Y
L9A9C:  LDA #$00
L9A9E:  STA $06E0,X
L9AA1:  INX
L9AA2:  CPX #$0F
L9AA4:  BNE L9A4A
L9AA6:  STA $06F8
L9AA9:  STA $06F9
L9AAC:  LDY #$00
L9AAE:  STY $06EF
L9AB1:  LDX #$00
L9AB3:  LDA $06D0,Y
L9AB6:  CLC
L9AB7:  ADC #$08
L9AB9:  AND #$F0
L9ABB:  CMP $06F0
L9ABE:  BEQ L9AE8
L9AC0:  INX
L9AC1:  CMP $06F1
L9AC4:  BEQ L9AE8
L9AC6:  LDA $06D0,Y
L9AC9:  LDX $06EF
L9ACC:  STA $0204,X
L9ACF:  STA $020C,X
L9AD2:  CLC
L9AD3:  ADC #$08
L9AD5:  STA $0208,X
L9AD8:  STA $0210,X
L9ADB:  TXA
L9ADC:  CLC
L9ADD:  ADC #$10
L9ADF:  STA $06EF
L9AE2:  INY
L9AE3:  CPY #$0C
L9AE5:  BNE L9AB1
L9AE7:  RTS

L9AE8:  INC $06F8,X
L9AEB:  LDA $06F8,X
L9AEE:  CMP $06F6,X
L9AF1:  BCS L9AC6
L9AF3:  CMP $06F4,X
L9AF6:  BCC L9AC6
L9AF8:  LDA #$F0
L9AFA:  BCS L9AC9

L9AFC:  .byte $00, $00, $10, $00, $20, $00, $00, $00, $30, $00, $00, $00, $00, $00, $00, $00 
L9B0C:  .byte $00, $01, $01, $01, $01, $01, $01, $01, $00, $00, $FF, $FF, $FF, $FF, $FF, $FF 
L9B1C:  .byte $FF, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 
L9B2C:  .byte $00, $10, $10, $10, $10, $10, $10, $00, $00, $00, $F0, $F0, $F0, $F0, $F0, $F0 
L9B3C:  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00                                 

DungeonSprUpdate:
L9B45:  LDA SpriteBuffer        ;
L9B48:  STA SpriteRAM           ;
L9B4B:  LDA SpriteBuffer+1      ;
L9B4E:  STA SpriteRAM+1         ;Transfer sprite 0 data to sprite RAM.
L9B51:  LDA SpriteBuffer+2      ;
L9B54:  STA SpriteRAM+2         ;
L9B57:  LDA SpriteBuffer+3      ;
L9B5A:  STA SpriteRAM+3         ;

L9B5D:  LDX #$04                ;Start on the second sprite.

L9B5F:  LDA SpriteBuffer+3,X    ;Get the X position of the sprite
L9B62:  LSR                     ;
L9B63:  LSR                     ;
L9B64:  LSR                     ;Shift upper nibble to lower nibble.
L9B65:  LSR                     ;
L9B66:  STA GenByte4E           ;16 block columns.

L9B68:  LDA SpriteBuffer,X      ;Get the Y position of the sprite.
L9B6B:  AND #$F0                ;
L9B6D:  ORA GenByte4E           ;Use upper nibble. 16 blocks rows.
L9B6F:  TAY                     ;

L9B70:  LDA ScreenBlocks,Y      ;Is there a mask in place in this
L9B73:  AND #$E0                ;screen position to hide the sprite?
L9B75:  BEQ +                   ;If not, branch.

L9B77:  LDA #SPRT_HIDE          ;Hide the current sprite off the screen.
L9B79:  STA SpriteRAM,X         ;
L9B7C:  JMP NextDngnSprite      ;($9B97) increment to next sprite.

L9B7F:* LDA SpriteBuffer,X      ;
L9B82:  STA SpriteRAM,X         ;
L9B85:  LDA SpriteBuffer+1,X    ;
L9B88:  STA SpriteRAM+1,X       ;Load sprite data from buffer into sprite RAM.
L9B8B:  LDA SpriteBuffer+2,X    ;
L9B8E:  STA SpriteRAM+2,X       ;
L9B91:  LDA SpriteBuffer+3,X    ;
L9B94:  STA SpriteRAM+3,X       ;

NextDngnSprite:
L9B97:  INX                     ;
L9B98:  INX                     ;Increment to next sprite.
L9B99:  INX                     ;
L9B9A:  INX                     ;

L9B9B:  CPX #$C4                ;Have the first 49 sprites been loaded?
L9B9D:  BNE L9B5F               ;If not, loop to do another.

L9B9F:* LDA SpriteBuffer,X      ;
L9BA2:  STA SpriteRAM,X         ;The last remaining sprites cannot be hidden so
L9BA5:  INX                     ;they can just be transferred to sprite RAM.
L9BA6:  BNE -                   ;
L9BA8:  RTS                     ;

L9BA9:  .byte $06, $66, $66, $66, $66, $03, $33, $33, $00, $0C, $BB, $BB, $BB, $BB, $C0, $33
L9BB9:  .byte $33, $00, $00, $01, $33, $33, $33, $00, $00, $06, $66, $66, $00, $00, $00, $00
L9BC9:  .byte $06, $66, $66, $66, $66, $00, $33, $30, $00, $68, $99, $99, $99, $99, $C0, $33
L9BD9:  .byte $33, $30, $00, $11, $33, $33, $33, $00, $00, $06, $66, $66, $00, $00, $00, $00
L9BE9:  .byte $06, $66, $66, $66, $66, $66, $66, $66, $06, $66, $66, $66, $66, $69, $C0, $33
L9BF9:  .byte $33, $30, $11, $11, $33, $33, $33

L9C00:  LDA #ENABLE
L9C02:  ORA DisSpriteAnim
L9C04:  ORA $9F
L9C06:  ORA $CE
L9C08:  ORA $C2
L9C0A:  BNE L9C2F
L9C0C:  LDA MapProperties
L9C0E:  AND #$02
L9C10:  BNE L9C2F
L9C12:  LDX #$02
L9C14:  LDA OnHorse
L9C16:  BPL L9C1A
L9C18:  LDX #$01
L9C1A:  STX $4E
L9C1C:  LDA $E2
L9C1E:  BEQ L9C22
L9C20:  ASL $4E
L9C22:  LDX #$04
L9C24:  LDA $C0
L9C26:  CLC
L9C27:  ADC $4E
L9C29:  STA $C0
L9C2B:  AND #$03
L9C2D:  BEQ L9C30
L9C2F:  RTS
L9C30:  LDA $C0
L9C32:  AND #$7C
L9C34:  TAY
L9C35:  LDA $0400,Y
L9C38:  CMP #$FF
L9C3A:  BNE L9C47
L9C3C:  CLC
L9C3D:  LDA $C0
L9C3F:  ADC #$04
L9C41:  STA $C0
L9C43:  DEX
L9C44:  BNE L9C30
L9C46:  RTS
L9C47:  LDX #$00
L9C49:  LDA $E2
L9C4B:  BEQ L9C59
L9C4D:  LDA $0400,Y
L9C50:  CMP #$0E
L9C52:  BNE L9C59
L9C54:  LDX #$01
L9C56:  JMP L9C66
L9C59:  LDA $0400,Y
L9C5C:  CMP #$15
L9C5E:  BCC L9C66
L9C60:  CMP #$1D
L9C62:  BCS L9C66
L9C64:  LDX #$01
L9C66:  STX $D7
L9C68:  LDA $0402,Y
L9C6B:  STA $BC
L9C6D:  LDA $0403,Y
L9C70:  STA $BB
L9C72:  LDA $0401,Y
L9C75:  BEQ L9CC7
L9C77:  TAX
L9C78:  LDA $7300,X
L9C7B:  CMP #$F8
L9C7D:  BNE L9C8C
L9C7F:  LDA #$00
L9C81:  STA $0401,Y
L9C84:  LDA #SPRT_HIDE
L9C86:  STA $7300,X
L9C89:  JMP L9CC7
L9C8C:  JSR L9E78
L9C8F:  JSR L9F90
L9C92:  BCS L9CA3
L9C94:  JSR L9FC2
L9C97:  BCS L9CA0
L9C99:  LDA $0401,Y
L9C9C:  TAX
L9C9D:  JMP L9D1B
L9CA0:  JMP L9D01
L9CA3:  LDA $0401,Y
L9CA6:  TAX
L9CA7:  LDA #SPRT_HIDE
L9CA9:  STA $7300,X
L9CAC:  STA $7304,X
L9CAF:  STA $7308,X
L9CB2:  STA $730C,X
L9CB5:  LDA #$00
L9CB7:  STA $0401,Y
L9CBA:  STA $7301,X
L9CBD:  STA $7305,X
L9CC0:  STA $7309,X
L9CC3:  STA $730D,X
L9CC6:  RTS
L9CC7:  JSR L9E78
L9CCA:  JSR L9F90
L9CCD:  BCC L9CD0
L9CCF:  RTS
L9CD0:  JSR L9FC2
L9CD3:  BCS L9D01
L9CD5:  LDX #$44
L9CD7:  LDA #$04
L9CD9:  STA $4D
L9CDB:  LDA $0400,Y
L9CDE:  BPL L9CE2
L9CE0:  LDX #$84
L9CE2:  LDA $7300,X
L9CE5:  CMP #SPRT_HIDE
L9CE7:  BEQ L9D17
L9CE9:  TXA
L9CEA:  CLC
L9CEB:  ADC #$10
L9CED:  TAX
L9CEE:  DEC $4D
L9CF0:  BNE L9CE2
L9CF2:  LDA #$00
L9CF4:  STA $C9
L9CF6:  LDA $BC
L9CF8:  STA $0402,Y
L9CFB:  LDA $BB
L9CFD:  STA $0403,Y
L9D00:  RTS
L9D01:  LDA $D7
L9D03:  BNE L9D09
L9D05:  LDA #$00
L9D07:  STA $C9
L9D09:  LDA $BC
L9D0B:  STA $0402,Y
L9D0E:  LDA $BB
L9D10:  STA $0403,Y
L9D13:  JSR LA02D
L9D16:  RTS
L9D17:  TXA
L9D18:  STA $0401,Y
L9D1B:  LDA $0401,Y
L9D1E:  SEC
L9D1F:  SBC #$44
L9D21:  LSR
L9D22:  LSR
L9D23:  LSR
L9D24:  TAX
L9D25:  LDA $0400,Y
L9D28:  ASL
L9D29:  CLC
L9D2A:  ADC #$80
L9D2C:  STA $77E1,X
L9D2F:  STA $4E
L9D31:  LDA #$00
L9D33:  STA $77E0,X
L9D36:  STA $4D
L9D38:  TXA
L9D39:  LSR
L9D3A:  TAX
L9D3B:  TYA
L9D3C:  PHA
L9D3D:  LDA $DD
L9D3F:  TAY
L9D40:  LDA $9E15,Y
L9D43:  STA $82,X
L9D45:  LDA $82,X
L9D47:  TAX
L9D48:  LDA $A07B,X
L9D4B:  ASL
L9D4C:  TAX
L9D4D:  CLC
L9D4E:  LDA $9E0D,X
L9D51:  ADC $4D
L9D53:  STA $4D
L9D55:  LDA $9E0E,X
L9D58:  ADC $4E
L9D5A:  STA $4E
L9D5C:  JSR $C039
L9D5F:  LDA #$80
L9D61:  STA $C2
L9D63:  PLA
L9D64:  TAY
L9D65:  LDA $0401,Y
L9D68:  SEC
L9D69:  SBC #$44
L9D6B:  LSR
L9D6C:  LSR
L9D6D:  LSR
L9D6E:  TAX
L9D6F:  LDA $9DFD,X
L9D72:  STA $C3
L9D74:  LDA $9DFE,X
L9D77:  STA $C4
L9D79:  LDA $0401,Y
L9D7C:  TAX
L9D7D:  LDA $0403,Y
L9D80:  SEC
L9D81:  SBC $49
L9D83:  CLC
L9D84:  ADC #$07
L9D86:  ASL
L9D87:  ASL
L9D88:  ASL
L9D89:  ASL
L9D8A:  STA $BB
L9D8C:  LDA $0402,Y
L9D8F:  SEC
L9D90:  SBC $4A
L9D92:  CLC
L9D93:  ADC #$07
L9D95:  ASL
L9D96:  ASL
L9D97:  ASL
L9D98:  ASL
L9D99:  STA $BC
L9D9B:  JSR L9E19
L9D9E:  LDA $BB
L9DA0:  STA $7300,X
L9DA3:  STA $7308,X
L9DA6:  CLC
L9DA7:  ADC #$08
L9DA9:  STA $7304,X
L9DAC:  STA $730C,X
L9DAF:  LDA $BC
L9DB1:  STA $7303,X
L9DB4:  STA $7307,X
L9DB7:  CLC
L9DB8:  ADC #$08
L9DBA:  STA $730B,X
L9DBD:  STA $730F,X
L9DC0:  LDA $0401,Y
L9DC3:  SEC
L9DC4:  SBC #$44
L9DC6:  LSR
L9DC7:  CLC
L9DC8:  ADC #$90
L9DCA:  STA $7301,X
L9DCD:  CLC
L9DCE:  ADC #$01
L9DD0:  STA $7305,X
L9DD3:  CLC
L9DD4:  ADC #$01
L9DD6:  STA $7309,X
L9DD9:  CLC
L9DDA:  ADC #$01
L9DDC:  STA $730D,X
L9DDF:  LDA $0400,Y
L9DE2:  AND #$7F
L9DE4:  TAY
L9DE5:  LDA $A084,Y
L9DE8:  STA $7302,X
L9DEB:  STA $7306,X
L9DEE:  STA $730A,X
L9DF1:  STA $730E,X
L9DF4:  LDA $C0
L9DF6:  AND #$7C
L9DF8:  TAY
L9DF9:  JSR LA02D
L9DFC:  RTS

L9DFD:  .byte $00, $09, $80, $09, $00, $0A, $80, $0A, $00, $0B, $80, $0B, $00, $0C, $80, $0C
L9E0D:  .byte $00, $00, $80, $00, $00

L9E12:  ORA ($80,X)
L9E14:  ORA ($04,X)
L9E16:  PHP
L9E17:  ORA ($02,X)
L9E19:  LDA $0B
L9E1B:  AND #$F0
L9E1D:  BNE L9E20
L9E1F:  RTS
L9E20:  STA $4E
L9E22:  LDA $0B
L9E24:  AND #$0F
L9E26:  CMP #$02
L9E28:  BNE L9E3F
L9E2A:  LDA $4E
L9E2C:  EOR #$FF
L9E2E:  LSR
L9E2F:  LSR
L9E30:  LSR
L9E31:  LSR
L9E32:  CLC
L9E33:  ADC #$01
L9E35:  STA $4D
L9E37:  SEC
L9E38:  LDA $BC
L9E3A:  SBC $4D
L9E3C:  STA $BC
L9E3E:  RTS
L9E3F:  CMP #$01
L9E41:  BNE L9E51
L9E43:  LDA $4E
L9E45:  EOR #$FF
L9E47:  LSR
L9E48:  LSR
L9E49:  LSR
L9E4A:  LSR
L9E4B:  SEC
L9E4C:  ADC $BC
L9E4E:  STA $BC
L9E50:  RTS
L9E51:  CMP #$04
L9E53:  BNE L9E63
L9E55:  LDA $4E
L9E57:  EOR #$FF
L9E59:  LSR
L9E5A:  LSR
L9E5B:  LSR
L9E5C:  LSR
L9E5D:  SEC
L9E5E:  ADC $BB
L9E60:  STA $BB
L9E62:  RTS
L9E63:  LDA $4E
L9E65:  EOR #$FF
L9E67:  LSR
L9E68:  LSR
L9E69:  LSR
L9E6A:  LSR
L9E6B:  CLC
L9E6C:  ADC #$01
L9E6E:  STA $4D
L9E70:  SEC
L9E71:  LDA $BB
L9E73:  SBC $4D
L9E75:  STA $BB
L9E77:  RTS
L9E78:  LDA $0400,Y
L9E7B:  BPL L9E7E
L9E7D:  RTS
L9E7E:  LDA $D7
L9E80:  BEQ L9EAB
L9E82:  LDA $0401,Y
L9E85:  BEQ L9EAB
L9E87:  LDA $0403,Y
L9E8A:  CMP $49
L9E8C:  BEQ L9E9A
L9E8E:  BPL L9E95
L9E90:  LDA #$00
L9E92:  JMP L9EB3
L9E95:  LDA #$01
L9E97:  JMP L9EB3
L9E9A:  LDA $0402,Y
L9E9D:  CMP $4A
L9E9F:  BPL L9EA6
L9EA1:  LDA #$02
L9EA3:  JMP L9EB3
L9EA6:  LDA #$03
L9EA8:  JMP L9EB3
L9EAB:  LDA $00
L9EAD:  ADC $01
L9EAF:  ADC $BA
L9EB1:  AND #$03
L9EB3:  STA $DD
L9EB5:  ASL
L9EB6:  TAX
L9EB7:  CLC
L9EB8:  LDA $A0A3,X
L9EBB:  ADC $0402,Y
L9EBE:  PHA
L9EBF:  AND #$C0
L9EC1:  BEQ L9ECC
L9EC3:  LDA MapProperties
L9EC5:  AND #$04
L9EC7:  BNE L9ECC
L9EC9:  JMP L9F8E
L9ECC:  PLA
L9ECD:  AND #$3F
L9ECF:  PHA
L9ED0:  CLC
L9ED1:  LDA $A0A4,X
L9ED4:  ADC $0403,Y
L9ED7:  STA $4D
L9ED9:  AND #$C0
L9EDB:  BEQ L9EE6
L9EDD:  LDA MapProperties
L9EDF:  AND #$04
L9EE1:  BNE L9EE6
L9EE3:  JMP L9F8E
L9EE6:  LDA $4D
L9EE8:  AND #$3F
L9EEA:  STA $4D
L9EEC:  LDA #$00
L9EEE:  STA $4E
L9EF0:  ASL $4D
L9EF2:  ROL $4E
L9EF4:  ASL $4D
L9EF6:  ROL $4E
L9EF8:  ASL $4D
L9EFA:  ROL $4E
L9EFC:  ASL $4D
L9EFE:  ROL $4E
L9F00:  ASL $4D
L9F02:  ROL $4E
L9F04:  PLA
L9F05:  PHA
L9F06:  LSR
L9F07:  CLC
L9F08:  ADC $4D
L9F0A:  STA $4D
L9F0C:  LDA $4E
L9F0E:  ADC #$78
L9F10:  STA $4E
L9F12:  LDY #$00
L9F14:  PLA
L9F15:  AND #$01
L9F17:  BNE L9F24
L9F19:  LDA ($4D),Y
L9F1B:  AND #$F0
L9F1D:  LSR
L9F1E:  LSR
L9F1F:  LSR
L9F20:  LSR
L9F21:  JMP L9F28
L9F24:  LDA ($4D),Y
L9F26:  AND #$0F
L9F28:  STA $4E
L9F2A:  LDA $C0
L9F2C:  AND #$7C
L9F2E:  TAY
L9F2F:  LDA $0400,Y
L9F32:  CMP #$18
L9F34:  BEQ L9F42
L9F36:  CMP #$1B
L9F38:  BEQ L9F42
L9F3A:  CMP #$1C
L9F3C:  BEQ L9F42
L9F3E:  CMP #$1E
L9F40:  BNE L9F4B
L9F42:  LDA $4E
L9F44:  CMP #$03
L9F46:  BNE L9F88
L9F48:  JMP L9F70
L9F4B:  LDA $4E
L9F4D:  CMP #$03
L9F4F:  BEQ L9F88
L9F51:  CMP #$04
L9F53:  BEQ L9F88
L9F55:  CMP #$08
L9F57:  BEQ L9F88
L9F59:  CMP #$0C
L9F5B:  BEQ L9F88
L9F5D:  CMP #$09
L9F5F:  BEQ L9F88
L9F61:  CMP #$05
L9F63:  BNE L9F6B
L9F65:  LDA MapProperties
L9F67:  CMP #$0C
L9F69:  BNE L9F88
L9F6B:  LDA $C0
L9F6D:  AND #$7C
L9F6F:  TAY
L9F70:  CLC
L9F71:  LDA $A0A3,X
L9F74:  ADC $0402,Y
L9F77:  AND #$3F
L9F79:  STA $0402,Y
L9F7C:  CLC
L9F7D:  LDA $A0A4,X
L9F80:  ADC $0403,Y
L9F83:  AND #$3F
L9F85:  STA $0403,Y
L9F88:  LDA $C0
L9F8A:  AND #$7C
L9F8C:  TAY
L9F8D:  RTS
L9F8E:  PLA
L9F8F:  RTS
L9F90:  TXA
L9F91:  PHA
L9F92:  LDX #$00
L9F94:  LDA $4A
L9F96:  SEC
L9F97:  SBC $0402,Y
L9F9A:  BMI L9F9E
L9F9C:  EOR #$FF
L9F9E:  CMP #$F8
L9FA0:  JSR L9FB9
L9FA3:  LDA $49
L9FA5:  SEC
L9FA6:  SBC $0403,Y
L9FA9:  BMI L9FAF
L9FAB:  EOR #$FF
L9FAD:  ADC #$00
L9FAF:  CMP #$F9
L9FB1:  JSR L9FB9
L9FB4:  CPX #$01
L9FB6:  PLA
L9FB7:  TAX
L9FB8:  RTS
L9FB9:  BPL L9FC1
L9FBB:  CMP #$C8
L9FBD:  BMI L9FC1
L9FBF:  LDX #$FF
L9FC1:  RTS

L9FC2:  TXA
L9FC3:  PHA
L9FC4:  LDA $4D
L9FC6:  PHA
L9FC7:  LDA #$04
L9FC9:  STA $4D
L9FCB:  LDX #$04
L9FCD:  LDA $7300,X
L9FD0:  LSR
L9FD1:  LSR
L9FD2:  LSR
L9FD3:  LSR
L9FD4:  CLC
L9FD5:  ADC $49
L9FD7:  SEC
L9FD8:  SBC #$07
L9FDA:  CMP $0403,Y
L9FDD:  BNE L9FF4
L9FDF:  LDA $7303,X
L9FE2:  LSR
L9FE3:  LSR
L9FE4:  LSR
L9FE5:  LSR
L9FE6:  CLC
L9FE7:  ADC $4A
L9FE9:  SEC
L9FEA:  SBC #$07
L9FEC:  CMP $0402,Y
L9FEF:  BNE L9FF4
L9FF1:  JMP LA026
L9FF4:  TXA
L9FF5:  CLC
L9FF6:  ADC #$10
L9FF8:  TAX
L9FF9:  DEC $4D
L9FFB:  BNE L9FCD
L9FFD:  LDX #$00
L9FFF:  LDA $0402,X
LA002:  CMP $0402,Y
LA005:  BNE LA00F
LA007:  LDA $0403,X
LA00A:  CMP $0403,Y
LA00D:  BEQ LA026
LA00F:  INX
LA010:  INX
LA011:  INX
LA012:  INX
LA013:  CPX #$80
LA015:  BEQ LA01F
LA017:  STX $4D
LA019:  CPY $4D
LA01B:  BEQ LA00F
LA01D:  BNE L9FFF
LA01F:  PLA
LA020:  STA $4D
LA022:  PLA
LA023:  TAX
LA024:  CLC
LA025:  RTS
LA026:  PLA
LA027:  STA $4D
LA029:  PLA
LA02A:  TAX
LA02B:  SEC
LA02C:  RTS
LA02D:  LDA $0401,Y
LA030:  TAX
LA031:  LDA $7300,X
LA034:  STA $4D
LA036:  LDA $7303,X
LA039:  STA $4E
LA03B:  LDX #$00
LA03D:  LDA $7304,X
LA040:  CMP #SPRT_HIDE
LA042:  BCS LA063
LA044:  SEC
LA045:  SBC $4D
LA047:  BCS LA04E
LA049:  EOR #$FF
LA04B:  CLC
LA04C:  ADC #$01
LA04E:  CMP #$11
LA050:  BCS LA063
LA052:  LDA $7307,X
LA055:  SEC
LA056:  SBC $4E
LA058:  BCS LA05F
LA05A:  EOR #$FF
LA05C:  CLC
LA05D:  ADC #$01
LA05F:  CMP #$11
LA061:  BCC LA071
LA063:  TXA
LA064:  CLC
LA065:  ADC #$10
LA067:  TAX
LA068:  CPX #$40
LA06A:  BNE LA03D
LA06C:  LDA #$00
LA06E:  STA $C9
LA070:  RTS
LA071:  LDA $D7
LA073:  BEQ LA078
LA075:  LDA $0401,Y
LA078:  STA $C9
LA07A:  RTS

LA07B:  .byte $00, $02, $03, $01, $00, $01, $01, $01, $01, $03, $00, $00, $00, $01, $03, $00
LA08B:  .byte $03, $00, $00, $00, $03, $03, $03, $01, $03, $00, $00, $03, $00, $00, $02, $02
LA09B:  .byte $02, $02, $02, $02, $02, $02, $03, $00, $00, $01, $00, $FF, $01, $00, $FF, $00
LA0AB:  .byte $01, $02, $04, $08, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88
LA0BB:  .byte $88, $88, $C2, $22, $22, $22, $22, $2C, $22, $22, $22, $22, $22, $22, $22, $22
LA0CB:  .byte $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22
LA0DB:  .byte $22, $22, $C2, $22, $22, $22, $22, $2C, $22, $22, $22, $22, $22, $22, $22, $22
LA0EB:  .byte $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22
LA0FB:  .byte $22, $22, $C2, $22, $22, $FF, $3F, $FF, $F8, $E2, $FF, $FF, $CF, $FF, $FF, $FF
LA10B:  .byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $C3, $99, $FF, $FE, $FF, $FF, $FF, $FF
LA11B:  .byte $FF, $FF, $FF, $FF, $FF, $9F, $FF, $FF, $F3, $7F, $FF, $FF, $FF, $FF, $FF, $FF
LA12B:  .byte $FF, $FF, $FF, $FF, $FF, $CF, $87, $73, $FF, $FF, $F3, $7F, $FF, $FF, $FF, $FF
LA13B:  .byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FC, $F0, $F0, $E0, $E0, $FF, $FF, $FC
LA14B:  .byte $F0, $E0, $E0, $C0, $C0, $60, $70, $B8, $F0, $FE, $BC, $C7, $FF, $C0, $E0, $70
LA15B:  .byte $D1, $E0, $FC, $F8, $BF, $FF, $E3, $3D, $7F, $0F, $1D, $0E, $06, $FD, $1F, $3F
LA16B:  .byte $07, $8B, $0E, $07, $03, $07, $07, $0F, $0F, $3F, $FF, $FF, $FF, $03, $03, $07
LA17B:  .byte $07, $0F, $3F, $FF, $FF, $FF, $F6, $EF, $EE, $E5, $F5, $54, $52, $DF, $FF, $BD
LA18B:  .byte $FA, $F0, $E0, $C2, $C0, $AC, $F1, $FE, $B0, $C7, $FC, $FF, $FC, $E0, $D2, $E0
LA19B:  .byte $F0, $F8, $7C, $DF, $FF, $3F, $FF, $3F, $E3, $0D, $7F, $8F, $35, $FF, $FB, $3E
LA1AB:  .byte $1F, $0F, $07, $4B, $07, $4A, $2A, $AF, $A7, $77, $F7, $6F, $FF, $03, $43, $07
LA1BB:  .byte $0F, $5F         

LA1BD:  LDA $FBFF,X
LA1C0:  LDA #$00
LA1C2:  STA $2003
LA1C5:  LDA #$02
LA1C7:  STA $4014
LA1CA:  RTS

LA1CB:  .byte $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
LA1DB:  .byte $12, $22, $C2, $22, $22, $22, $22, $2C, $22, $21, $11, $11, $11, $11, $11, $11
LA1EB:  .byte $11, $C8, $88, $88, $C1, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
LA1FB:  .byte $12, $22, $C2, $22, $22

LoadPPUData:
LA200:  LDY #$00
LA202:  LDA PPUBufBase,Y
LA205:  STA WorkPPUBufLen
LA207:  STA ConstPPUBufLen
LA209:  BEQ PPUBufDone

PPUStringLoop:
LA20B:  INY
LA20C:  LDA PPUBufBase,Y
LA20F:  STA PPUStringLen
LA211:  CMP #$02
LA213:  BCC LA240
LA215:  TAX
LA216:  DEX
LA217:  DEX
LA218:  INY
LA219:  LDA PPUBufBase,Y
LA21C:  BPL LA22C
LA21E:  LDA $03
LA220:  AND #$7F
LA222:  ORA #$04
LA224:  STA PPUControl0
LA227:  LDA PPUBufBase,Y
LA22A:  AND #$7F
LA22C:  STA PPUAddress
LA22F:  INY
LA230:  LDA PPUBufBase,Y
LA233:  STA PPUAddress
LA236:  INY
LA237:  LDA PPUBufBase,Y
LA23A:  STA PPUIOReg
LA23D:  DEX
LA23E:  BNE LA236
LA240:  CLC

LA241:  LDA WorkPPUBufLen
LA243:  SBC PPUStringLen
LA245:  STA WorkPPUBufLen

LA247:  BEQ PPUBufDone
LA249:  BCS PPUStringLoop

PPUBufDone:
LA24B:  JSR LA280
LA24E:  LDA #$00
LA250:  STA PPUBufBase
LA253:  STA $0E
LA255:  RTS

LA256:  .byte $8C, $11, $11, $11, $11, $11, $22, $C2, $22, $22, $22, $22, $2C, $22, $11, $11
LA266:  .byte $11, $CB, $BB, $B9, $BB, $BC, $BB, $BB, $BB, $BC, $AA, $AA, $AC, $B9, $9B, $99
LA276:  .byte $BC, $01, $11, $11, $11, $11, $22, $C2, $22, $22

LA280:  SEC
LA281:  LDA #$30
LA283:  SBC ConstPPUBufLen
LA285:  AND #$F0
LA287:  BEQ LA2D3
LA289:  BCC LA2D3
LA28B:  STA $4D
LA28D:  LDA $C2
LA28F:  BEQ LA2D3
LA291:  AND #$7F
LA293:  TAY
LA294:  STA $4E
LA296:  SEC
LA297:  LDA #$80
LA299:  SBC $4E
LA29B:  STA $4E
LA29D:  CMP $4D
LA29F:  BCS LA2A3
LA2A1:  STA $4D
LA2A3:  LDX $4D

LA2A5:  LDA $C4
LA2A7:  STA PPUAddress
LA2AA:  LDA $C3
LA2AC:  STA PPUAddress

LA2AF:  LDA $7580,Y
LA2B2:  STA PPUIOReg
LA2B5:  INY
LA2B6:  DEX
LA2B7:  BNE LA2AF
LA2B9:  LDA $4D
LA2BB:  CLC
LA2BC:  ADC $C3
LA2BE:  STA $C3
LA2C0:  LDA $C4
LA2C2:  ADC #$00
LA2C4:  STA $C4
LA2C6:  LDA $4D
LA2C8:  CLC
LA2C9:  ADC $C2
LA2CB:  AND #$7F
LA2CD:  BNE LA2D1
LA2CF:  LDA #$00
LA2D1:  STA $C2
LA2D3:  RTS

LA2D0:  .byte $BB, $B9, $BC, $00, $11, $11, $11, $11, $22, $C2, $22, $22, $02, $22, $2C, $22
LA2E0:  .byte $11, $11, $11, $CB, $BB, $BB, $BB, $BC, $88, $BB, $B8, $8C, $BB, $BB, $BC, $B9
LA2F0:  .byte $BB, $B9, $BC, $00, $11, $11, $11, $11, $22, $C2, $22, $22

LA300:  LDA MapProperties
LA302:  AND #$02
LA304:  BEQ LA309
LA306:  JMP LA3C5
LA309:  LDA $0B
LA30B:  AND #$03
LA30D:  BEQ LA33B
LA30F:  LDA $03
LA311:  AND #$FE
LA313:  STA $03
LA315:  LDA $0B
LA317:  AND #$01
LA319:  BEQ LA327
LA31B:  INC $0F
LA31D:  BNE LA321
LA31F:  INC $10
LA321:  JSR LA46A
LA324:  JMP LA332
LA327:  LDA $0F
LA329:  BNE LA32D
LA32B:  DEC $10
LA32D:  DEC $0F
LA32F:  JSR LA446
LA332:  LDA $10
LA334:  AND #$01
LA336:  STA $10
LA338:  JMP LA373
LA33B:  LDA $03
LA33D:  AND #$FD
LA33F:  STA $03
LA341:  LDA $0B
LA343:  AND #$04
LA345:  BEQ LA35B
LA347:  INC $11
LA349:  LDA $11
LA34B:  CMP #$F0
LA34D:  BNE LA355
LA34F:  LDA #$00
LA351:  STA $11
LA353:  INC $12
LA355:  JSR LA4B6
LA358:  JMP LA36A
LA35B:  LDA $11
LA35D:  BNE LA365
LA35F:  LDA #$F0
LA361:  STA $11
LA363:  DEC $12
LA365:  DEC $11
LA367:  JSR LA48A
LA36A:  LDA $12
LA36C:  AND #$01
LA36E:  STA $12
LA370:  LSR
LA371:  LDA #$00
LA373:  ORA $03
LA375:  STA $03
LA377:  STA $2000
LA37A:  LDA OnBoat
LA37C:  BNE LA3AB
LA37E:  LDY #$0B
LA380:  LDA ($93),Y
LA382:  CMP #$03
LA384:  BCS LA38D
LA386:  LDA $7F
LA388:  LDX #$14
LA38A:  JSR LA40C
LA38D:  LDY #$0B
LA38F:  LDA ($95),Y
LA391:  CMP #$03
LA393:  BCS LA39C
LA395:  LDA $80
LA397:  LDX #$24
LA399:  JSR LA40C
LA39C:  LDY #$0B
LA39E:  LDA ($97),Y
LA3A0:  CMP #$03
LA3A2:  BCS LA3AB
LA3A4:  LDA $81
LA3A6:  LDX #$34
LA3A8:  JSR LA40C
LA3AB:  LDA $0F
LA3AD:  STA $2005
LA3B0:  LDA $11
LA3B2:  STA $2005
LA3B5:  CLC
LA3B6:  LDA $0B
LA3B8:  ADC #$10
LA3BA:  STA $0B
LA3BC:  AND #$F0
LA3BE:  BNE LA3C4
LA3C0:  LDA #$00
LA3C2:  STA $0B
LA3C4:  RTS
LA3C5:  LDX $B3
LA3C7:  LDA $7E,X
LA3C9:  TAY
LA3CA:  LDA $B3
LA3CC:  ASL
LA3CD:  ASL
LA3CE:  ASL
LA3CF:  ASL
LA3D0:  CLC
LA3D1:  ADC #$04
LA3D3:  TAX
LA3D4:  PHA
LA3D5:  LDA #$04
LA3D7:  STA $4E
LA3D9:  LDA $0B
LA3DB:  AND #$F0
LA3DD:  BNE LA3E6
LA3DF:  LDA $B4
LA3E1:  AND #$FE
LA3E3:  STA $7300,X
LA3E6:  TXA
LA3E7:  PHA
LA3E8:  TYA
LA3E9:  PHA
LA3EA:  JSR LA40C
LA3ED:  PLA
LA3EE:  TAY
LA3EF:  PLA
LA3F0:  TAX
LA3F1:  CPX #$44
LA3F3:  BCC LA402
LA3F5:  LDA $C9
LA3F7:  BPL LA402
LA3F9:  TXA
LA3FA:  SEC
LA3FB:  SBC #$10
LA3FD:  TAX
LA3FE:  DEC $4E
LA400:  BNE LA3E6
LA402:  PLA
LA403:  TAX
LA404:  LDA $7300,X
LA407:  STA $B4
LA409:  JMP LA3B5
LA40C:  CMP #$00
LA40E:  BEQ LA432
LA410:  CMP #$03
LA412:  BCC LA419
LA414:  LSR
LA415:  LSR
LA416:  JMP LA41C
LA419:  INX
LA41A:  INX
LA41B:  INX
LA41C:  AND #$01
LA41E:  BEQ LA433
LA420:  LDY #$04
LA422:  LDA $7300,X
LA425:  CLC
LA426:  ADC #$01
LA428:  STA $7300,X
LA42B:  INX
LA42C:  INX
LA42D:  INX
LA42E:  INX
LA42F:  DEY
LA430:  BNE LA422
LA432:  RTS
LA433:  LDY #$04
LA435:  LDA $7300,X
LA438:  SEC
LA439:  SBC #$01
LA43B:  STA $7300,X
LA43E:  INX
LA43F:  INX
LA440:  INX
LA441:  INX
LA442:  DEY
LA443:  BNE LA435
LA445:  RTS
LA446:  TXA
LA447:  PHA
LA448:  LDX #$00
LA44A:  LDY #$2C
LA44C:  LDA OnBoat
LA44E:  BEQ LA454
LA450:  LDX #$30
LA452:  LDY #$20
LA454:  INC $7317,X
LA457:  INX
LA458:  INX
LA459:  INX
LA45A:  INX
LA45B:  DEY
LA45C:  BNE LA454
LA45E:  PLA
LA45F:  TAX
LA460:  INC $BE
LA462:  RTS
LA463:  TXA
LA464:  PHA
LA465:  PLA
LA466:  TAX
LA467:  JMP LA457
LA46A:  TXA
LA46B:  PHA
LA46C:  LDX #$00
LA46E:  LDY #$2C
LA470:  LDA OnBoat
LA472:  BEQ LA478
LA474:  LDX #$30
LA476:  LDY #$20
LA478:  DEC $7317,X
LA47B:  INX
LA47C:  INX
LA47D:  INX
LA47E:  INX
LA47F:  DEY
LA480:  BNE LA478
LA482:  PLA
LA483:  TAX
LA484:  DEC $BE
LA486:  RTS
LA487:  JMP LA47B
LA48A:  TXA
LA48B:  PHA
LA48C:  LDX #$00
LA48E:  LDY #$2C
LA490:  LDA OnBoat
LA492:  BEQ LA498
LA494:  LDX #$30
LA496:  LDY #$20
LA498:  LDA $7315,X
LA49B:  BEQ LA4A7
LA49D:  LDA $7314,X
LA4A0:  CMP #SPRT_HIDE
LA4A2:  BEQ LA4A7
LA4A4:  INC $7314,X
LA4A7:  INX
LA4A8:  INX
LA4A9:  INX
LA4AA:  INX
LA4AB:  DEY
LA4AC:  BNE LA498
LA4AE:  PLA
LA4AF:  TAX
LA4B0:  INC $BD
LA4B2:  RTS

LA4B3:  JMP LA4A7
LA4B6:  TXA
LA4B7:  PHA
LA4B8:  LDX #$00
LA4BA:  LDY #$2C
LA4BC:  LDA OnBoat
LA4BE:  BEQ LA4C4
LA4C0:  LDX #$30
LA4C2:  LDY #$20
LA4C4:  LDA $7315,X
LA4C7:  BEQ LA4D3
LA4C9:  LDA $7314,X
LA4CC:  CMP #SPRT_HIDE
LA4CE:  BEQ LA4D3
LA4D0:  DEC $7314,X
LA4D3:  INX
LA4D4:  INX
LA4D5:  INX
LA4D6:  INX
LA4D7:  DEY
LA4D8:  BNE LA4C4
LA4DA:  PLA
LA4DB:  TAX
LA4DC:  DEC $BD
LA4DE:  RTS

LA4DF:  .byte $4C, $D3, $A4, $2C, $22, $11, $11, $00, $00, $C8, $88, $BB, $88, $8C, $BB, $BB
LA4EF:  .byte $BB, $BC, $00, $00, $00, $00, $00, $00, $00, $11, $11, $11, $11, $22, $C2, $22
LA4FF:  .byte $22

;----------------------------------------------------------------------------------------------------

GetInput:
LA500:  LDA #$01                ;Prepare to read input button statuses
LA502:  STA CPUJoyPad1          ;

LA505:  LDA #$00                ;Clear out previous button statuses.
LA507:  STA CPUJoyPad1          ;

LA50A:  LDA #$00                ;Begin button status read.
LA50C:  STA Pad1Input           ;

LA50E:  LDY #$08                ;Prepare to loop 8 times for the 8 buttons.

InputReadLoop:
LA510:  ASL Pad1Input           ;Shift over to make room for incoming bit.

LA512:  LDA CPUJoyPad1          ;Get the next button status and save it.
LA515:  STA GenByte4E           ;

LA517:  LSR                     ;Move button status to carry flag.

LA518:  ORA GenByte4E           ;
LA51A:  AND #$01                ;Save last button status as LSB.
LA51C:  ORA Pad1Input           ;
LA51E:  STA Pad1Input           ;

LA520:  DEY                     ;Have all 8 button statuses been read?
LA521:  BNE InputReadLoop       ;If not, brach to get the next one.
LA523:  RTS                     ;

;----------------------------------------------------------------------------------------------------

LA524:  .byte $11, $11, $11, $00, $C9, $9B, $BB, $BB, $BC, $BB, $BB, $BB, $BC, $88, $88, $BB
LA534:  .byte $C0, $00, $00, $00, $11, $11, $11, $11, $22, $C2, $22, $22, $22, $22, $2C, $22
LA544:  .byte $11, $11, $11, $00, $CB, $BB, $BB, $BB, $BC, $99, $99, $99, $9C, $BB, $BB, $BB
LA554:  .byte $C8, $88, $BB, $88, $8C, $11, $11, $11, $22, $C2, $22, $22, $22, $22, $2C, $22
LA564:  .byte $11, $11, $11, $10, $C8, $88, $B8, $C8, $8C, $BB, $BB, $BB, $BC, $BB, $BB, $BB
LA574:  .byte $CB, $BB, $BB, $BB, $BC, $11, $11, $11, $22, $C2, $22, $22, $22, $22, $2C, $22
LA584:  .byte $11, $11, $11, $11, $CB, $BB, $BB, $CB, $BC, $BB, $BB, $BB, $BC, $BB, $BB, $BB
LA594:  .byte $CB, $99, $BB, $99, $BC, $11, $11, $11, $22, $C2, $22, $22, $22, $22, $2C, $22
LA5A4:  .byte $11, $11, $11, $11, $CB, $9B, $BB, $CB, $BC, $88, $88, $88, $8C, $BB, $BB, $BB
LA5B4:  .byte $CB, $BB, $BB, $BB, $BC, $11, $11, $11, $22, $C2, $22, $22, $22, $22, $2C, $22
LA5C4:  .byte $11, $11, $11, $11, $CB, $9B, $BB, $5B, $BC, $11, $11, $11, $1C, $BB, $BB, $BB
LA5D4:  .byte $CB, $99, $BB, $99, $BC, $11, $11, $11, $22, $C2, $22, $22, $22, $22, $2C, $22
LA5E4:  .byte $21, $11, $11, $11, $88, $88, $88, $88, $88, $11, $11, $11, $1C, $99, $99, $99
LA5F4:  .byte $CB, $BB, $BB, $BB, $BC, $11, $11, $12, $22, $C2, $22, $22, $22, $22, $2C, $22
LA604:  .byte $21, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $1C, $BB, $BB, $BB
LA614:  .byte $CB, $BB, $99, $99, $9C, $11, $11, $12, $22, $C2, $22, $22, $22, $22, $2C, $22
LA624:  .byte $21, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $18, $88, $88, $88
LA634:  .byte $CB, $BB, $9B, $BB, $BC, $11, $11, $12, $22, $C2, $22, $22, $22, $22, $2C, $22
LA644:  .byte $22, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
LA654:  .byte $8C, $BB, $9B, $BB, $C8, $11, $11, $22, $22, $C2, $22, $22, $22, $22, $2C, $22
LA664:  .byte $22, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
LA674:  .byte $18, $88, $88, $88, $81, $11, $11, $22, $22, $C2, $22, $22, $22, $22, $2C, $22
LA684:  .byte $22, $21, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
LA694:  .byte $11, $11, $11, $11, $11, $11, $12, $22, $22, $C2, $22, $22, $22, $22, $2C, $22
LA6A4:  .byte $22, $22, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
LA6B4:  .byte $11, $11, $11, $11, $11, $11, $22, $22, $22, $C2, $22, $22, $22, $22, $2C, $22
LA6C4:  .byte $22, $22, $22, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
LA6D4:  .byte $11, $11, $11, $11, $11, $22, $22, $22, $22, $C2, $22, $22, $22, $22, $2C, $22
LA6E4:  .byte $22, $22, $22, $22, $21, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
LA6F4:  .byte $11, $11, $11, $12, $22, $22, $22, $22, $22, $C2, $22, $22, $22, $22, $2C, $22
LA704:  .byte $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22
LA714:  .byte $22, $22, $22, $22, $22, $22, $22, $22, $22, $C2, $22, $22, $22, $22, $2C, $22
LA724:  .byte $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22
LA734:  .byte $22, $22, $22, $22, $22, $22, $22, $22, $22, $C2, $22, $22, $22, $22, $28, $88
LA744:  .byte $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88
LA754:  .byte $88, $88, $88, $88, $88, $88, $88, $88, $88, $82, $22, $22, $22, $22, $22, $22
LA764:  .byte $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22
LA774:  .byte $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22
LA784:  .byte $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22
LA794:  .byte $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22
LA7A4:  .byte $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22
LA7B4:  .byte $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22
LA7C4:  .byte $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22
LA7D4:  .byte $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22
LA7E4:  .byte $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22
LA7F4:  .byte $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22

LA800:  JSR $C00C
LA803:  BCC LA808
LA805:  JMP LA96A
LA808:  JSR $C051
LA80B:  BCS LA836
LA80D:  LDA $0400,Y
LA810:  CMP #$9D
LA812:  BNE LA836
LA814:  LDX #$CE
LA816:  LDY #CHR_FLOWER
LA818:  LDA (CrntChrPtr),Y
LA81A:  BEQ LA82E
LA81C:  LDA #$00
LA81E:  STA (CrntChrPtr),Y
LA820:  LDX #$8A
LA822:  LDY #CHR_COMPASS
LA824:  LDA (CrntChrPtr),Y
LA826:  BNE LA82E
LA828:  LDA #$01
LA82A:  STA (CrntChrPtr),Y
LA82C:  LDX #$6E
LA82E:  STX $30
LA830:  JSR LAA00
LA833:  JMP LA96A
LA836:  LDA #$03
LA838:  STA $9C
LA83A:  LDA #$5B
LA83C:  STA TextIndex2
LA83F:  LDA #$0A
LA841:  STA Wnd2XPos
LA844:  LDA #$04
LA846:  STA Wnd2YPos
LA849:  LDA #$0A
LA84B:  STA Wnd2Width
LA84E:  LDA #$08
LA850:  STA Wnd2Height
LA853:  JSR $C012
LA856:  BCC LA85B
LA858:  JMP LA96A
LA85B:  CMP #$00
LA85D:  BNE LA89C
LA85F:  JSR $C054
LA862:  BCC LA867
LA864:  JMP LA96A
LA867:  PHA
LA868:  LDA $99
LA86A:  PHA
LA86B:  LDA $9A
LA86D:  PHA
LA86E:  JSR $C042
LA871:  PLA
LA872:  STA $2A
LA874:  PLA
LA875:  STA $29
LA877:  PLA
LA878:  BCC LA87D
LA87A:  JMP LA96A
LA87D:  PHA
LA87E:  JSR LA96F
LA881:  PLA
LA882:  BCC LA88E
LA884:  LDA #$F4
LA886:  STA $30
LA888:  JSR LAA00
LA88B:  JMP LA96A
LA88E:  CLC
LA88F:  ADC #$22
LA891:  TAY
LA892:  LDA ($29),Y
LA894:  SEC
LA895:  SBC #$01
LA897:  STA ($29),Y
LA899:  JMP LA967
LA89C:  CMP #$01
LA89E:  BNE LA905
LA8A0:  JSR $C05A
LA8A3:  BCC LA8A8
LA8A5:  JMP LA96A
LA8A8:  STA $30
LA8AA:  LDY #CHR_EQ_WEAPON
LA8AC:  LDA (CrntChrPtr),Y
LA8AE:  SEC
LA8AF:  SBC #$01
LA8B1:  CMP $30
LA8B3:  BNE LA8C9
LA8B5:  CLC
LA8B6:  ADC #$0C
LA8B8:  TAY
LA8B9:  LDA (CrntChrPtr),Y
LA8BB:  CMP #$01
LA8BD:  BNE LA8C9
LA8BF:  LDA #$F4
LA8C1:  STA $30
LA8C3:  JSR LAA00
LA8C6:  JMP LA967
LA8C9:  LDA $30
LA8CB:  PHA
LA8CC:  LDA $99
LA8CE:  PHA
LA8CF:  LDA $9A
LA8D1:  PHA
LA8D2:  JSR $C042
LA8D5:  PLA
LA8D6:  STA $2A
LA8D8:  PLA
LA8D9:  STA $29
LA8DB:  PLA
LA8DC:  BCC LA8E1
LA8DE:  JMP LA96A
LA8E1:  PHA
LA8E2:  JSR LA981
LA8E5:  PLA
LA8E6:  BCC LA8F2
LA8E8:  LDA #$F4
LA8EA:  STA $30
LA8EC:  JSR LAA00
LA8EF:  JMP LA96A
LA8F2:  STA $30
LA8F4:  LDA ($29),Y
LA8F6:  SEC
LA8F7:  SBC #$01
LA8F9:  STA ($29),Y
LA8FB:  LDA #$F3
LA8FD:  STA $30
LA8FF:  JSR LAA00
LA902:  JMP LA967
LA905:  JSR $C057
LA908:  BCC LA90D
LA90A:  JMP LA96A
LA90D:  STA $30
LA90F:  LDY #CHR_EQ_ARMOR
LA911:  LDA (CrntChrPtr),Y
LA913:  SEC
LA914:  SBC #$01
LA916:  CMP $30
LA918:  BNE LA92E
LA91A:  CLC
LA91B:  ADC #$1B
LA91D:  TAY
LA91E:  LDA (CrntChrPtr),Y
LA920:  CMP #$01
LA922:  BNE LA92E
LA924:  LDA #$F4
LA926:  STA $30
LA928:  JSR LAA00
LA92B:  JMP LA967
LA92E:  LDA $30
LA930:  PHA
LA931:  LDA $99
LA933:  PHA
LA934:  LDA $9A
LA936:  PHA
LA937:  JSR $C042
LA93A:  PLA
LA93B:  STA $2A
LA93D:  PLA
LA93E:  STA $29
LA940:  PLA
LA941:  BCC LA946
LA943:  JMP LA96A
LA946:  PHA
LA947:  JSR LA9AE
LA94A:  PLA
LA94B:  BCC LA957
LA94D:  LDA #$F4
LA94F:  STA $30
LA951:  JSR LAA00
LA954:  JMP LA96A
LA957:  STA $30
LA959:  LDA ($29),Y
LA95B:  SEC
LA95C:  SBC #$01
LA95E:  STA ($29),Y
LA960:  LDA #$F3
LA962:  STA $30
LA964:  JSR LAA00
LA967:  JSR LA96E
LA96A:  JSR $C021
LA96D:  RTS
LA96E:  RTS
LA96F:  CLC
LA970:  ADC #$22
LA972:  TAY
LA973:  LDA (CrntChrPtr),Y
LA975:  CLC
LA976:  ADC #$01
LA978:  CMP #$64
LA97A:  BCC LA97E
LA97C:  LDA #$63
LA97E:  STA (CrntChrPtr),Y
LA980:  RTS
LA981:  CLC
LA982:  ADC #$0C
LA984:  STA $30
LA986:  LDX #$00
LA988:  LDY #CHR_WEAPONS
LA98A:  LDA (CrntChrPtr),Y
LA98C:  BEQ LA993
LA98E:  INX
LA98F:  CPY $30
LA991:  BEQ LA99D
LA993:  INY
LA994:  CPX #$09
LA996:  BCC LA999
LA998:  RTS
LA999:  CPY #$1B
LA99B:  BNE LA98A
LA99D:  CLC
LA99E:  LDY $30
LA9A0:  LDA (CrntChrPtr),Y
LA9A2:  CLC
LA9A3:  ADC #$01
LA9A5:  CMP #$64
LA9A7:  BCC LA9AB
LA9A9:  LDA #$63
LA9AB:  STA (CrntChrPtr),Y
LA9AD:  RTS
LA9AE:  CLC
LA9AF:  ADC #$1B
LA9B1:  TAY
LA9B2:  LDA (CrntChrPtr),Y
LA9B4:  CLC
LA9B5:  ADC #$01
LA9B7:  CMP #$64
LA9B9:  BCC LA9BD
LA9BB:  LDA #$63
LA9BD:  STA (CrntChrPtr),Y
LA9BF:  RTS

LA9C0:  .byte $42, $44, $41, $11, $11, $11, $11, $44, $44, $22, $44, $33, $34, $44, $44, $44
LA9D0:  .byte $33, $33, $44, $44, $44, $44, $44, $44, $00, $00, $04, $42, $22, $22, $42, $24
LA9E0:  .byte $42, $24, $44, $11, $11, $11, $14, $44, $42, $22, $24, $33, $44, $44, $44, $44
LA9F0:  .byte $43, $33, $44, $41, $11, $44, $44, $41, $00, $00, $44, $44, $42, $22, $22, $24

;----------------------------------------------------------------------------------------------------

DoDialog:
LAA00:  LDA TextIndex           ;Save text index while drawing the window on the screen.
LAA02:  PHA                     ;

LAA03:  LDA MapProperties       ;Is the current map a combat map?
LAA05:  AND #$02                ;
LAA07:  BEQ +                   ;If not, branch.

LAA09:  JMP DoCombatDialog      ;($AA7E)Show dialog text in a combat map.

LAA0C:* LDA #$06                ;
LAA0E:  STA WndXPos             ;Prepare to put a window at tile coords X,Y=6,18.
LAA10:  LDA #$12                ;
LAA12:  STA WndYPos             ;

LAA14:  LDA #$10                ;
LAA16:  STA WndWidth            ;Window will be 16 tiles wide and 8 tiles high.
LAA18:  LDA #$08                ;
LAA1A:  STA WndHeight           ;

LAA1C:  JSR ShowWindow1         ;($C015)Show a window on the screen.

LAA1F:  PLA                     ;Restore the text index from the stack.
LAA20:  STA TextIndex           ;

LAA22:  LDA #$08
LAA24:  STA TXTXPos
LAA26:  LDA #$13
LAA28:  STA TXTYPos
LAA2A:  LDA #$0C
LAA2C:  STA TXTClrCols
LAA2E:  LDA #$06
LAA30:  STA TXTClrRows
LAA32:  LDA #$01
LAA34:  STA ActiveMessage

LAA36:  LDA $C7
LAA38:  ORA #$01
LAA3A:  STA $C7
LAA3C:  JSR DisplayText1        ;($C003)Display text on the screen.

LAA3F:  LDA #$00
LAA41:  STA $EF
LAA43:  BCC LAA6E
LAA45:  LDA HideUprSprites
LAA47:  STA $C8
LAA49:  LDA #$00
LAA4B:  STA $C7
LAA4D:  LDA #$80
LAA4F:  STA $8C
LAA51:  LDA #$00
LAA53:  STA $8B
LAA55:  LDA $30
LAA57:  PHA
LAA58:  JSR $C05D
LAA5B:  STA $30
LAA5D:  LDA #$9D
LAA5F:  STA $8C
LAA61:  LDA #$80
LAA63:  STA $8B
LAA65:  PLA
LAA66:  SEC
LAA67:  ADC $30
LAA69:  STA $30
LAA6B:  JMP LAA00
LAA6E:  LDA $C7
LAA70:  BMI LAA79
LAA72:  LDA #$FF
LAA74:  STA $9B
LAA76:  JSR LB5E8
LAA79:  LDA #$00
LAA7B:  STA $C7
LAA7D:  RTS

DoCombatDialog:
LAA7E:  LDA #$06
LAA80:  STA WndXPos
LAA82:  LDA #$12
LAA84:  STA WndYPos
LAA86:  LDA #$0E
LAA88:  STA WndWidth
LAA8A:  LDA #$08
LAA8C:  STA WndHeight
LAA8E:  JSR ShowWindow1         ;($C015)Show a window on the screen.

LAA91:  PLA
LAA92:  STA $30
LAA94:  LDA #$07
LAA96:  STA $2A
LAA98:  LDA #$13
LAA9A:  STA $29
LAA9C:  LDA #$0C
LAA9E:  STA $2E
LAAA0:  LDA #$06
LAAA2:  STA $2D
LAAA4:  LDA #$01
LAAA6:  STA $C7
LAAA8:  STA $EF
LAAAA:  JSR $C003
LAAAD:  LDA #$00
LAAAF:  STA $C7
LAAB1:  STA $EF
LAAB3:  LDA #$FF
LAAB5:  STA $9B
LAAB7:  JSR LB5E8
LAABA:  JSR $C021
LAABD:  RTS

;----------------------------------------------------------------------------------------------------

LAABE:  .byte $24, $44, $42, $22, $24, $44, $44, $11, $11, $11, $11, $11, $11, $11, $11, $11
LAACE:  .byte $11, $14, $44, $44, $40, $00, $00, $00, $01, $12, $24, $44, $22, $22, $22, $22
LAADE:  .byte $22, $44, $44, $22, $22, $42, $24, $44, $11, $11, $11, $11, $11, $11, $11, $11
LAAEE:  .byte $11, $11, $44, $44, $00, $00, $00, $00, $11, $12, $24, $25, $22, $24, $22, $22
LAAFE:  .byte $22, $44

LAB00:  INC $4A
LAB02:  LDA $4A
LAB04:  AND #$3F
LAB06:  STA $4A
LAB08:  CLC
LAB09:  ADC #$08
LAB0B:  STA $48
LAB0D:  SEC
LAB0E:  LDA $49
LAB10:  SBC #$07
LAB12:  STA $47
LAB14:  JSR $C060
LAB17:  LDY #$01
LAB19:  LDX #$00
LAB1B:  LDA ScreenBlocks,Y
LAB1E:  STA ScreenBlocks,X
LAB21:  INX
LAB22:  INY
LAB23:  CPX #$F0
LAB25:  BNE LAB1B
LAB27:  LDY #$00
LAB29:  LDX #$0F
LAB2B:  JSR $C036
LAB2E:  STA ScreenBlocks,X
LAB31:  INY
LAB32:  TXA
LAB33:  CLC
LAB34:  ADC #$10
LAB36:  TAX
LAB37:  CPY #$0F
LAB39:  BNE LAB2B
LAB3B:  JSR $C030
LAB3E:  LDA #$01
LAB40:  STA $19
LAB42:  LDA #$00
LAB44:  STA $18
LAB46:  JSR LBE00
LAB49:  SEC
LAB4A:  LDA $49
LAB4C:  SBC #$07
LAB4E:  STA $47
LAB50:  CLC
LAB51:  LDA $4A
LAB53:  ADC #$10
LAB55:  STA $48
LAB57:  JSR $C060
LAB5A:  LDA $14
LAB5C:  STA $72
LAB5E:  LDA $13
LAB60:  ROR $72
LAB62:  ROR
LAB63:  LSR
LAB64:  LSR
LAB65:  LSR
LAB66:  CLC
LAB67:  ADC #$18
LAB69:  AND #$1F
LAB6B:  STA $72
LAB6D:  JSR $C066
LAB70:  RTS

LAB71:  .byte $00, $00, $00, $00, $11, $44, $42, $24, $22, $40, $0E, $33, $34, $25, $24

LAB80:  DEC $4A
LAB82:  LDA $4A
LAB84:  AND #$3F
LAB86:  STA $4A
LAB88:  SEC
LAB89:  SBC #$07
LAB8B:  STA $48
LAB8D:  SEC
LAB8E:  LDA $49
LAB90:  SBC #$07
LAB92:  STA $47
LAB94:  JSR $C060
LAB97:  LDY #$EE
LAB99:  LDX #$EF
LAB9B:  LDA ScreenBlocks,Y
LAB9E:  STA ScreenBlocks,X
LABA1:  DEX
LABA2:  DEY
LABA3:  CPX #$FF
LABA5:  BNE LAB9B
LABA7:  LDY #$00
LABA9:  LDX #$00
LABAB:  JSR $C036
LABAE:  STA ScreenBlocks,X
LABB1:  INY
LABB2:  TXA
LABB3:  CLC
LABB4:  ADC #$10
LABB6:  TAX
LABB7:  CPY #$0F
LABB9:  BNE LABAB
LABBB:  JSR $C030
LABBE:  LDA #$1F
LABC0:  STA $19
LABC2:  LDA #$00
LABC4:  STA $18
LABC6:  JSR LBE00
LABC9:  SEC
LABCA:  LDA $49
LABCC:  SBC #$07
LABCE:  STA $47
LABD0:  SEC
LABD1:  LDA $4A
LABD3:  SBC #$0F
LABD5:  STA $48
LABD7:  JSR $C060
LABDA:  LDA $14
LABDC:  STA $72
LABDE:  LDA $13
LABE0:  ROR $72
LABE2:  ROR
LABE3:  LSR
LABE4:  LSR
LABE5:  LSR
LABE6:  CLC
LABE7:  ADC #$17
LABE9:  AND #$1F
LABEB:  STA $72
LABED:  JSR $C066
LABF0:  RTS

LABF1:  .byte $11, $00, $00, $00, $41, $11, $14, $42, $42, $22, $44, $43, $00, $04, $44

LAC00:  DEC $49
LAC02:  LDA $49
LAC04:  AND #$3F
LAC06:  STA $49
LAC08:  SEC
LAC09:  SBC #$07
LAC0B:  STA $47
LAC0D:  LDA $4A
LAC0F:  CLC
LAC10:  ADC #$01
LAC12:  STA $48
LAC14:  JSR $C063
LAC17:  LDX #$00
LAC19:  LDA $4F,X
LAC1B:  STA $5F,X
LAC1D:  INX
LAC1E:  CPX #$10
LAC20:  BNE LAC19
LAC22:  SEC
LAC23:  LDA $48
LAC25:  SBC #$10
LAC27:  STA $48
LAC29:  JSR $C063
LAC2C:  LDY #$DF
LAC2E:  LDX #$EF
LAC30:  LDA ScreenBlocks,Y
LAC33:  STA ScreenBlocks,X
LAC36:  DEY
LAC37:  DEX
LAC38:  CPX #$FF
LAC3A:  BNE LAC30
LAC3C:  LDY #$08
LAC3E:  LDX #$00
LAC40:  JSR $C036
LAC43:  STA ScreenBlocks,X
LAC46:  INX
LAC47:  INY
LAC48:  CPY #$18
LAC4A:  BNE LAC40
LAC4C:  JSR $C030
LAC4F:  LDA #$00
LAC51:  STA $19
LAC53:  LDA #$0E
LAC55:  STA $18
LAC57:  JSR LBE00
LAC5A:  LDA $15
LAC5C:  LSR
LAC5D:  LSR
LAC5E:  LSR
LAC5F:  LSR
LAC60:  CLC
LAC61:  ADC #$0E
LAC63:  CMP #$0F
LAC65:  BCC LAC6A
LAC67:  SEC
LAC68:  SBC #$0F
LAC6A:  STA $71
LAC6C:  JSR $C069
LAC6F:  RTS

LAC70:  .byte $11, $00, $00, $00, $00, $00, $11, $14, $42, $22, $22, $44, $41, $14, $42, $24

LAC80:  INC $49
LAC82:  LDA $49
LAC84:  AND #$3F
LAC86:  STA $49
LAC88:  CLC
LAC89:  ADC #$07
LAC8B:  STA $47
LAC8D:  LDA $4A
LAC8F:  CLC
LAC90:  ADC #$01
LAC92:  STA $48
LAC94:  JSR $C063
LAC97:  LDX #$00
LAC99:  LDA $4F,X
LAC9B:  STA $5F,X
LAC9D:  INX
LAC9E:  CPX #$10
LACA0:  BNE LAC99
LACA2:  SEC
LACA3:  LDA $48
LACA5:  SBC #$10
LACA7:  STA $48
LACA9:  JSR $C063
LACAC:  LDY #$10
LACAE:  LDX #$00
LACB0:  LDA ScreenBlocks,Y
LACB3:  STA ScreenBlocks,X
LACB6:  INX
LACB7:  INY
LACB8:  CPX #$F0
LACBA:  BNE LACB0
LACBC:  LDY #$08
LACBE:  LDX #$E0
LACC0:  JSR $C036
LACC3:  STA ScreenBlocks,X
LACC6:  INX
LACC7:  INY
LACC8:  CPY #$18
LACCA:  BNE LACC0
LACCC:  JSR $C030
LACCF:  LDA #$00
LACD1:  STA $19
LACD3:  LDA #$01
LACD5:  STA $18
LACD7:  JSR LBE00
LACDA:  LDA $15
LACDC:  LSR
LACDD:  LSR
LACDE:  LSR
LACDF:  LSR
LACE0:  CMP #$0F
LACE2:  BCC LACE7
LACE4:  SEC
LACE5:  SBC #$0F
LACE7:  STA $71
LACE9:  JSR $C069
LACEC:  RTS

LACED:  .byte $00, $00, $00, $00, $00, $00, $00, $01, $11, $44, $22, $22, $44, $42, $11, $22
LACFD:  .byte $22, $22, $24

LAD00:  LDA #$05
LAD02:  JSR FlashAndSound1      ;($C04E)Flash screen with SFX.
LAD05:  LDA #MUS_NONE+INIT
LAD07:  STA InitNewMusic
LAD09:  JSR LAD9A
LAD0C:  LDX #$00
LAD0E:  LDY #$03
LAD10:  JSR LAD28
LAD13:  JSR LADAB
LAD16:  JSR LAD48
LAD19:  LDX #$03
LAD1B:  LDY #$03
LAD1D:  JSR LAD28
LAD20:  CLC
LAD21:  RTS

EndTextTbl:
LAD22:  .byte $53, $54, $E2, $FA, $E3, $E4

LAD28:  LDA EndTextTbl,X
LAD2B:  STA TextIndex
LAD2D:  TXA
LAD2E:  PHA
LAD2F:  TYA
LAD30:  PHA
LAD31:  LDA $C7
LAD33:  ORA #$80
LAD35:  STA $C7
LAD37:  JSR LAA00
LAD3A:  LDA #$B4
LAD3C:  JSR LB9CA
LAD3F:  PLA
LAD40:  TAY
LAD41:  PLA
LAD42:  TAX
LAD43:  INX
LAD44:  DEY
LAD45:  BNE LAD28
LAD47:  RTS

LAD48:  LDA #$AD
LAD4A:  STA $2A
LAD4C:  LDA #$BB
LAD4E:  STA $29
LAD50:  LDA #$0B
LAD52:  STA $2C
LAD54:  LDA #$00
LAD56:  STA $2B
LAD58:  LDA #$00
LAD5A:  STA $2E
LAD5C:  LDA #$80
LAD5E:  STA $2D
LAD60:  JSR $C006
LAD63:  LDA $7397
LAD66:  PHA
LAD67:  LDX #$00
LAD69:  LDA $AE3B,X
LAD6C:  STA $7384,X
LAD6F:  INX
LAD70:  CPX #$40
LAD72:  BNE LAD69
LAD74:  PLA
LAD75:  CLC
LAD76:  ADC #$08
LAD78:  STA $7387
LAD7B:  STA $738B
LAD7E:  CLC
LAD7F:  ADC #$08
LAD81:  STA $738F
LAD84:  STA $7393
LAD87:  LDA #$78
LAD89:  JSR LB9CA
LAD8C:  LDX #$00
LAD8E:  LDA $AE4B,X
LAD91:  STA $7384,X
LAD94:  INX
LAD95:  CPX #$10
LAD97:  BNE LAD8E
LAD99:  RTS
LAD9A:  LDX #$00
LAD9C:  LDA ScreenBlocks,X
LAD9F:  ORA #$C0
LADA1:  STA ScreenBlocks,X
LADA4:  INX
LADA5:  BNE LAD9C
LADA7:  JSR $C021
LADAA:  RTS
LADAB:  JSR $C021
LADAE:  JSR $C030
LADB1:  LDA #$00
LADB3:  STA $19
LADB5:  STA $18
LADB7:  JSR LBE00
LADBA:  RTS

LADBB:  .byte $07, $0C, $08, $08, $08, $08, $04, $02, $00, $02, $04, $04, $04, $06, $02, $01
LADCB:  .byte $3F, $01, $01, $01, $01, $01, $01, $01, $00, $1E, $00, $00, $00, $00, $00, $00
LADDB:  .byte $C0, $60, $20, $20, $20, $20, $40, $80, $20, $10, $10, $10, $10, $10, $20, $40
LADEB:  .byte $F8, $00, $00, $00, $00, $00, $00, $00, $00, $F8, $80, $80, $80, $80, $80, $80
LADFB:  .byte $07, $0C, $08, $08, $08, $08, $04, $02, $00, $02, $04, $04, $04, $06, $02, $01
LAE0B:  .byte $3F, $01, $01, $01, $01, $01, $01, $01, $00, $1E, $00, $00, $00, $00, $00, $00
LAE1B:  .byte $C0, $60, $20, $20, $20, $20, $40, $80, $20, $10, $10, $10, $10, $10, $20, $40
LAE2B:  .byte $F8, $00, $00, $00, $00, $00, $00, $00, $00, $F8, $80, $80, $80, $80, $80, $80
LAE3B:  .byte $50, $B0, $00, $40, $50, $B1, $00, $40, $50, $B2, $00, $48, $50, $B3, $00, $48
LAE4B:  .byte $F0, $00, $00, $00, $F0, $00, $00, $00, $F0, $00, $00, $00, $F0, $00, $00, $00
LAE5B:  .byte $F0, $00, $00, $00, $F0, $00, $00, $00, $F0, $00, $00, $00, $F0, $00, $00, $00
LAE6B:  .byte $F0, $00, $00, $00, $F0, $00, $00, $00, $F0, $00, $00, $00, $F0, $00, $00, $00
LAE7B:  .byte $42, $24, $22, $44, $24

;----------------------------------------------------------------------------------------------------

LAE80:  LDA DungeonLevel
LAE82:  ASL
LAE83:  STA $30
LAE85:  ASL
LAE86:  ASL
LAE87:  CLC
LAE88:  ADC $30
LAE8A:  STA $30
LAE8C:  LDA #$0A
LAE8E:  JSR LB5FF
LAE91:  LDA $B8
LAE93:  CLC
LAE94:  ADC $30
LAE96:  TAX
LAE97:  LDA DungeonFightTbl,X
LAE9A:  RTS

DungeonFightTbl:
LAE9B:  .byte NPC_LND_EN_1, NPC_LND_EN_1, NPC_LND_EN_1, NPC_LND_EN_3
LAE9F:  .byte NPC_LND_EN_3, NPC_LND_EN_3, NPC_LND_EN_3, NPC_LND_EN_3
LAEA3:  .byte NPC_LND_EN_5, NPC_LND_EN_5, NPC_LND_EN_1, NPC_LND_EN_1
LAEA7:  .byte NPC_LND_EN_3, NPC_LND_EN_3, NPC_LND_EN_3, NPC_LND_EN_3
LAEAB:  .byte NPC_LND_EN_5, NPC_LND_EN_5, NPC_LND_EN_5, NPC_LND_EN_5
LAEAF:  .byte NPC_LND_EN_1, NPC_LND_EN_3, NPC_LND_EN_3, NPC_LND_EN_3
LAEB3:  .byte NPC_LND_EN_7, NPC_LND_EN_5, NPC_LND_EN_5, NPC_LND_EN_5
LAEB7:  .byte NPC_LND_EN_5, NPC_LND_EN_5, NPC_LND_EN_1, NPC_LND_EN_3
LAEBB:  .byte NPC_LND_EN_3, NPC_LND_EN_3, NPC_LND_EN_7, NPC_LND_EN_5
LAEBF:  .byte NPC_LND_EN_5, NPC_LND_EN_5, NPC_LND_EN_5, NPC_LND_EN_5
LAEC3:  .byte NPC_LND_EN_1, NPC_LND_EN_3, NPC_LND_EN_3, NPC_LND_EN_3
LAEC7:  .byte NPC_LND_EN_7, NPC_LND_EN_7, NPC_LND_EN_7, NPC_LND_EN_5
LAECB:  .byte NPC_LND_EN_5, NPC_LND_EN_5, NPC_LND_EN_1, NPC_LND_EN_3
LAECF:  .byte NPC_LND_EN_3, NPC_LND_EN_3, NPC_LND_EN_7, NPC_LND_EN_7
LAED3:  .byte NPC_LND_EN_7, NPC_LND_EN_5, NPC_LND_EN_5, NPC_LND_EN_5
LAED7:  .byte NPC_LND_EN_1, NPC_LND_EN_3, NPC_LND_EN_3, NPC_LND_EN_7
LAEDB:  .byte NPC_LND_EN_7, NPC_LND_EN_7, NPC_LND_EN_5, NPC_LND_EN_5
LAEDF:  .byte NPC_LND_EN_5, NPC_LND_EN_9, NPC_LND_EN_3, NPC_LND_EN_7
LAEE3:  .byte NPC_LND_EN_7, NPC_LND_EN_7, NPC_LND_EN_5, NPC_LND_EN_5
LAEE7:  .byte NPC_LND_EN_5, NPC_LND_EN_5, NPC_LND_EN_9, NPC_LND_EN_9

;----------------------------------------------------------------------------------------------------

;Unused.
LAEEB:  .byte $44, $44, $44, $40, $03, $33, $00, $42, $52, $24, $42, $22, $44, $42, $22, $22
LAEFB:  .byte $22, $24, $42, $22, $24

;----------------------------------------------------------------------------------------------------

LAF00:  PHA
LAF01:  LDX #$01
LAF03:  LDA MapProperties
LAF05:  AND #$02
LAF07:  BNE LAF38
LAF09:  LDX #$08
LAF0B:  LDA MapProperties
LAF0D:  AND #$01
LAF0F:  BNE LAF38
LAF11:  LDA MapProperties
LAF13:  CMP #$0C
LAF15:  BNE LAF22
LAF17:  LDX #$80
LAF19:  LDA OnBoat
LAF1B:  BEQ LAF38
LAF1D:  LDX #$40
LAF1F:  JMP LAF38
LAF22:  LDX #$02
LAF24:  LDA ThisMap
LAF26:  CMP #MAP_EXODUS
LAF28:  BEQ LAF38
LAF2A:  LDX #$04
LAF2C:  CMP #MAP_AMBROSIA
LAF2E:  BEQ LAF38
LAF30:  LDX #$10
LAF32:  CMP #MAP_LB_CSTL
LAF34:  BEQ LAF38
LAF36:  LDX #$20
LAF38:  STX $30
LAF3A:  PLA
LAF3B:  TAX
LAF3C:  LDA $AF47,X
LAF3F:  AND $30
LAF41:  BEQ LAF45
LAF43:  CLC
LAF44:  RTS
LAF45:  SEC
LAF46:  RTS

LAF47:  .byte $01, $01, $08, $08, $08, $01, $84, $01, $08, $FF, $01, $01, $FD, $01, $01, $01
LAF57:  .byte $01, $BE, $FF, $08, $08, $08, $08, $FF, $08, $08, $FF, $CC, $01, $FE, $01, $FE
LAF67:  .byte $08, $FF, $8C, $FD, $8C, $80, $80, $E0, $FD, $0F, $30, $30, $30, $0F, $30, $30
LAF77:  .byte $30, $0F, $0F, $18, $26, $0F, $0F, $18, $26, $0F, $30, $30, $00, $0F, $18, $08
LAF87:  .byte $08, $0F, $30, $02, $36, $0F, $30, $30, $00, $33, $33, $33, $44, $43, $33, $33
LAF97:  .byte $33, $33, $34, $43, $33, $33, $33, $34, $24

LAFA0:  LDX #$00
LAFA2:  STX $2E
LAFA4:  STX $2D
LAFA6:  LDA $91,X
LAFA8:  STA $99
LAFAA:  LDA $92,X
LAFAC:  STA $9A
LAFAE:  LDY #CHR_COND
LAFB0:  LDA (CrntChrPtr),Y
LAFB2:  BEQ LAFB8
LAFB4:  CMP #$03
LAFB6:  BCC LAFC8
LAFB8:  LDY #CHR_FOOD
LAFBA:  LDA (CrntChrPtr),Y
LAFBC:  INY
LAFBD:  ORA (CrntChrPtr),Y
LAFBF:  BEQ LAFC8
LAFC1:  INX
LAFC2:  INX
LAFC3:  CPX #$08
LAFC5:  BNE LAFA6
LAFC7:  RTS
LAFC8:  LDA #SFX_PLYR_ILL+INIT
LAFCA:  STA ThisSFX
LAFCC:  RTS

LAFCD:  .byte $33, $33, $44, $44, $43, $33, $44, $43, $33, $44, $44, $43, $33, $33, $44, $43
LAFDD:  .byte $32, $22, $24, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44
LAFED:  .byte $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44, $44
LAFFD:  .byte $44, $44, $44

LB000:  LDX #$00
LB002:  LDA #$FF
LB004:  STA $0400,X
LB007:  INX
LB008:  LDA #$00
LB00A:  STA $0400,X
LB00D:  INX
LB00E:  INX
LB00F:  INX
LB010:  CPX #$80
LB012:  BNE LB002
LB014:  JSR LB0CA
LB017:  LDX #$00
LB019:  CMP #$03
LB01B:  BCC LB032
LB01D:  INX
LB01E:  CMP #$05
LB020:  BCC LB032
LB022:  INX
LB023:  CMP #$07
LB025:  BCC LB032
LB027:  INX
LB028:  CMP #$09
LB02A:  BCC LB032
LB02C:  INX
LB02D:  CMP #$0B
LB02F:  BCC LB032
LB031:  INX
LB032:  TXA
LB033:  ASL
LB034:  TAX
LB035:  LDA $B0BE,X
LB038:  STA $29
LB03A:  LDA $B0BF,X
LB03D:  STA $2A
LB03F:  LDA #$15
LB041:  STA $18
LB043:  LDA #$00
LB045:  STA $19
LB047:  LDA #$0A
LB049:  STA $2D
LB04B:  LDY #$00
LB04D:  STY $17
LB04F:  LDY $17
LB051:  LDA ($29),Y
LB053:  STA $2E
LB055:  INY
LB056:  LDA ($29),Y
LB058:  STA $30
LB05A:  INY
LB05B:  STY $17
LB05D:  LDA $2E
LB05F:  BNE LB064
LB061:  JMP LB082
LB064:  LDA #$40
LB066:  JSR LB5FF
LB069:  STA $48
LB06B:  LDA #$40
LB06D:  JSR LB5FF
LB070:  STA $47
LB072:  JSR LB100
LB075:  BCS LB064
LB077:  CLC
LB078:  LDA $19
LB07A:  ADC #$04
LB07C:  STA $19
LB07E:  DEC $2E
LB080:  BNE LB064
LB082:  INC $18
LB084:  DEC $2D
LB086:  BEQ LB08B
LB088:  JMP LB04F
LB08B:  LDA BoatXPos
LB08E:  STA $047E
LB091:  LDA BoatYPos
LB094:  STA $047F
LB097:  CMP #$FF
LB099:  BEQ LB09D
LB09B:  LDA #$85
LB09D:  STA $047C
LB0A0:  LDX #$44
LB0A2:  LDA #SPRT_HIDE
LB0A4:  STA $7300,X
LB0A7:  INX
LB0A8:  INX
LB0A9:  INX
LB0AA:  INX
LB0AB:  BNE LB0A2
LB0AD:  RTS

LB0AE:  .byte $01, $01, $01, $00, $00, $00, $01, $00, $00, $00, $00, $01, $00, $00, $00, $00
LB0BE:  .byte $76, $B1, $8A, $B1, $9E, $B1, $B2, $B1, $C6, $B1, $DA, $B1

LB0CA:  LDX #$00
LB0CC:  STX $30
LB0CE:  LDY #CHR_LEVEL
LB0D0:  LDA $91,X
LB0D2:  STA $99
LB0D4:  LDA $92,X
LB0D6:  STA $9A
LB0D8:  LDA (CrntChrPtr),Y
LB0DA:  CMP $30
LB0DC:  BCC LB0E0
LB0DE:  STA $30
LB0E0:  INX
LB0E1:  INX
LB0E2:  CPX #$08
LB0E4:  BNE LB0D0
LB0E6:  LDA $30
LB0E8:  RTS

LB0E9:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $77, $77, $77, $77
LB0F9:  .byte $77, $77, $77, $77, $77, $77, $77

LB100:  LDA $48
LB102:  AND #$FE
LB104:  STA $48
LB106:  JSR LB648
LB109:  LDX #$20
LB10B:  LDA $30
LB10D:  BNE LB127
LB10F:  LDA ($43),Y
LB111:  LSR
LB112:  LSR
LB113:  LSR
LB114:  LSR
LB115:  JSR LB166
LB118:  BCC LB14A
LB11A:  INC $48
LB11C:  LDA ($43),Y
LB11E:  AND #$0F
LB120:  JSR LB166
LB123:  BCC LB14A
LB125:  BCS LB139
LB127:  LDA ($43),Y
LB129:  AND #$F0
LB12B:  CMP #$30
LB12D:  BEQ LB14A
LB12F:  INC $48
LB131:  LDA ($43),Y
LB133:  AND #$0F
LB135:  CMP #$03
LB137:  BEQ LB14A
LB139:  INC $48
LB13B:  INY
LB13C:  CPY #$20
LB13E:  BNE LB142
LB140:  LDY #$00
LB142:  DEX
LB143:  BNE LB10B
LB145:  INC $47
LB147:  JMP LB100
LB14A:  LDX $19
LB14C:  LDA $48
LB14E:  AND #$3F
LB150:  STA $0402,X
LB153:  LDA $47
LB155:  AND #$3F
LB157:  STA $0403,X
LB15A:  LDA $18
LB15C:  STA $0400,X
LB15F:  LDA #$00
LB161:  STA $0401,X
LB164:  CLC
LB165:  RTS
LB166:  STX $E7
LB168:  TAX
LB169:  LDA $B0AE,X
LB16C:  LDX $E7
LB16E:  AND #$01
LB170:  BNE LB174
LB172:  SEC
LB173:  RTS
LB174:  CLC
LB175:  RTS

LB176:  .byte $1C, $00, $00, $00, $00, $00, $00, $01, $00, $00, $00, $00, $00, $01, $00, $01
LB186:  .byte $00, $00, $01, $01, $16, $00, $06, $00, $00, $00, $00, $01, $00, $00, $00, $00
LB196:  .byte $00, $01, $00, $01, $00, $00, $01, $01, $08, $00, $0B, $00, $06, $00, $03, $01
LB1A6:  .byte $00, $00, $00, $00, $00, $01, $01, $01, $00, $00, $01, $01, $02, $00, $08, $00
LB1B6:  .byte $0B, $00, $04, $01, $03, $00, $00, $00, $00, $01, $01, $01, $00, $00, $01, $01
LB1C6:  .byte $02, $00, $05, $00, $08, $00, $03, $01, $08, $00, $00, $00, $02, $01, $01, $01
LB1D6:  .byte $00, $00, $01, $01, $01, $00, $03, $00, $04, $00, $02, $01, $05, $00, $04, $00
LB1E6:  .byte $02, $01, $05, $01, $00, $00, $01, $01, $99, $9B, $B9, $99, $33, $33, $C7, $7B
LB1F6:  .byte $BB, $BB, $BC, $BB, $97, $77, $77, $77, $77, $77

LB200:  LDA MapProperties
LB202:  CMP #$0C
LB204:  BEQ LB207
LB206:  RTS
LB207:  LDA $D3
LB209:  JSR LB249
LB20C:  LDA $D3
LB20E:  JSR LB25D
LB211:  LDA #$26
LB213:  STA $30
LB215:  LDA #$36
LB217:  STA $2E
LB219:  LDA $D3
LB21B:  AND #$F0
LB21D:  BNE LB22A
LB21F:  LDA $D4
LB221:  AND #$F0
LB223:  BNE LB22A
LB225:  LDA #$8F
LB227:  JMP LB22C
LB22A:  LDA #$82
LB22C:  STA $2D
LB22E:  JSR LB274
LB231:  LDA $0B
LB233:  BNE LB231
LB235:  LDA $0F
LB237:  STA $13
LB239:  LDA $10
LB23B:  STA $14
LB23D:  LDA $11
LB23F:  STA $15
LB241:  LDA $12
LB243:  STA $16
LB245:  JSR $C021
LB248:  RTS
LB249:  LSR
LB24A:  LSR
LB24B:  LSR
LB24C:  LSR
LB24D:  SEC
LB24E:  SBC #$01
LB250:  AND #$07
LB252:  TAY
LB253:  ASL
LB254:  TAX
LB255:  LDA $B2C7,Y
LB258:  STA $2D
LB25A:  JMP LB26A
LB25D:  LSR
LB25E:  LSR
LB25F:  LSR
LB260:  LSR
LB261:  ASL
LB262:  TAX
LB263:  LDA #$85
LB265:  STA $2D
LB267:  JMP LB26A
LB26A:  LDA $B2CF,X
LB26D:  STA $30
LB26F:  LDA $B2D0,X
LB272:  STA $2E
LB274:  LDX #$00
LB276:  LDA $4A
LB278:  SEC
LB279:  SBC $30
LB27B:  BMI LB27F
LB27D:  EOR #$FF
LB27F:  CMP #$F8
LB281:  JSR LB2BE
LB284:  LDA $49
LB286:  SEC
LB287:  SBC $2E
LB289:  BMI LB28F
LB28B:  EOR #$FF
LB28D:  ADC #$00
LB28F:  CMP #$F9
LB291:  JSR LB2BE
LB294:  CPX #$01
LB296:  BCS LB2C6
LB298:  SEC
LB299:  LDA $30
LB29B:  SBC $4A
LB29D:  CLC
LB29E:  ADC #$07
LB2A0:  AND #$0F
LB2A2:  STA $30
LB2A4:  SEC
LB2A5:  LDA $2E
LB2A7:  SBC $49
LB2A9:  CLC
LB2AA:  ADC #$07
LB2AC:  ASL
LB2AD:  ASL
LB2AE:  ASL
LB2AF:  ASL
LB2B0:  ORA $30
LB2B2:  TAX
LB2B3:  LDA ScreenBlocks,X
LB2B6:  AND #$E0
LB2B8:  ORA $2D
LB2BA:  STA ScreenBlocks,X
LB2BD:  RTS
LB2BE:  BPL LB2C6
LB2C0:  CMP #$C8
LB2C2:  BMI LB2C6
LB2C4:  LDX #$FF
LB2C6:  RTS

LB2C7:  .byte $80, $81, $80, $80, $80, $80, $80, $80, $08, $08, $3B, $2E, $0F, $1B, $24, $3A
LB2D7:  .byte $0F, $1D, $0C, $37, $1F, $1F, $3A, $1F, $77, $C6, $6C, $BB, $77, $C8, $C7, $79
LB2E7:  .byte $BB, $C7, $72, $C8, $88, $88, $88, $88, $88, $88, $C8, $8C, $88, $88, $8C, $EE
LB2F7:  .byte $88, $8C, $77, $77, $77, $77, $77, $77, $77

LB300:  LDY #$2B
LB302:  LDA ($91),Y
LB304:  STA $2D
LB306:  INY
LB307:  LDA ($91),Y
LB309:  STA $2E
LB30B:  DEY
LB30C:  LDA ($93),Y
LB30E:  CLC
LB30F:  ADC $2D
LB311:  STA $2D
LB313:  INY
LB314:  LDA ($93),Y
LB316:  ADC $2E
LB318:  STA $2E
LB31A:  DEY
LB31B:  LDA ($95),Y
LB31D:  CLC
LB31E:  ADC $2D
LB320:  STA $2D
LB322:  INY
LB323:  LDA ($95),Y
LB325:  ADC $2E
LB327:  STA $2E
LB329:  DEY
LB32A:  LDA ($97),Y
LB32C:  CLC
LB32D:  ADC $2D
LB32F:  STA $2D
LB331:  INY
LB332:  LDA ($97),Y
LB334:  ADC $2E
LB336:  STA $2E
LB338:  DEY
LB339:  LSR $2E
LB33B:  ROR $2D
LB33D:  LSR $2E
LB33F:  ROR $2D
LB341:  LDA $2D
LB343:  STA ($91),Y
LB345:  STA ($93),Y
LB347:  STA ($95),Y
LB349:  STA ($97),Y
LB34B:  INY
LB34C:  LDA $2E
LB34E:  STA ($91),Y
LB350:  STA ($93),Y
LB352:  STA ($95),Y
LB354:  STA ($97),Y
LB356:  LDA #$12
LB358:  STA $30
LB35A:  JSR LAA00
LB35D:  RTS

LB35E:  .byte $0F, $30, $30, $30, $0F, $30, $30, $30, $0F, $28, $18, $21, $0F, $28, $18, $21
LB36E:  .byte $0F, $30, $30, $00, $0F, $18, $08, $08, $0F, $30, $02, $36, $0F, $30, $30, $00
LB37E:  .byte $5B, $7C

LB380:  LDA $D2
LB382:  BNE LB3B0
LB384:  LDA $B1
LB386:  BNE LB393
LB388:  LDA #$B4
LB38A:  STA $2A
LB38C:  LDA #$AB
LB38E:  STA $29
LB390:  JMP LB3AC
LB393:  CMP #$0A
LB395:  BCS LB3A2
LB397:  LDA #$B4
LB399:  STA $2A
LB39B:  LDA #$CB
LB39D:  STA $29
LB39F:  JMP LB3AA
LB3A2:  LDA #$B4
LB3A4:  STA $2A
LB3A6:  LDA #$6B
LB3A8:  STA $29
LB3AA:  DEC $B1
LB3AC:  JSR LB67A
LB3AF:  RTS
LB3B0:  JSR LB6BD
LB3B3:  CMP #$0E
LB3B5:  BEQ LB3C6
LB3B7:  CMP #$06
LB3B9:  BEQ LB3D1
LB3BB:  LDA #$B3
LB3BD:  STA $2A
LB3BF:  LDA #$5E
LB3C1:  STA $29
LB3C3:  JMP LB3AC
LB3C6:  LDA #$B3
LB3C8:  STA $2A
LB3CA:  LDA #$DC
LB3CC:  STA $29
LB3CE:  JMP LB3AC
LB3D1:  LDA #$AF
LB3D3:  STA $2A
LB3D5:  LDA #$70
LB3D7:  STA $29
LB3D9:  JMP LB3AC

LB3DA:  .byte $0F, $30, $30, $30, $0F, $30, $30, $30, $0F, $32, $30, $37, $0F, $32, $30, $37
LB3EA:  .byte $0F, $30, $30, $00, $0F, $18, $08, $08, $0F, $30, $02, $36, $0F, $30, $30, $00
LB3FA:  .byte $B7, $77, $C7, $7C

;----------------------------------------------------------------------------------------------------

DoBinToBCD:
LB400:  PHA                     ;Save A on the stack before beginning.

LB401:  LDA #TP_ZERO            ;
LB403:  STA BCDOutput0          ;
LB405:  STA BCDOutput1          ;Set all the output digits to zero.
LB407:  STA BCDOutput2          ;
LB409:  STA BCDOutput3          ;

LB40B:* SEC                     ;
LB40C:  LDA BinInputLB          ;
LB40E:  SBC #$E8                ;
LB410:  STA BinInputLB          ;Keep subtracting 1,000 until number goes negative.
LB412:  LDA BinInputUB          ;
LB414:  SBC #$03                ;
LB416:  STA BinInputUB          ;
LB418:  BCC +                   ;

LB41A:  INC BCDOutput0          ;Increment thousands digit for each subtrct loop.
LB41C:  JMP -                   ;

LB41F:* CLC                     ;
LB420:  LDA BinInputLB          ;
LB422:  ADC #$E8                ;
LB424:  STA BinInputLB          ;Undo last 1,000 subtract to put number positive again.
LB426:  LDA BinInputUB          ;
LB428:  ADC #$03                ;
LB42A:  STA BinInputUB          ;

LB42C:* SEC                     ;
LB42D:  LDA BinInputLB          ;
LB42F:  SBC #$64                ;
LB431:  STA BinInputLB          ;Keep subtracting 100 until number goes negative.
LB433:  LDA BinInputUB          ;
LB435:  SBC #$00                ;
LB437:  STA BinInputUB          ;
LB439:  BCC +                   ;

LB43B:  INC BCDOutput1          ;Increment hundreds digit for each subtrct loop.
LB43D:  JMP -                   ;

LB440:* CLC                     ;
LB441:  LDA BinInputLB          ;
LB443:  ADC #$64                ;
LB445:  STA BinInputLB          ;Undo last 100 subtract to put number positive again.
LB447:  LDA BinInputUB          ;
LB449:  ADC #$00                ;
LB44B:  STA BinInputUB          ;

LB44D:* SEC                     ;
LB44E:  LDA BinInputLB          ;
LB450:  SBC #$0A                ;Keep subtracting 100 until number goes negative.
LB452:  STA BinInputLB          ;
LB454:  BCC +                   ;

LB456:  INC BCDOutput2          ;Increment tens digit for each subtrct loop.
LB458:  JMP -                   ;

LB45B:* CLC                     ;
LB45C:  LDA BinInputLB          ;Undo last 10 subtract to put number positive again.
LB45E:  ADC #$0A                ;
LB460:  STA BinInputLB          ;

LB462:  CLC                     ;
LB463:  LDA BCDOutput3          ;Add remainng value to the ones digit.
LB465:  ADC BinInputLB          ;
LB467:  STA BCDOutput3          ;

LB469:  PLA                     ;Restore A from the stack and return.
LB46A:  RTS                     ;

;----------------------------------------------------------------------------------------------------

LB46B:  .byte $0F, $30, $30, $00, $0F, $30, $30, $30, $0F, $28, $18, $08, $0F, $28, $18, $08
LB47B:  .byte $0F, $30, $30, $00, $0F, $28, $18, $08, $0F, $30, $02, $36, $0F, $30, $30, $00
LB48B:  .byte $0F, $30, $30, $00, $0F, $30, $30, $30, $0F, $0F, $18, $28, $0F, $0F, $18, $28
LB49B:  .byte $0F, $30, $30, $00, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F
LB4AB:  .byte $0F, $30, $30, $00, $0F, $30, $30, $30, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F
LB4BB:  .byte $0F, $30, $30, $30, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F
LB4CB:  .byte $0F, $30, $30, $30, $0F, $30, $30, $30, $0F, $18, $08, $08, $0F, $18, $08, $08
LB4DB:  .byte $0F, $30, $30, $00, $0F, $18, $08, $08, $0F, $20, $02, $26, $0F, $20, $20, $00
LB4EB:  .byte $33, $33, $33, $33, $9B, $BB, $99, $33, $33, $3C, $8C, $66, $CC, $C6, $6C, $88
LB4FB:  .byte $86, $6C, $88, $83, $33

LB500:  LDA #$00
LB502:  STA $2C
LB504:  STA $2B
LB506:  LDA #$FF
LB508:  STA $9B
LB50A:  JSR LB5E8
LB50D:  LDX #$01
LB50F:  CMP #$01
LB511:  BEQ LB53A
LB513:  LDX #$FF
LB515:  CMP #$02
LB517:  BEQ LB53A
LB519:  LDX #$01
LB51B:  CMP #$04
LB51D:  BEQ LB584
LB51F:  LDX #$FF
LB521:  CMP #$08
LB523:  BEQ LB584
LB525:  CMP #$80
LB527:  BEQ LB534
LB529:  CMP #$40
LB52B:  BEQ LB537
LB52D:  CMP #$20
LB52F:  BNE LB506
LB531:  JMP LB5E4
LB534:  JMP LB5CE
LB537:  JMP LB5CC
LB53A:  CLC
LB53B:  TXA
LB53C:  ADC $2C
LB53E:  CMP #$FF
LB540:  BEQ LB559
LB542:  CMP $2E
LB544:  BEQ LB56B
LB546:  STA $2C
LB548:  TXA
LB549:  ASL
LB54A:  ASL
LB54B:  ASL
LB54C:  ASL
LB54D:  ASL
LB54E:  ASL
LB54F:  CLC
LB550:  ADC $7303
LB553:  STA $7303
LB556:  JMP LB506
LB559:  LDA $2E
LB55B:  SEC
LB55C:  SBC #$01
LB55E:  STA $2C
LB560:  ASL
LB561:  ASL
LB562:  ASL
LB563:  ASL
LB564:  CLC
LB565:  ADC $7303
LB568:  JMP LB553
LB56B:  LDA #$00
LB56D:  STA $2C
LB56F:  LDA $2E
LB571:  SEC
LB572:  SBC #$01
LB574:  ASL
LB575:  ASL
LB576:  ASL
LB577:  ASL
LB578:  SEC
LB579:  SBC $7303
LB57C:  EOR #$FF
LB57E:  CLC
LB57F:  ADC #$01
LB581:  JMP LB553
LB584:  CLC
LB585:  TXA
LB586:  ADC $2B
LB588:  CMP #$FF
LB58A:  BEQ LB5A1
LB58C:  CMP $2D
LB58E:  BEQ LB5B3
LB590:  STA $2B
LB592:  TXA
LB593:  ASL
LB594:  ASL
LB595:  ASL
LB596:  ASL
LB597:  CLC
LB598:  ADC $7300
LB59B:  STA $7300
LB59E:  JMP LB506
LB5A1:  LDA $2D
LB5A3:  SEC
LB5A4:  SBC #$01
LB5A6:  STA $2B
LB5A8:  ASL
LB5A9:  ASL
LB5AA:  ASL
LB5AB:  ASL
LB5AC:  CLC
LB5AD:  ADC $7300
LB5B0:  JMP LB59B
LB5B3:  LDA #$00
LB5B5:  STA $2B
LB5B7:  LDA $2D
LB5B9:  SEC
LB5BA:  SBC #$01
LB5BC:  ASL
LB5BD:  ASL
LB5BE:  ASL
LB5BF:  ASL
LB5C0:  SEC
LB5C1:  SBC $7300
LB5C4:  EOR #$FF
LB5C6:  CLC
LB5C7:  ADC #$01
LB5C9:  JMP LB59B
LB5CC:  SEC
LB5CD:  RTS
LB5CE:  LDA $2C
LB5D0:  PHA
LB5D1:  INC $2C
LB5D3:  LDA #$00
LB5D5:  CLC
LB5D6:  ADC $2B
LB5D8:  DEC $2C
LB5DA:  BNE LB5D5
LB5DC:  STA $2B
LB5DE:  PLA
LB5DF:  CLC
LB5E0:  ADC $2B
LB5E2:  CLC
LB5E3:  RTS
LB5E4:  LDA #$FF
LB5E6:  CLC
LB5E7:  RTS
LB5E8:  LDA #$00
LB5EA:  STA IgnoreInput
LB5EC:  STA InputChange
LB5EE:  LDA $00
LB5F0:  CMP $00
LB5F2:  BEQ LB5F0
LB5F4:  LDA InputChange
LB5F6:  BEQ LB5E8
LB5F8:  LDA $09
LB5FA:  AND $9B
LB5FC:  BEQ LB5E8
LB5FE:  RTS

LB5FF:  PHA
LB600:  LDA $BA
LB602:  STA $B6
LB604:  LDA #$15
LB606:  STA $B5
LB608:  JSR LB62E
LB60B:  CLC
LB60C:  LDA $B7
LB60E:  ADC #$17
LB610:  STA $B6
LB612:  LDA #$15
LB614:  STA $B5
LB616:  JSR LB62E
LB619:  CLC
LB61A:  LDA $B7
LB61C:  ADC #$17
LB61E:  STA $B6
LB620:  PLA
LB621:  STA $B5
LB623:  JSR LB62E
LB626:  CLC
LB627:  LDA $B6
LB629:  STA $BA
LB62B:  LDA $B8
LB62D:  RTS
LB62E:  TXA
LB62F:  PHA
LB630:  LDA #$00
LB632:  STA $B7
LB634:  LDX #$08
LB636:  LSR $B5
LB638:  BCC LB63D
LB63A:  CLC
LB63B:  ADC $B6
LB63D:  ROR
LB63E:  ROR $B7
LB640:  DEX
LB641:  BNE LB636
LB643:  STA $B8
LB645:  PLA
LB646:  TAX
LB647:  RTS
LB648:  LDA $48
LB64A:  AND #$3F
LB64C:  STA $48
LB64E:  LDA $47
LB650:  AND #$3F
LB652:  STA $47
LB654:  LDA #$00
LB656:  STA $43
LB658:  LDA $47
LB65A:  STA $44
LB65C:  LSR $44
LB65E:  ROR $43
LB660:  ROR $44
LB662:  ROR $43
LB664:  ROR $44
LB666:  ROR $43
LB668:  CLC
LB669:  LDA $43
LB66B:  ADC $41
LB66D:  STA $43
LB66F:  LDA $44
LB671:  ADC $42
LB673:  STA $44
LB675:  LDA $48
LB677:  LSR
LB678:  TAY
LB679:  RTS

LB67A:  LDY #$00
LB67C:  LDA ($29),Y
LB67E:  STA $7500,Y
LB681:  INY
LB682:  CPY #$20
LB684:  BNE LB67C
LB686:  LDA #$20
LB688:  JSR LBC8F
LB68B:  LDA #$3F
LB68D:  STA PPUBuffer,X
LB690:  INX
LB691:  LDA #$00
LB693:  STA PPUBuffer,X
LB696:  LDY #$00
LB698:  LDA ($29),Y
LB69A:  INX
LB69B:  STA PPUBuffer,X
LB69E:  INY
LB69F:  CPY #$20
LB6A1:  BNE LB698
LB6A3:  LDA #$01
LB6A5:  JSR LBC8F
LB6A8:  LDA #$00
LB6AA:  STA PPUBuffer,X
LB6AD:  INX
LB6AE:  LDA #$00
LB6B0:  STA PPUBuffer,X
LB6B3:  INX
LB6B4:  LDA #$00
LB6B6:  STA PPUBuffer,X
LB6B9:  JSR LB6CA
LB6BC:  RTS
LB6BD:  LDA $49
LB6BF:  ASL
LB6C0:  ASL
LB6C1:  ASL
LB6C2:  ASL
LB6C3:  CLC
LB6C4:  ADC $4A
LB6C6:  TAY
LB6C7:  LDA ($41),Y
LB6C9:  RTS
LB6CA:  LDA $0300
LB6CD:  BEQ LB6D3
LB6CF:  LDA #$01
LB6D1:  STA $0E
LB6D3:  RTS
LB6D4:  LDA $2A
LB6D6:  STA $30
LB6D8:  JSR LB6E1
LB6DB:  LDA DelayConst
LB6DD:  JSR LB9CA
LB6E0:  RTS
LB6E1:  PHA
LB6E2:  LDA #$D4
LB6E4:  STA HideUprSprites
LB6E6:  PLA
LB6E7:  STA $30
LB6E9:  LDA #$15
LB6EB:  STA $2A
LB6ED:  LDA #$16
LB6EF:  STA $29
LB6F1:  LDA #$09
LB6F3:  STA $2E
LB6F5:  LDA #$03
LB6F7:  STA $2D
LB6F9:  JSR $C003
LB6FC:  RTS

LB6FD:  .byte $33, $33, $33

;----------------------------------------------------------------------------------------------------

ShowWhoWnd:
LB700:  LDY #$00
LB702:  LDX #$00
LB704:  LDA $B759,X
LB707:  STA TextBuffer,X
LB70A:  INX
LB70B:  CPX #$06
LB70D:  BNE LB704
LB70F:  LDA ($91),Y
LB711:  STA $0580,X
LB714:  INX
LB715:  INY
LB716:  CPX #$0B
LB718:  BNE LB70F
LB71A:  LDA #$FD
LB71C:  STA $0580,X
LB71F:  INX
LB720:  LDY #$00
LB722:  LDA ($93),Y
LB724:  STA $0580,X
LB727:  INX
LB728:  INY
LB729:  CPX #$11
LB72B:  BNE LB722
LB72D:  LDA #$FD
LB72F:  STA $0580,X
LB732:  INX
LB733:  LDY #$00
LB735:  LDA ($95),Y
LB737:  STA $0580,X
LB73A:  INX
LB73B:  INY
LB73C:  CPX #$17
LB73E:  BNE LB735
LB740:  LDA #$FD
LB742:  STA $0580,X
LB745:  INX
LB746:  LDY #$00
LB748:  LDA ($97),Y
LB74A:  STA $0580,X
LB74D:  INX
LB74E:  INY
LB74F:  CPX #$1D
LB751:  BNE LB748
LB753:  LDA #$FF
LB755:  STA $0580,X
LB758:  RTS

;              W    H    O    _    _    \n
LB759:  .byte $A0, $91, $98, $00, $00, $FD

LB75F:  LDA #SPRT_HIDE
LB761:  STA $7300,X
LB764:  INX
LB765:  INX
LB766:  INX
LB767:  INX
LB768:  DEY
LB769:  BNE LB761
LB76B:  RTS

LB76C: .byte $33, $33, $33, $36, $66, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33
LB77C: .byte $33, $33, $33, $33

LB780:  LDA $19
LB782:  ASL
LB783:  TAY
LB784:  LDA $18
LB786:  ASL
LB787:  TAX
LB788:  LDA $0091,Y
LB78B:  STA $2D
LB78D:  LDA $0092,Y
LB790:  STA $2E
LB792:  LDA $91,X
LB794:  STA $0091,Y
LB797:  LDA $92,X
LB799:  STA $0092,Y
LB79C:  LDA $2D
LB79E:  STA $91,X
LB7A0:  LDA $2E
LB7A2:  STA $92,X
LB7A4:  LDA $19
LB7A6:  ASL
LB7A7:  ASL
LB7A8:  ASL
LB7A9:  ASL
LB7AA:  TAX
LB7AB:  LDA $18
LB7AD:  ASL
LB7AE:  ASL
LB7AF:  ASL
LB7B0:  ASL
LB7B1:  TAY
LB7B2:  RTS

LB7B3:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33
LB7C3:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $36, $66, $33, $33
LB7D3:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33
LB7E3:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $36, $66, $33, $33
LB7F3:  .byte $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33, $33

LB800:  LDA MapProperties
LB802:  CMP #$0C
LB804:  BNE LB863
LB806:  LDA $CE
LB808:  PHA
LB809:  LDA #$04
LB80B:  STA WndXPos
LB80D:  LDA #$02
LB80F:  STA WndYPos
LB811:  LDA #$06
LB813:  STA WndWidth
LB815:  LDA #$04
LB817:  STA WndHeight
LB819:  JSR ShowWindow1         ;($C015)Show a window on the screen.

LB81C:  LDA $D3
LB81E:  LSR
LB81F:  LSR
LB820:  LSR
LB821:  LSR
LB822:  CLC
LB823:  ADC #$E8
LB825:  STA $0580
LB828:  LDA $D4
LB82A:  LSR
LB82B:  LSR
LB82C:  LSR
LB82D:  LSR
LB82E:  CLC
LB82F:  ADC #$E8
LB831:  STA $0582
LB834:  LDA #$00
LB836:  STA $0581
LB839:  LDX $D5
LB83B:  LDA $B864,X
LB83E:  STA $0583
LB841:  LDA #$FF
LB843:  STA $0584
LB846:  LDA #$FF
LB848:  STA $30
LB84A:  LDA #$05
LB84C:  STA $2A
LB84E:  LDA #$04
LB850:  STA $29
LB852:  LDA #$04
LB854:  STA $2E
LB856:  LDA #$01
LB858:  STA $2D
LB85A:  JSR $C003
LB85D:  JSR LB6CA
LB860:  PLA
LB861:  STA $CE
LB863:  RTS

LB864:  .byte $97, $8E, $9C, $A0, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
LB874:  .byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF

LB880:  LDX #$00
LB882:  LDY #$FF
LB884:  TXA
LB885:  AND #$08
LB887:  BNE LB88B
LB889:  LDY #$00
LB88B:  TYA
LB88C:  STA BlocksBuffer,X
LB88F:  INX
LB890:  CPX #$40
LB892:  BNE LB882
LB894:  LDA #$74
LB896:  STA $2A
LB898:  LDA #$00
LB89A:  STA $29
LB89C:  LDA #$1C
LB89E:  STA $2C
LB8A0:  LDA #$40
LB8A2:  STA $2B
LB8A4:  LDA #$00
LB8A6:  STA $2E
LB8A8:  LDA #$40
LB8AA:  STA $2D
LB8AC:  JSR $C006
LB8AF:  INC $2C
LB8B1:  JSR $C006
LB8B4:  RTS

LB8B5:  .byte $00, $00, $00, $F8, $FC, $FC, $00, $F0, $F0, $E0, $E0, $00, $00, $00, $1E, $00
LB8C5:  .byte $3E, $1E, $1E, $01, $01, $3F, $1F, $7F, $3F, $1F, $1F, $3E, $7E, $00, $00, $00
LB8D5:  .byte $00, $00, $18, $3F, $7F, $7F, $01, $1F, $1F, $0F, $07, $00, $00, $00, $F0, $00
LB8E5:  .byte $F8, $F0, $F0, $00, $00, $F8, $F0, $FC, $F8, $F0, $F0, $F8, $FC, $00, $00, $00
LB8F5:  .byte $00, $00, $30, $F8, $FC, $FC, $00, $F0, $F0, $E0, $C0

CalcEnDmg:
LB900:  LDA $B8
LB902:  STA BinInputLB
LB904:  LDA #$00
LB906:  STA BinInputUB
LB908:  LDA $C9
LB90A:  BPL LB916

LB90C:  LDA $30
LB90E:  AND #$FC
LB910:  CLC
LB911:  ADC #$03
LB913:  JMP LB918

LB916:  LDA $30
LB918:  STA $30
LB91A:  LDA En1Type
LB91D:  CMP #EN_LRD_BRIT
LB91F:  BEQ LB932
LB921:  LDA $30
LB923:  ASL
LB924:  TAY
LB925:  LDA EnHPBase,Y
LB928:  SEC
LB929:  SBC $B8
LB92B:  BCC LB93B
LB92D:  BEQ LB93B
LB92F:  STA EnHPBase,Y

LB932:  LDA #$28
LB934:  STA $2A
LB936:  JSR LB6D4
LB939:  CLC
LB93A:  RTS
LB93B:  LDA #$00
LB93D:  STA EnHPBase,Y
LB940:  LDY #CHR_EXP
LB942:  LDA (CrntChrPtr),Y
LB944:  CLC
LB945:  ADC $CA
LB947:  STA (CrntChrPtr),Y
LB949:  INY
LB94A:  LDA (CrntChrPtr),Y
LB94C:  ADC #$00
LB94E:  STA (CrntChrPtr),Y
LB950:  LDA $30
LB952:  ASL
LB953:  ASL
LB954:  ASL
LB955:  ASL
LB956:  TAX
LB957:  LDA #SPRT_HIDE
LB959:  STA $7344,X
LB95C:  STA $7348,X
LB95F:  STA $734C,X
LB962:  STA $7350,X
LB965:  LDA $C9
LB967:  BPL LB976
LB969:  TXA
LB96A:  SEC
LB96B:  SBC #$30
LB96D:  CLC
LB96E:  ADC #$44
LB970:  TAX
LB971:  LDY #$0C
LB973:  JSR LB75F
LB976:  CLC
LB977:  LDA $30
LB979:  ADC #$04
LB97B:  TAX
LB97C:  LDA #$F0
LB97E:  STA $03E0,X
LB981:  LDX #$00
LB983:  LDY #$08
LB985:  LDA #$00
LB987:  ORA EnHPBase,X
LB98A:  INX
LB98B:  INX
LB98C:  DEY
LB98D:  BNE LB987
LB98F:  TAX
LB990:  BNE LB9A8
LB992:  LDA $CA
LB994:  STA $A0
LB996:  LDA #$00
LB998:  STA $A1
LB99A:  LDA #$DC
LB99C:  STA $30
LB99E:  JSR LB6E1
LB9A1:  LDA DelayConst
LB9A3:  JSR LB9CA
LB9A6:  SEC
LB9A7:  RTS
LB9A8:  LDA #$23
LB9AA:  STA $30
LB9AC:  JSR LB6E1
LB9AF:  LDA DelayConst
LB9B1:  JSR LB9CA
LB9B4:  LDA $CA
LB9B6:  STA $A0
LB9B8:  LDA #$00
LB9BA:  STA $A1
LB9BC:  LDA #$DC
LB9BE:  STA $30
LB9C0:  JSR LB6E1
LB9C3:  LDA DelayConst
LB9C5:  JSR LB9CA
LB9C8:  CLC
LB9C9:  RTS

LB9CA:  CLC
LB9CB:  ADC $00
LB9CD:  CMP $00
LB9CF:  BNE LB9CD
LB9D1:  RTS

LB9D0:  .byte $0F, $00, $00, $00, $00, $01, $7F, $7F, $FF, $3F, $11, $FF, $7F, $7E, $00, $00
LB9E0:  .byte $00, $C0, $E0, $E0, $80, $C0, $00, $00, $C0, $E0, $F0, $F0, $F0, $F8, $D0, $D8
LB9F0:  .byte $D8, $3C, $00, $00, $08, $1C, $F8, $FC, $FC, $FE, $FF, $FF, $F6, $E0

LBA00:  TXA
LBA01:  PHA
LBA02:  TYA
LBA03:  PHA
LBA04:  LDA $30
LBA06:  ASL
LBA07:  ASL
LBA08:  ASL
LBA09:  ASL
LBA0A:  PHA
LBA0B:  TAX
LBA0C:  LDY #$00
LBA0E:  LDA $7304,X
LBA11:  STA $73C4,Y
LBA14:  INX
LBA15:  INY
LBA16:  CPY #$10
LBA18:  BNE LBA0E
LBA1A:  PLA
LBA1B:  TAX
LBA1C:  LDA #$FC
LBA1E:  STA $73C5
LBA21:  LDA #$FD
LBA23:  STA $73CD
LBA26:  LDA #$FE
LBA28:  STA $73C9
LBA2B:  LDA #$FF
LBA2D:  STA $73D1
LBA30:  LDA #$03
LBA32:  STA $73C6
LBA35:  STA $73CA
LBA38:  STA $73CE
LBA3B:  STA $73D2
LBA3E:  LDA #SPRT_HIDE
LBA40:  STA $73C4
LBA43:  STA $73C8
LBA46:  STA $73CC
LBA49:  STA $73D0
LBA4C:  LDY #$00
LBA4E:  JMP LBA5B
LBA51:  LDA #$06
LBA53:  JSR LB9CA
LBA56:  INY
LBA57:  CPY #$06
LBA59:  BEQ LBAA8
LBA5B:  LDA $73C4
LBA5E:  CMP #SPRT_HIDE
LBA60:  BNE LBA85
LBA62:  LDA $7304,X
LBA65:  STA $73C4
LBA68:  STA $73CC
LBA6B:  CLC
LBA6C:  ADC #$08
LBA6E:  STA $73C8
LBA71:  STA $73D0
LBA74:  LDA #SPRT_HIDE
LBA76:  STA $7304,X
LBA79:  STA $7308,X
LBA7C:  STA $730C,X
LBA7F:  STA $7310,X
LBA82:  JMP LBA51
LBA85:  LDA $73C4
LBA88:  STA $7304,X
LBA8B:  STA $730C,X
LBA8E:  CLC
LBA8F:  ADC #$08
LBA91:  STA $7308,X
LBA94:  STA $7310,X
LBA97:  LDA #SPRT_HIDE
LBA99:  STA $73C4
LBA9C:  STA $73C8
LBA9F:  STA $73CC
LBAA2:  STA $73D0
LBAA5:  JMP LBA51
LBAA8:  LDA #SPRT_HIDE
LBAAA:  STA $7300
LBAAD:  LDA #$00
LBAAF:  STA $7302
LBAB2:  PLA
LBAB3:  TAY
LBAB4:  PLA
LBAB5:  TAX
LBAB6:  RTS

LBAB7:  .byte $00, $E0, $E6, $E6, $00, $F0, $F8, $F8, $FC, $00, $00, $00, $00, $00, $00, $C0
LBAC7:  .byte $E0, $0F, $1F, $1F, $1F, $3F, $3F, $FF, $9F, $73, $30, $00, $0F, $00, $00, $00
LBAD7:  .byte $00, $0F, $0F, $0F, $00, $1F, $3F, $3F, $7F, $00, $00, $00, $00, $00, $00, $06
LBAE7:  .byte $0E, $E0, $F0, $F0, $F0, $F8, $F8, $FE, $F2, $9C, $18, $00, $E0, $00, $00, $00
LBAF7:  .byte $00, $E0, $E0, $E0, $00, $F0, $F8, $F8, $FC

LBB00:  LDA $B3
LBB02:  ASL
LBB03:  ASL
LBB04:  ASL
LBB05:  ASL
LBB06:  TAX
LBB07:  LDA $B4
LBB09:  AND #$FE
LBB0B:  STA $73C4
LBB0E:  LDA #$FB
LBB10:  STA $73C5
LBB13:  LDA #$03
LBB15:  STA $73C6
LBB18:  LDA $7307,X
LBB1B:  CLC
LBB1C:  ADC #$04
LBB1E:  STA $73C7
LBB21:  LDY $19
LBB23:  LDX #$00
LBB25:  TYA
LBB26:  BEQ LBB2F
LBB28:  LDX #$04
LBB2A:  TYA
LBB2B:  BPL LBB2F
LBB2D:  LDX #$FC
LBB2F:  STX $19
LBB31:  LDY $18
LBB33:  LDX #$00
LBB35:  TYA
LBB36:  BEQ LBB3F
LBB38:  LDX #$04
LBB3A:  TYA
LBB3B:  BPL LBB3F
LBB3D:  LDX #$FC
LBB3F:  STX $18
LBB41:  LDA $00
LBB43:  CMP $00
LBB45:  BEQ LBB43
LBB47:  LDY #$00
LBB49:  LDX #$44
LBB4B:  LDA $B3
LBB4D:  CMP #$04
LBB4F:  BCC LBB55
LBB51:  LDY #$04
LBB53:  LDX #$04
LBB55:  LDA $7300,X
LBB58:  CMP $73C4
LBB5B:  BNE LBB6F
LBB5D:  LDA $7303,X
LBB60:  CLC
LBB61:  ADC #$04
LBB63:  CMP $73C7
LBB66:  BNE LBB6F
LBB68:  LDA #SPRT_HIDE
LBB6A:  STA $73C4
LBB6D:  CLC
LBB6E:  RTS
LBB6F:  TXA
LBB70:  CLC
LBB71:  ADC #$10
LBB73:  TAX
LBB74:  INY
LBB75:  CPY #$08
LBB77:  BNE LBB55
LBB79:  CLC
LBB7A:  LDA $73C4
LBB7D:  ADC $18
LBB7F:  STA $73C4
LBB82:  BEQ LBB9A
LBB84:  CMP #$E0
LBB86:  BEQ LBB9A
LBB88:  CLC
LBB89:  LDA $73C7
LBB8C:  ADC $19
LBB8E:  STA $73C7
LBB91:  BEQ LBB9A
LBB93:  CMP #$A0
LBB95:  BEQ LBB9A
LBB97:  JMP LBB41
LBB9A:  LDA #SPRT_HIDE
LBB9C:  STA $73C4
LBB9F:  SEC
LBBA0:  RTS

LBBA1:  .byte $00, $00, $10, $10, $D0, $D0, $F0, $E0, $F0, $F0, $F8, $F8, $F8, $F0, $F0, $70
LBBB1:  .byte $1C, $8C, $E0, $F0, $F0, $70, $00, $E0, $E4, $EC, $80, $00, $00, $80, $F8, $00
LBBC1:  .byte $00, $00, $00, $00, $0D, $0D, $06, $0F, $1F, $1F, $1F, $3F, $3F, $3F, $19, $07
LBBD1:  .byte $03, $00, $07, $00, $00, $00, $00, $08, $04, $07, $00, $0F, $1F, $1F, $3F, $00
LBBE1:  .byte $00, $00, $10, $30, $D0, $D6, $FE, $E0, $F0, $F0, $F8, $F8, $F8, $F6, $F6, $78
LBBF1:  .byte $10, $00, $E0, $F0, $F8, $78, $00, $E0, $E0, $E0, $00, $00, $00, $80, $FC

SetCharSprites:
LBC00:  LDA OnBoat
LBC02:  BEQ LBC45

LBC04:  LDA #$70
LBC06:  STA $7304
LBC09:  STA $7307
LBC0C:  STA $730B

LBC0F:  LDA #$78
LBC11:  STA $730F
LBC14:  STA $7313

LBC17:  LDA #$10
LBC19:  STA $7305

LBC1C:  LDA #$11
LBC1E:  STA $7309

LBC21:  LDA #$12
LBC23:  STA $730D

LBC26:  LDA #$13
LBC28:  STA $7311

LBC2B:  LDA #$03
LBC2D:  STA $7306
LBC30:  STA $730A
LBC33:  STA $730E
LBC36:  STA $7312

LBC39:  LDA #SPRT_HIDE
LBC3B:  STA $7314
LBC3E:  STA $7324
LBC41:  STA $7334
LBC44:  RTS

LBC45:  LDY #$00
LBC47:  LDX #$00

LBC49:  LDA $BC87,X
LBC4C:  STA $7304,Y
LBC4F:  INY
LBC50:  INY
LBC51:  INY
LBC52:  INX
LBC53:  LDA $BC87,X
LBC56:  STA $7304,Y
LBC59:  INY
LBC5A:  INX
LBC5B:  TXA
LBC5C:  AND #$07
LBC5E:  TAX
LBC5F:  CPY #$40
LBC61:  BNE LBC49

LBC63:  LDY #$0B
LBC65:  LDA (Pos2ChrPtr),Y
LBC67:  CMP #$03
LBC69:  BCC LBC70
LBC6B:  LDA #SPRT_HIDE
LBC6D:  STA $7314
LBC70:  LDA (Pos3ChrPtr),Y
LBC72:  CMP #$03
LBC74:  BCC LBC7B
LBC76:  LDA #SPRT_HIDE
LBC78:  STA $7324
LBC7B:  LDA (Pos4ChrPtr),Y
LBC7D:  CMP #$03
LBC7F:  BCC LBC86
LBC81:  LDA #SPRT_HIDE
LBC83:  STA $7334
LBC86:  RTS

LBC87:  .byte $70, $70, $78, $70, $70, $78, $78, $78

LBC8F:  PHA
LBC90:  CLC
LBC91:  ADC $0300
LBC94:  BCS LBCAA
LBC96:  TAX
LBC97:  LDA DisSpriteAnim
LBC99:  ORA $9F
LBC9B:  BEQ LBCA5
LBC9D:  TXA
LBC9E:  CMP #$60
LBCA0:  BCC LBCB2
LBCA2:  JMP LBCAA
LBCA5:  TXA
LBCA6:  CMP #$20
LBCA8:  BCC LBCB2
LBCAA:  LDA #$01
LBCAC:  STA $0E
LBCAE:  LDA $0E
LBCB0:  BNE LBCAE
LBCB2:  LDA #$00
LBCB4:  STA $0E
LBCB6:  LDX $0300
LBCB9:  INX
LBCBA:  CLC
LBCBB:  PLA
LBCBC:  ADC #$02
LBCBE:  STA PPUBuffer,X
LBCC1:  INX
LBCC2:  SEC
LBCC3:  ADC $0300
LBCC6:  STA $0300
LBCC9:  RTS

LBCCA:  .byte $BD, $FA, $F0, $E0, $C2, $C0, $AC, $F1, $FE, $B0, $C7, $FC, $FF, $FC, $E0, $D2
LBCDA:  .byte $E0, $F0, $F8, $7C, $DF, $FF, $3F, $FF, $3F, $E3, $0D, $7F, $8F, $35, $FF, $FB
LBCEA:  .byte $3E, $1F, $0F, $07, $4B, $07, $4A, $2A, $AF, $A7, $77, $F7, $6F, $FF, $03, $43
LBCFA:  .byte $07, $0F, $5F, $BD, $FF, $FB

LBD00:  LDA #$00
LBD02:  STA $B5
LBD04:  LDX #$04
LBD06:  TXA
LBD07:  PHA
LBD08:  JSR LBD41
LBD0B:  CPX #$06
LBD0D:  BCS LBD25
LBD0F:  STX $30
LBD11:  INX
LBD12:  INX
LBD13:  JSR LBD41
LBD16:  DEX
LBD17:  DEX
LBD18:  CPX $30
LBD1A:  BEQ LBD25
LBD1C:  INC $B5
LBD1E:  TXA
LBD1F:  TAY
LBD20:  LDX $30
LBD22:  JSR LBD5A
LBD25:  PLA
LBD26:  TAX
LBD27:  DEX
LBD28:  DEX
LBD29:  CPX #$04
LBD2B:  BCC LBD06
LBD2D:  CLC
LBD2E:  LDA $B5
LBD30:  BEQ LBD35
LBD32:  JSR $C03F
LBD35:  LDX #$00
LBD37:  JSR LBD41
LBD3A:  CPX #$00
LBD3C:  CLC
LBD3D:  BNE LBD40
LBD3F:  SEC
LBD40:  RTS
LBD41:  LDY #CHR_COND
LBD43:  LDA $91,X
LBD45:  STA $99
LBD47:  LDA $92,X
LBD49:  STA $9A
LBD4B:  CPX #$08
LBD4D:  BEQ LBD59
LBD4F:  LDA (CrntChrPtr),Y
LBD51:  CMP #$03
LBD53:  BCS LBD59
LBD55:  INX
LBD56:  INX
LBD57:  BCC LBD43
LBD59:  RTS
LBD5A:  TYA
LBD5B:  PHA
LBD5C:  TXA
LBD5D:  LSR
LBD5E:  STA $19
LBD60:  CLC
LBD61:  ADC #$01
LBD63:  STA $18
LBD65:  ASL
LBD66:  PHA
LBD67:  JSR LB780
LBD6A:  PLA
LBD6B:  TAX
LBD6C:  PLA
LBD6D:  TAY
LBD6E:  STA $30
LBD70:  CPX $30
LBD72:  BNE LBD5A
LBD74:  RTS
LBD75:  TXA
LBD76:  PHA
LBD77:  LDX #$00
LBD79:  LDA $4A
LBD7B:  SEC
LBD7C:  SBC $48
LBD7E:  BMI LBD82
LBD80:  EOR #$FF
LBD82:  CMP #$F8
LBD84:  JSR LBD9C
LBD87:  LDA $49
LBD89:  SEC
LBD8A:  SBC $47
LBD8C:  BMI LBD92
LBD8E:  EOR #$FF
LBD90:  ADC #$00
LBD92:  CMP #$F9
LBD94:  JSR LBD9C
LBD97:  CPX #$01
LBD99:  PLA
LBD9A:  TAX
LBD9B:  RTS
LBD9C:  BPL LBDA4
LBD9E:  CMP #$C8
LBDA0:  BMI LBDA4
LBDA2:  LDX #$FF
LBDA4:  RTS

LBDA5:  .byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF

LBDB4:  .byte $7D, $FD, $DB, $3F, $01, $41, $05, $07, $37, $6F, $FE, $DF, $FF, $F6, $EF, $EE
LBDC4:  .byte $E5, $F5, $54, $52, $DF, $FF, $BD, $FA, $F0, $E0, $C2, $C0, $AC, $F1, $FE, $B0
LBDD4:  .byte $C7, $FC, $FF, $FC, $E0, $D2, $E0, $F0, $F8, $7C, $DF, $FF, $3F, $FF, $3F, $E3
LBDE4:  .byte $0D, $7F, $8F, $35, $FF, $FB, $3E, $1F, $0F, $07, $4B, $07, $4A, $2A, $AF, $A7
LBDF4:  .byte $77, $F7, $6F, $FF, $03, $43, $07, $0F, $5F, $BD, $FF, $FB

LBE00:  LDA $15
LBE02:  LSR
LBE03:  LSR
LBE04:  LSR
LBE05:  LSR
LBE06:  CLC
LBE07:  ADC $18
LBE09:  CMP #$0F
LBE0B:  BCC LBE10
LBE0D:  SEC
LBE0E:  SBC #$0F
LBE10:  STA $71
LBE12:  LDA $14
LBE14:  STA $72
LBE16:  LDA $13
LBE18:  ROR $72
LBE1A:  ROR
LBE1B:  LSR
LBE1C:  LSR
LBE1D:  LSR
LBE1E:  CLC
LBE1F:  ADC $19
LBE21:  AND #$1F
LBE23:  STA $72
LBE25:  JSR $C02D
LBE28:  LDA #$20
LBE2A:  JSR LBC8F
LBE2D:  LDA #$23
LBE2F:  STA PPUBuffer,X
LBE32:  INX
LBE33:  LDA #$C0
LBE35:  STA PPUBuffer,X
LBE38:  INX
LBE39:  LDY #$00
LBE3B:  LDA AttribBuffer,Y
LBE3E:  STA PPUBuffer,X
LBE41:  INX
LBE42:  INY
LBE43:  CPY #$20
LBE45:  BNE LBE3B
LBE47:  LDA #$20
LBE49:  JSR LBC8F
LBE4C:  LDA #$23
LBE4E:  STA PPUBuffer,X
LBE51:  INX
LBE52:  LDA #$E0
LBE54:  STA PPUBuffer,X
LBE57:  INX
LBE58:  LDY #$00
LBE5A:  LDA $0520,Y
LBE5D:  STA PPUBuffer,X
LBE60:  INX
LBE61:  INY
LBE62:  CPY #$20
LBE64:  BNE LBE5A
LBE66:  LDA #$20
LBE68:  JSR LBC8F
LBE6B:  LDA #$27
LBE6D:  STA PPUBuffer,X
LBE70:  INX
LBE71:  LDA #$C0
LBE73:  STA PPUBuffer,X
LBE76:  INX
LBE77:  LDY #$00
LBE79:  LDA $0540,Y
LBE7C:  STA PPUBuffer,X
LBE7F:  INX
LBE80:  INY
LBE81:  CPY #$20
LBE83:  BNE LBE79
LBE85:  LDA #$20
LBE87:  JSR LBC8F
LBE8A:  LDA #$27
LBE8C:  STA PPUBuffer,X
LBE8F:  INX
LBE90:  LDA #$E0
LBE92:  STA PPUBuffer,X
LBE95:  INX
LBE96:  LDY #$00
LBE98:  LDA $0560,Y
LBE9B:  STA PPUBuffer,X
LBE9E:  INX
LBE9F:  INY
LBEA0:  CPY #$20
LBEA2:  BNE LBE98
LBEA4:  JSR LB6CA
LBEA7:  RTS

LBEA8:  .byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
LBEB8:  .byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
LBEC8:  .byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
LBED8:  .byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
LBEE8:  .byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
LBEF8:  .byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF

LBF00:  LDA #SFX_EX_FALL+INIT
LBF02:  STA ThisSFX
LBF04:  LDX #$02
LBF06:  TXA
LBF07:  PHA
LBF08:  LDA #$40
LBF0A:  STA $30
LBF0C:  JSR LB5FF
LBF0F:  LDA $BA
LBF11:  STA $48
LBF13:  LDA #$40
LBF15:  STA $30
LBF17:  JSR LB5FF
LBF1A:  LDA $BA
LBF1C:  STA $47
LBF1E:  JSR LBD75
LBF21:  BCS LBF4E
LBF23:  SEC
LBF24:  LDA $4A
LBF26:  SBC $48
LBF28:  CLC
LBF29:  ADC #$07
LBF2B:  AND #$0F
LBF2D:  STA $2E
LBF2F:  SEC
LBF30:  LDA $49
LBF32:  SBC $47
LBF34:  CLC
LBF35:  ADC #$07
LBF37:  CMP #$0F
LBF39:  AND #$0F
LBF3B:  ASL
LBF3C:  ASL
LBF3D:  ASL
LBF3E:  ASL
LBF3F:  ORA $2E
LBF41:  TAY
LBF42:  LDA ScreenBlocks,Y
LBF45:  AND #$70
LBF47:  ORA #$04
LBF49:  ORA #$80
LBF4B:  STA ScreenBlocks,Y
LBF4E:  LDA #$00
LBF50:  STA $2E
LBF52:  LDA $47
LBF54:  AND #$3F
LBF56:  ASL
LBF57:  ROL $2E
LBF59:  ASL
LBF5A:  ROL $2E
LBF5C:  ASL
LBF5D:  ROL $2E
LBF5F:  ASL
LBF60:  ROL $2E
LBF62:  ASL
LBF63:  ROL $2E
LBF65:  STA $30
LBF67:  LDA $48
LBF69:  LSR
LBF6A:  ORA $30
LBF6C:  CLC
LBF6D:  ADC #$00
LBF6F:  STA $43
LBF71:  LDA $2E
LBF73:  ADC #$78
LBF75:  STA $44
LBF77:  LDY #$00
LBF79:  LDA $4A
LBF7B:  LSR
LBF7C:  LDA ($43),Y
LBF7E:  BCS LBF86
LBF80:  AND #$0F
LBF82:  ORA #$40
LBF84:  BCC LBF8A
LBF86:  AND #$F0
LBF88:  ORA #$04
LBF8A:  STA ($43),Y
LBF8C:  PLA
LBF8D:  TAX
LBF8E:  DEX
LBF8F:  BEQ LBF94
LBF91:  JMP LBF06
LBF94:  RTS

;----------------------------------------------------------------------------------------------------

;Unused.
LBF95:  .byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF

;----------------------------------------------------------------------------------------------------

_RESET:
LBFA0:  LDA #$00                ;Disable NMI.
LBFA2:  STA PPUControl0         ;

LBFA5:  LDX #$02                ;
LBFA7:* LDA PPUStatus           ;Wait for at least one full screen to be drawn before continuing.
LBFAA:  BPL -                   ;Writes to PPUControl register are ignored for 30,000 clock cycles
LBFAC:  DEX                     ;after reset or power cycle.
LBFAD:  BNE -                   ;

LBFAF:  ORA #$FF                ;Reset the MMC1 chip. Bank0F at address $C000.
LBFB1:  STA MMCCfg              ;

LBFB4:  LDA #$1E                ;Configure the MMC1. Vertical mirroring, Last bank fixed.
LBFB6:  JSR ConfigMMC           ;($FFBC)Configure MMC1 mapper.
LBFB9:  JMP Reset1              ;($C000)Begin resetting the game.

;----------------------------------------------------------------------------------------------------

LBFBC:  STA MMCCfg              ;
LBFBF:  LSR                     ;
LBFC0:  STA MMCCfg              ;
LBFC3:  LSR                     ;
LBFC4:  STA MMCCfg              ;Load MMC1 configuration.
LBFC7:  LSR                     ;
LBFC8:  STA MMCCfg              ;
LBFCB:  LSR                     ;
LBFCC:  STA MMCCfg              ;
LBFCF:  RTS                     ;

;----------------------------------------------------------------------------------------------------

;Unused.
LBFD0:  .byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
LBFE0:  .byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF

;----------------------------------------------------------------------------------------------------

_NMI:
_IRQ:
LBFF0:  RTI                     ;Return from interrupt if ever executed.

;----------------------------------------------------------------------------------------------------

;Unused.
LBFF1:  .byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF

;----------------------------------------------------------------------------------------------------

LBFFA:  .word NMI               ;($FFF0)NMI vector.
LBFFC:  .word RESET             ;($FFA0)Reset vector.
LBFFE:  .word IRQ               ;($FFF0)IRQ vector.
